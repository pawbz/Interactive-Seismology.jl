[{"url":"cheatsheets/","title":"Cheatsheets","tags":["welcome"],"text":"Cheatsheets Getting Started with Julia - live . Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group Plots.jl cheatsheet"},{"url":"classes/","title":"Lecture Schedule","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Some basics Seismology in historical perspective: its development and significance within Earth Sciences Harmonic oscillator Waves on a string Modes of coupled-oscillator systems Basics of solid mechanics: stress and strain … Elastic wave equation Seismic equation of motion and constitutive equations Representation theorems in elastodynamics Lame’s theorem; P and S waves and their potentials P-SV and SH decomposition High-frequency approximation Ray theory, tracing, Fermat’s principle Basics of ray tomography Far-field approximation Planewaves, boundary conditions, and their reflection/transmission Seismic anisotropy Intrinsic attenuation Surface waves Rayleigh & Love waves and their dispersion Group and phase velocities Lamb’s problem Imaging Scattering, Born approximation, and inverse scattering Basics of full waveform inversion Passive seismic imaging and concepts of interferometry Normal modes of the Earth Eigenfrequencies Spheroidal and Toroidal modes of the Earth Mode splitting"},{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"installation/","title":"Software installation","tags":["welcome"],"text":"First-time setup: Install Julia & Pluto Text and pictures version: Step 1: Install Julia  1.8.2 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.8.2 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.8.2 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto , the notebook environment that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: \njulia> ]\n\n(@v 1.8 ) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: \n(@v 1.8 ) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  Featured Notebooks . These notebooks are useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fons\\Documents\\18S191_assignments\\  on Windows /Users/fons/Documents/18S191_assignments/  on MacOS /home/fons/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\n    console.log(el)\n    el.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"introduction/","title":"Seismology","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Seismology: Unveiling Earth’s Vibrations Seismology is the scientific study of earthquakes and the vibrations they generate within the Earth. By analyzing these seismic waves, seismologists can gain valuable insights into the structure and dynamics of our planet. Through the use of specialized instruments called seismometers, seismologists measure and record the ground motion caused by earthquakes. These recordings, known as seismograms, provide crucial data that can be used to understand the behavior of seismic waves as they propagate through different layers of the Earth. Seismology plays a vital role in various fields, including earthquake engineering, hazard assessment, and the exploration of natural resources. By studying seismic activity, scientists can assess the potential risks associated with earthquakes, develop strategies for building resilient structures, and even locate underground oil and gas reservoirs. In this course, we will delve into the fascinating world of seismology, exploring the principles and techniques used to analyze seismic data. By the end of this journey, you will have a solid foundation in seismology and be equipped with the tools to interpret seismic waves and unravel the secrets hidden beneath our feet. Let’s embark on this seismic adventure and discover the captivating realm of seismology together. “The joy of being a seismologist comes to you when you find something new about the Earth’s interior from the observation of seismic waves obtained on the surface, and realize that you did it without penetrating the Earth or touching or examining it directly.”\n— Keiiti Aki, 1980"},{"url":"logistics/","title":"Course Logistics","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Grading Assignments (40%); Mid term presentations (30%); End term exam (30%) Late assignments will receive no credit Mid/End Term Exams Open book exams, where you will have access to textbook chapters/ other reading material. The exam duration will be 3 Hrs.\nThe only thing that will not be allowed is interaction with peers."},{"url":"references/","title":"References","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Books Aki, Keiiti, and Paul G. Richards. Quantitative seismology. 2002. Shearer, Peter M. Introduction to seismology. Cambridge university press, 2019. Stein, Seth, and Michael Wysession. An introduction to seismology, earthquakes, and earth structure. John Wiley & Sons, 2009. Other Resources Live Jupyter Notebooks for Seismology Pluto Resources Pluto repository at Github How to Install Pluto  (straight from the main author Fons van der Plas) Sample notebooks are available via the index page after starting Pluto."},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"assets/scripts/get_highlights/","title":"get_highlights","tags":[],"text":"if isempty get metadata \"homepage\" , \"highlights\", nothing else highlights htl \"\"\" section div class \"content\" h2 x \"name\" h2 p x \"text\" p div div class \"preview\" img src \" x \"img\" \" div section \"\"\" for x in metadata \"homepage\" \"highlights\" htl \"\"\" div class \"subjectscontainer wide\" h1 Highlights h1 div class \"contain\" highlights div div \"\"\" end"},{"url":"assets/scripts/get_subjects/","title":"get_subjects","tags":[],"text":"let sections metadata \"sidebar\" sections htl \"\"\" let input other page.input output other page.output name get output.frontmatter, \"title\", basename input.relative path desc get output.frontmatter, \"description\", nothing tags get output.frontmatter, \"tags\", String image get output.frontmatter, \"image\", nothing class \"no decoration\", \"tag replace x, \" \" \" \" \" for x in tags ..., image nothing || isempty image ? nothing htl \"\"\" a title desc class class href root url \" \" other page.url h3 name h3 img src image a \"\"\" end for other page in collections section id .pages \"\"\" for section id, section name in sections isempty sections ? nothing htl \"\"\" div class \"wide subjectscontainer\" \"\"\" end"},{"url":"assets/tikz/tikz/","title":"tikz","tags":[],"text":" A Pluto.jl notebook v0.20.8 using Markdown using InteractiveUtils using TikzPictures, LaTeXStrings tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage booktabs \\usepackage tikzducks \\usepackage tikz 3dplot \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes, math \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary backgrounds, hobby \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \\tikzset pics wavelet .style n args 3 code \\draw fill 2, thick, domain 3 2, samples 200, smooth plot coordinates 1 \\node fill white at 1.5,0 3 % arguments frequency, time shift, amplitude, color \\tikzset pics ricker .style n args 4 code \\draw fill 4, thick, domain 3 2, samples 200, smooth plot \\x, 1 2 pi 1 \\x 2 1 \\x 2 e^ pi 1 \\x 2 1 \\x 2 3 \\tikzset pics meyer .style n args 4 code \\draw fill 4, thick, domain 3 2, samples 200, smooth plot \\x, sin 2 pi 1 200 \\x 2 sin pi 1 200 \\x 2 pi 1 200 \\x 2 20 3 \\tikzset pics poisson .style n args 4 code \\draw fill 4, thick, domain 3 2, samples 200, smooth plot \\x, 3 1 \\x 2 \\x 2 1 1 1 \\x 2 \\x 2 1 1 1 \\x 2 \\x 2 1 1 \\newcommand\\waveletone 5 \\begin scope shift 1 , rotate 0 \\draw fill 5, thick, domain 3 2, samples 200, smooth plot \\x, \\x 3 1 2 pi 2 \\x 3 2 \\x 3 e^ pi 2 \\x 3 2 \\x 3 4 \\end scope \\newcommand\\wavelettwo 5 \\begin scope shift 1 , rotate 0 \\draw fill 5, thick, domain 3 2, samples 200, smooth plot \\x, 1 2 pi 2 \\x 3 2 \\x 3 e^ pi 2 \\x 3 2 \\x 3 4 \\end scope \\newcommand\\waveletthree 5 \\begin scope shift 1 , rotate 0 \\draw fill 5, thick, domain 3 2, samples 200, smooth plot \\x, \\x \\x 3 1 2 pi 2 \\x 3 2 \\x 3 e^ pi 2 \\x 3 2 \\x 3 4 \\end scope \\newcommand\\hx 6cm \\newcommand\\dx 0.5cm \\newcommand\\hz 3cm \\newcommand\\dz 0.5cm \\tikzset pics spike .style code \\draw draw gray, thick, fill gray, 0,0 rectangle 0.2cm,0.2cm \\draw very thick,black .1cm,0 .1cm, 0.2cm , pics receivers .style n args 2 code \\foreach \\x in 0, 0.8, 1.6, 2.4, 3.2, 4.0 \\pic at \\x,0 spike \\draw 0,0 4,0 \\node scale 2 at 4.0,0.5cm receivers , pics truck .style n args 6 code \\node xshift 2.6 \\hx,yshift 2 \\hz at 0,0 s1 \\node xshift \\hx 4,yshift 2 \\hz at 0,0 s2 \\draw very thick, black 90, , stealth s1 s2 \\filldraw pattern horizontal lines light gray s1 rectangle yshift \\hz 2 s2 \\draw fill gray 20 1 \\hx 1.7cm, 2 \\hz 0.4cm 1 \\hx 1.7cm, 2 \\hz 0.4cm 1 \\hx 1.7cm, 2 \\hz 2.2cm 1 \\hx 0.7cm, 2 \\hz 2.2cm 1 \\hx 0.6cm, 2 \\hz 1.6cm 1 \\hx 1.7cm, 2 \\hz 1.6cm 1 \\hx 1.7cm, 2 \\hz 0.4cm \\node at 1 \\hx 1.7cm, 2 \\hz .8cm s9 \\draw fill gray 50 1 \\hx 1.3cm, 2 \\hz 1cm rectangle 1 \\hx 0.3cm, 2 \\hz 1.2cm \\draw fill gray 5 1 \\hx 1cm, 2 \\hz 1.2cm rectangle 1 \\hx 1.5cm, 2 \\hz 1.7cm \\draw fill gray 80 1 \\hx 1cm, 2 \\hz .4cm circle 0.4cm node c1 \\draw fill gray 80 1 \\hx 1cm, 2 \\hz .4cm circle 0.4cm \\node scale 2 at 1 \\hx .7cm, 2 \\hz 1.9cm source \\node at 1 \\hx 3.9cm, 2 \\hz s10 \\draw thick s9.south s10.north \\draw snake expanding waves,segment angle 90, 3,segment length 4,thick 1 \\hx 1cm, 2 \\hz 1 \\hx 1cm, 2 \\hz 1.5cm \\draw snake expanding waves,segment angle 90, 5,segment length 6,thick 1 \\hx 1cm, 2 \\hz 1 \\hx 1cm, 2 \\hz 1.5cm \\draw snake snake, 3,segment length 4,thick 1 \\hx 2.7cm, 2 \\hz .5cm 2.55 \\hx, 2 \\hz .5cm \\draw snake snake, 5,segment length 6,thick 1 \\hx 2.7cm, 2 \\hz .7cm 2.55 \\hx, 2 \\hz .7cm \\pic at s10.north receivers 1 2 \\tikzset pics crust .style n args 6 code \\coordinate c0 at 4, 1 \\coordinate c1 at 3, 1.1 \\coordinate c2 at 2, 1.2 \\coordinate c3 at 1, 1.3 \\coordinate c4 at 0, 1.4 \\coordinate c5 at 1, 1.6 \\coordinate c6 at 2, 1.8 % Round rectangle \\fill gray 10 4,0 rectangle 3, 3 % Interface \\draw gray,line width .5pt,draw,decorate,decoration border,angle 45, amplitude 0.3cm,segment length 2mm 4,0 3,0 % Vertical dashed line \\draw gray 20 0, 3 0,0 \\draw black 20 4, 3 3, 3 % Incidence \\foreach \\x \\i \\y \\s \\c in 2 1 1.2 1 4, 0.5 2 1.35 2 5,1 3 1.6 3 6 \\node scale 1.5, star, star point ratio 0.5, star points 3, fill black,anchor center at \\x,0 rec\\i \\draw rec\\i node above receiver \\ \\i \\draw snake snake,thick,segment length \\s,\\c \\x 0.2, 3 \\x 0.1,\\y node midway,right P \\draw snake snake,thick,segment length \\s,\\c, dashed \\x 0.1,\\y rec\\i node midway,right S % Media names \\node align left at 3.4, 1.75 subducting \\\\plate % \\draw line width .6pt 0,0 % 135 .12cm 45 .12cm % 45 .12cm 135 .12cm % Interface pointer \\draw latex,thick 2.25,0.5 node right free surface to out 180,in 90 2,0 \\draw black, thick,pattern horizontal lines,pattern color gray plot smooth, tension 0.01 coordinates c0 c1 c2 c3 c4 c5 c6 3, 1.9 3, 2.3 2, 2.1 1, 1.9 0, 1.8 1, 1.7 2, 1.6 3, 1.5 4, 1.5 \"\"\" plot code width \"\", preamble raw\"\", options raw\"\" TikzPicture code, options tikz default options options, preamble tikz preamble preamble, width width tikz default options raw\"\"\"scale 2\"\"\" plot L\"\"\" \\draw 1,0 0,1 \"\"\", options raw\"\"\"scale 2\"\"\" plot L\"\"\" \\tikzset pics blob .style code \\draw use Hobby shortcut, fill, closed 0,0 0 1 4 rnd \\foreach \\a in 60,120,...,350 .. \\a 1 4 rnd \\pic at 0,0 fill green 30, scale 1, rotate 360 rnd blob \"\"\" md\" Ricker\" "},{"url":"eqdata/my-first-seismogram/","title":"My First Seismogram","tags":["eqdata"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"My First Seismogram\" date \"2025 08 06\" layout \"layout.jlhtml\" description \"Plot measured seismic waves due to large magnitude earthquakes\" tags \"eqdata\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using CondaPkg CondaPkg.add pip \"obspy\" end using PythonCall, PlutoPlotly using PlutoUI, FFTW, StatsBase using Colors PlutoUI.TableOfContents include definitions true md\"\"\" My First Seismogram This notebook lets users interactively select a global earthquake and a seismic station, then downloads and visualizes the corresponding seismogram data. It also marks theoretical seismic phase arrivals on the trace using the TauP toolkit for educational exploration. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Parameters Select Receivers distance to the earthquake in degrees Min Distance bind minradius Slider 0 0.5 180, show value true, default 10 Max Distance bind maxradius Slider 0 0.5 180, show value true, default 90 Frequency Filter Hz Minimum Frequency bind freqmin Slider 0.01 0.01 0.1, show value true, default 0.05 Maximum Frequency bind freqmax Slider 0.2 0.01 1.0, show value true, default 0.5 Total Duration seconds bind total duration Slider 1000 10 5000, show value true, default 4000 \"\"\" md\" Random Earthquake and Station Selection\" md\" Selected Indices\" md\" Station List\" md\" Data Download\" md\" TauP\" md\" Earthquake List\" md\" Appendix\" obspy pyimport \"obspy\" begin starttime obspy.UTCDateTime \"2000 01 01\" endtime obspy.UTCDateTime \"2024 12 31\" min magnitude 7.5 end taup pyimport \"obspy.taup\" model taup.TauPyModel model \"iasp91\" UTCDateTime obspy.UTCDateTime fdsn pyimport \"obspy.clients.fdsn\" iris pyimport \"obspy.clients.iris\" client fdsn.Client \"IRIS\" Fetch events from IRIS catalog client.get events starttime starttime, endtime endtime, minmagnitude min magnitude Store earthquake details in a structured format earthquake list \"Mw event.magnitudes 0 .mag at event.origins 0 .time \", event.origins 0 .time, event.origins 0 .latitude, event.origins 0 .longitude, event.origins 0 .depth 1000, event.magnitudes 0 .mag for event in catalog earthquakes event.origins 0 .time, event.origins 0 .latitude, event.origins 0 .longitude, event.magnitudes 0 .mag for event in catalog bind clicked eq let p PlutoPlot Plot scattergeo lon pyconvert. Float64, e 3 for e in earthquakes , lat pyconvert. Float64, e 2 for e in earthquakes , text pyconvert. String, string \"M\", e 4 , \" at \", e 1 for e in earthquakes , mode \"markers\", marker attr size 6, color \"red\" , Layout title \"Earthquakes click on the map to select \" add plotly listener p, \"plotly click\", \" e console.log e let dt e.points 0 PLOT.value dt.lat, dt.lon PLOT.dispatchEvent new CustomEvent 'input' \" p end default eq let eq rand earthquakes pyconvert. Float64, eq 2 , eq 3 end Extract details of the selected earthquake filtered using lat lon begin selected eq clicked eq nothing ? default eq clicked eq selected earthquake index findall e pyconvert Float32, e 2 ≈ selected eq 1 && pyconvert Float32, e 3 ≈ selected eq 2 , earthquakes 1 end begin Find details of the selected earthquake selected earthquake details earthquake list selected earthquake index eq time selected earthquake details 2 eq lat selected earthquake details 3 eq dep selected earthquake details 5 eq lon selected earthquake details 4 end station list let Fetch GSN stations that recorded this earthquake network \"IU\" IU Global Seismographic Network GSN station list client.get stations network network, latitude eq lat, longitude eq lon, minradius minradius, maxradius maxradius end Extract station metadata stations s.code, s.latitude, s.longitude, s.elevation for net in station list for s in net.stations default station let st rand stations pyconvert. Float64, st 2 , st 3 end Create a dropdown for selecting a station if stations exist station names length stations 0 ? s 1 for s in stations \"No stations found\" bind clicked station let p PlutoPlot Plot scattergeo lon pyconvert. Float32, e 3 for e in stations , lat pyconvert. Float32, e 2 for e in stations , text pyconvert. String, string e for e in station names , mode \"markers\", marker attr size 6, symbol \"triangle down\", color \"blue\" , Layout title \"GSN Stations click on the map to select \" add plotly listener p, \"plotly click\", \" e console.log e let dt e.points 0 PLOT.value dt.lat, dt.lon PLOT.dispatchEvent new CustomEvent 'input' \" p end begin selected station clicked station nothing ? default station clicked station Extract details of the selected receiver selected station index findall e pyconvert Float32, e 2 ≈ selected station 1 && pyconvert Float32, e 3 ≈ selected station 2 , stations 1 end selected station details stations selected station index md\"\"\" Current Selections Selected Earthquake selected earthquake details Selected Receiver selected station details \"\"\" println station list begin starttime data eq time Roughly start half a day after earthquake time endtime data starttime data total duration traces client.get waveforms \"IU\", Network IU, IC, II selected station details 1 , Station code \" \", Any location \"BH?\", Vertical component, attach response true, starttime data, endtime data traces traces.filter \"bandpass\", freqmin freqmin, freqmax freqmax, corners 4, zerophase true traces traces.normalize .detrend sampling rate pyconvert Float32, first traces.stats.sampling rate end channels pyconvert. String, s.stats.channel for s in traces bind selected channel index Select i channels i for i in 1 length channels begin Compute distance and arrivals distance m, az, baz obspy.geodetics.gps2dist azimuth eq lat, eq lon, selected station details 2 , selected station details 3 epi dist deg obspy.geodetics.kilometer2degrees distance m 1000.0 arrivals model.get ray paths source depth in km eq dep, distance in degree epi dist deg end let trace traces selected channel index 1 times pyconvert Vector, trace.times \"relative\" data pyconvert Vector, trace.data Base trace seis trace scatter x times, y data, mode \"lines\", name \"Seismogram\" phase colors distinguishable colors length arrivals Mark arrivals arrival traces map 1 length arrivals do i arr time pyconvert Float64, arrivals i 1 .time arr name arrivals i 1 .name if 0.0 arr time total duration shape scatter x arr time, arr time , y minimum data , maximum data , mode \"lines\", name pyconvert String, arr name , line attr dash \"solid\", color phase colors i return shape else return nothing end end Filter out any `nothing` values arrival traces filter isnothing, arrival traces Combine traces plot seis trace arrival traces... , Layout title \"Seismogram at Station selected station details 1 \", xaxis title \"Time Relative to Earthquake Origin s \", yaxis title \"Amplitude\" end "},{"url":"eqdata/polarization/","title":"Polarization","tags":["eqdata"],"text":" A Pluto.jl notebook v0.20.4 frontmatter layout \"layout.jlhtml\" tags \"eqdata\" title \"Polarization\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Pkg Pkg.add url \"https github.com anowacki Geodesics.jl\" Pkg.add url \"https github.com anowacki Seis.jl\" Pkg.add url \"https github.com anowacki SeisRequests.jl\" Pkg.add \"GeoMakie\" Pkg.add \"CairoMakie\" Pkg.add \"PlutoUI\" using Dates, Geodesics, Seis, SeisRequests using GeoMakie, CairoMakie using PlutoUI end md\"\"\" Plot Earthquake Data A notebook that quickly downloads sample earthquake data. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" SeisRequests.server list md\"\"\" We will now request for events occuring between `starttime` and `endtime` from the IRIS server. \"\"\" ev get events starttime \"2014 03 21T13 40 30.00\",endtime \"2014 03 21T13 45 40.00\",minmagnitude 6,latitude 7.0, longitude 94.0,maxradius 5.0,server \"IRIS\",verbose false md\"\"\" We will now query for stations that recorded the first earthquake event, with some constraints on the network and station codes. \"\"\" newsta get stations ev 1 ,network \"II\",station \"UOSS\",location \"10\",channel \"BH?\",server \"IRIS\",verbose false md\"\"\" Lets go ahead and download the data. \"\"\" sta1 get data code \"II.UOSS.10.BH?\",starttime \"2014 03 21T13 40 30.00\",endtime \"2014 03 21T14 40 30.00\",verbose false need a slider to interact with the time axis bind tend PlutoUI.Slider 500 3000, default 3000 md\"\"\" Plotting the time series recorded at all the three component sensors. \"\"\" begin fig Figure for i, s in enumerate sta1 ax Axis fig i,1 , title string s , xlabel \"time s \" lines ax, range s.b, step s.delta, length length s.t , s.t xlims ax, 300, tend end fig end md\"\"\" Packages \"\"\" "},{"url":"imaging/Born-approximation/","title":"Born Approximation","tags":["imaging"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Born Approximation\" tags \"imaging\" layout \"layout.jlhtml\" description \"Draw subsurface heterogeneities and model their linearized response using the notion of scattering theory.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using SymbolicUtils using Latexify using FFTW using PlutoPlotly using PlutoUI using PlutoTeachingTools using Einsum using MLUtils using PlutoLinks, PlutoHooks using SpecialFunctions using Tullio end ChooseDisplayMode TableOfContents md\"\"\" Born Approximation In this notebook, we construct an integral equation to model scattering due to subsurface heterogeneities using the notion of scattering theory. We assume that the medium may be decomposed into a known reference wave speed profile plus a perturbation called the scatterer. The wavefield similarly may be decomposed into a reference wavefield plus a scattered perturbed field. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Draw on the canvas below to place the scatterers and interact with this notebook. \"\"\" bind slowness pert draw input HTML \"\"\" div id parent canvas id canvas width 200px height 100px canvas button id clearButton clear button div script const canvasWidth 200, canvasHeight 100, background \" f1f1f1\" const parentDiv currentScript.previousElementSibling const c parentDiv.querySelector \"canvas\" const ctx c.getContext \"2d\" ctx.fillStyle background ctx.fillRect 0, 0, canvasWidth, canvasHeight ctx.fillStyle \" 010101\" ctx.fillRect 50, 50, 5, 5 parentDiv.value vec x,y for x in 50 55, y in 50 55 let drawing false c.addEventListener 'mousedown', drawing true c.addEventListener 'mouseup', drawing false c.addEventListener 'mousemove', e if drawing ctx.beginPath ctx.arc e.offsetX, e.offsetY, 4, 0, 2 Math.PI ctx.fillStyle \" 010101\" ctx.fill parentDiv.value.push e.offsetX, canvasHeight e.offsetY parentDiv.dispatchEvent new CustomEvent \"input\" function clearCanvas e ctx.fillStyle background ctx.fillRect 0, 0, canvasWidth, canvasHeight parentDiv.value parentDiv.dispatchEvent new CustomEvent \"input\" parentDiv.querySelector \" clearButton\" .addEventListener 'click', clearCanvas script \"\"\" TwoColumn md\"\"\" bind it plot Clock 0.1 \"\"\", md\"\"\" bind reset anim CounterButton \"Reset Animation\" \"\"\" md\" Scalar Helmholtz Equation\" syms x z syms t Dx Differential x Dz Differential z Dt Differential t variables ρ syms ı syms ω angular frequency L u, s ω^2 s u Dx Dx u Dz Dz u syms s 𝐱 δs 𝐱 reference and perturbed slowness syms U 𝐱, 𝐱ₛ reference wavefield syms δU 𝐱, 𝐱ₛ scattered wavefield syms 𝐱 spatial coordinate vector syms 𝐱ₛ source coordinate vector TODO get Helmholtz eq with the following substitution U 𝐱, 𝐱ₛ exp ı ω t syms f t source time function syms F ω source in the frequency domain syms δ 𝐱 Dirac delta function L U 𝐱, 𝐱ₛ , s 𝐱 ~ F ω δ 𝐱 𝐱ₛ md\" Perturbation Theory\" TwoColumn md\"\"\" Reference State Has a medium with slowness ```julia s 𝐱 ``` and the wavefield ```julia U 𝐱,𝐱ₛ ``` that is initiated at t 0 and satisfies ```julia L U, s ~ F ω δ 𝐱 𝐱ₛ . ``` \"\"\", md\"\"\" Perturbed State Has a perturbed medium with slowness ```julia s 𝐱 δs 𝐱 ``` and the perturbed wavefield ```julia U 𝐱 δU 𝐱 ``` that is initiated at t 0 and satisfies ```julia L U δU, s δs ~ F ω δ 𝐱 𝐱ₛ . ``` \"\"\" L U 𝐱, 𝐱ₛ δU 𝐱, 𝐱ₛ , s 𝐱 δs 𝐱 ~ F ω δ 𝐱 𝐱ₛ scat wave eq L δU 𝐱, 𝐱ₛ , s 𝐱 ~ expand simplify expand derivatives L U 𝐱, 𝐱ₛ δU 𝐱, 𝐱ₛ , s 𝐱 δs 𝐱 L U 𝐱, 𝐱ₛ , s 𝐱 L δU 𝐱, 𝐱ₛ , s 𝐱 expand scat wave eq.rhs md\" Born Approximation\" born scat wave eq scat wave eq.lhs ~ substitute scat wave eq.rhs, ω^2 δs 𝐱 δU 𝐱, 𝐱ₛ 0 TwoColumn md\"\"\" Perturbed State Has a perturbed medium with slowness ```julia s 𝐱 ``` and the perturbed wavefield ```julia u 𝐱,𝐱ₛ δu 𝐱,𝐱ₛ ``` that is initiated at t 0 and satisfies ```julia L u δu, s δs ~ F ω δ 𝐱 𝐱ₛ . ``` \"\"\", md\"\"\" Impulsive State Has a perturbed medium with slowness ```julia s 𝐱 ``` and the perturbed wavefield ```julia G 𝐱,𝐱ᵣ ``` that is initiated at t 0 and satisfies ```julia L G, s ~ F ω δ 𝐱 𝐱ᵣ . ``` \"\"\" born scat wave eq receiver coordinate syms 𝐱ᵣ Green's function evaluated at 𝐱, and source at 𝐱ᵣ syms G 𝐱, 𝐱ᵣ Green wave eq L G 𝐱, 𝐱ᵣ , s 𝐱 ~ δ 𝐱 𝐱ᵣ ex1 simplify expand Green wave eq.lhs δU 𝐱, 𝐱ₛ born scat wave eq.lhs G 𝐱, 𝐱ᵣ ex2 Green wave eq.rhs δU 𝐱, 𝐱ₛ born scat wave eq.rhs G 𝐱, 𝐱ᵣ volume integral syms ∫ᵥ expression md\"\"\" Here, we consider only volume scatterers, i.e., we simply consider an unbounded medium. In this case, using the Sommerfeld radiation condition and Green's theorem, the integral below vanishes. \"\"\" ∫ᵥ ex1 ~ 0 md\"Finally, the integral equation to model the scattered field is given below.\" scattered wavefield δU 𝐱ᵣ, 𝐱ₛ ~ ∫ᵥ arguments ex2 1 ~ ∫ᵥ arguments ex2 2 md\" Modeling\" md\" Appendix\" reference mass density rho0 2000.0f0 reference P velocity vp0 2500.0f0 md\" Source Bandwidth\" time grid tgrid range 0, stop 1.5, step 0.005 ... corresponding frequency grid freqgrid Float32. collect rfftfreq length tgrid , inv step tgrid kgrid Float32. 2.0f0 pi freqgrid inv vp0 . 1.0f 6 begin a Gaussian spectrum for source with peak frequency fpeak 50.0f0 Hz Fsource exp. abs2. freqgrid . fpeak 1.0f 3 remove zero frequency Fsource 1 0.0f0 end plot scatter x freqgrid, y Fsource , Layout width 400, height 200, title \"Source Spectrum\", xaxis title \"Frequency Hz \" , begin nxUI 200 nzUI 100 δxUI 4f0 spatial sampling interval xgridUI Float32. collect range 0.0, step δxUI, length nxUI zgridUI Float32. collect range 0, step δxUI, length nzUI end begin slowness grid input zeros Float32, nzUI, nxUI map slowness pert draw input do I slowness grid input nzUI I 2 1, I 1 1.0f 8 end end paUI tgrid, vp0, rho0, freqgrid, kgrid, Fsource, xgrid xgridUI, zgrid zgridUI begin δxplot 11f0 xgrid Float32. collect range first xgridUI , stop last xgridUI , step δxplot zgrid Float32. collect range first xgridUI , stop last zgridUI , step δxplot nxgrid length xgrid nzgrid length zgrid end pagrid tgrid, vp0, rho0, freqgrid, kgrid, Fsource, xgrid xgridUI . 1.0f 3, zgrid zgridUI . 1.0f 3 md\" Source Receiver\" rlocs x grid last. collect Iterators.product zgrid, xgrid rlocs z grid first. collect Iterators.product zgrid, xgrid return x,z for the element I of user input, assuming spatial sampling ds function get xlocation I, δ Float32. I 1 1 δ end function get zlocation I, δ, nzUI Float32. nzUI I 2 1 δ end nr 50 md\"Select Receivers bind rUI MultiCheckBox 1 nr, select all true, default collect 1 nr \" md\"\"\" In the experiment above, the distance x range extrema xgridUI m and the depth z range extrema zgridUI m. The seismic source is located near the surface at x, z 0,0 , and length rUI receivers on the surface z 0 . \"\"\" ns 5 md\"Select Sources bind sUI MultiCheckBox 1 ns, select all true, default collect 1 ns \" rlocs x rx for rx in range 0, stop last xgridUI , length nr receiver locations source x location s slocs x sx for sx in range 0, stop last xgridUI , length ns source locations rlocs z fill 10.0, length rlocs x source z location s slocs z fill 20.0, length slocs x acq map rlocs x, rlocs z, slocs x, slocs z do x Float32. x end acqgrid map rlocs x rlocs x grid, rlocs z rlocs z grid, slocs x, slocs z do x Float32. x end md\" 2 D Green's Function\" md\"\"\" Calculate Green's function for a 2 D homogeneous medium. Arguments `sx` Source location in the x direction `sz` Source location in the z direction `rx` Receiver location in the x direction `rz` Receiver location in the z direction `f` Frequency of the wave `c` Velocity of the medium. Returns Green's function for the given source receiver pair in the 2 D homogeneous medium. Green's function describes the response of a medium with velocity `c` and density `rho` to a point source at ` sx, sz ` and a receiver at ` rx, rz ` at a given frequency `f`. \"\"\" md\"Method to get distance between source and receiver\" rad sx, sz, rx, rz sqrt abs2 sx rx abs2 sz rz function G0 rx, rz, sx, sz, k, rho k ω c wavenumber r distance between source and receiver r rad sx, sz, rx, rz return 0.25 rho im hankelh2 0, k r end md\" Modeling\" function get forward operator with scatterer locations pa, acq, scatterer locations, δxUI, nzUI if isempty scatterer locations return 0.0 else select only 10 scatterers for speed scatterer locations randobs scatterer locations, 5 end xgrid, zgrid, freqgrid, kgrid, Fsource, vp0, rho0 pa scat x map scatterer locations do l get xlocation l, δxUI end scat z map scatterer locations do l get zlocation l, δxUI, nzUI end nr length acq.rlocs x nω length pa.freqgrid tullio F iω freqgrid iω freqgrid iω Fsource iω 4.0 pi pi tullio G iω, ir, iS G0 scat x iS , scat z iS , acq.slocs x 1 , acq.slocs z 1 , kgrid iω , rho0 G0 acq.rlocs x ir , acq.rlocs z ir , scat x ix , scat z iz , kgrid iω , rho0 F iω remove zero frequencies tullio G 1, i, j complex 0.0 return reshape G, nr nω, end forward grid use memo reset anim do get forward operator with scatterer locations pagrid, acqgrid, slowness pert draw input, δxUI, nzUI end function get forward operator pa, acq, sloc x, sloc z xgrid, zgrid, freqgrid, kgrid, Fsource, vp0, rho0 pa X Float32. collect xgrid nx length X Z Float32. collect zgrid nz length Z nr length acq.rlocs x nω length pa.freqgrid tullio F iω freqgrid iω freqgrid iω Fsource iω 4.0 pi pi tullio G iω, ir, iz, ix G0 X ix , Z iz , sloc x, sloc z, kgrid iω , rho0 G0 acq.rlocs x ir , acq.rlocs z ir , X ix , Z iz , kgrid iω , rho0 F iω remove zero frequencies tullio G 1, i, j, k complex 0.0 return reshape G, nr nω, nx nz end forward UI map slocs x, slocs z do sx, sz get forward operator paUI, acq, sx, sz end function get reference wavefield pa, acq, tgrid xgrid, zgrid, freqgrid, kgrid, Fsource, vp0, rho0 pa tullio D iω, ir, is G0 acq.rlocs x ir , acq.rlocs z ir , acq.slocs x is , acq.slocs z is , kgrid iω , rho0 Fsource iω remove zero frequencies tullio D 1, i, j complex 0.0 transform to time domain return irfft D, length tgrid , 1, end d get reference wavefield paUI, acq, tgrid dgrid reshape get reference wavefield pagrid, acqgrid, tgrid , , 1 , , nzgrid, nxgrid function get scattered wavefield slowness, G, acq, pa nr length acq.rlocs x nω length pa.freqgrid s view slowness, d G s d reshape d, nω, nr transform to time domain return irfft d, length pa.tgrid , 1, end begin δd map forward UI do Gmat d get scattered wavefield slowness grid input, Gmat, acq, paUI d , filter x x ∉ rUI, 1 nr . 0.0f0 d end end δdgrid reshape get scattered wavefield 1.0f 8 ones 5 , forward grid, acqgrid, pagrid , , nzgrid, nxgrid δs is the perturbation in slowness δx is the spatial sampling used to scale slowness pertindices rlocs and slocs are receiver and source positions function get migration image δd, G, acq, pa xgrid, zgrid pa nx length xgrid nz length zgrid δd rfft δd, 1, δd view δd, δs G' δd δs reshape δs, nz, nx transform to time domain return real. δs end images map forward UI, δd do Gmat, d get migration image d, Gmat, acq, paUI end image sum images sUI md\" Plots\" function plot data d, δd, d1max fig Plot Layout title \"Measured Wavefield Source first sUI \", yaxis autorange \"reversed\", height 400, width 500, yaxis title \"time s \", Subplots shared xaxes true, shared yaxes true, rows 1, cols 2, subplot titles \"Reference\" \"Scattered\" , x title \" Receiver\" add trace fig, heatmap y tgrid, z d, zmin d1max, zmax d1max, showscale false, colorscale \"jet\" , row 1, col 1 add trace fig, heatmap y tgrid, z δd, zmin d1max, zmax d1max, showscale false, colorscale \"jet\" , row 1, col 2 return PlutoPlotly.plot fig end plot data d , , first sUI , δd , , 1 first sUI , maximum abs,d , ,1 first sUI 2 function add ageom fig, ageom, row 1, col 1 if ageom nothing add trace fig, scatter x ageom.rlocs x filter x x ∈ rUI, 1 nr , y ageom.rlocs z, mode \"markers\", marker color \"black\", marker symbol \"triangle down\", showlegend false , row row, col col add trace fig, scatter x ageom.slocs x, y ageom.slocs z, mode \"markers\", marker color \"black\", marker size 10, marker symbol \"star\", showlegend false , row row, col col end end function plot image image fig Plot Layout yaxis autorange \"reversed\", xaxis attr range extrema xgridUI . 20, 20 , yaxis attr range extrema zgridUI . 10, 10 , height 225, width 350, yaxis title \"Depth\", xaxis title \"Distance\", Subplots shared xaxes true, shared yaxes true, rows 1, cols 1, subplot titles \"Migration Image\" \"\" add trace fig, heatmap x xgridUI, y zgridUI, z image, showscale false, colorscale \"seismic\" , row 1, col 1 add ageom fig, acq return PlutoPlotly.plot fig end plot image image function plot animations d1, d2, d1max fig Plot Layout title \"Wavefield Source first sUI \", yaxis autorange \"reversed\", xaxis attr range extrema xgridUI . 20, 20 , yaxis attr range extrema zgridUI . 10, 10 , height 225, width 700, yaxis title \"Depth\", xaxis title \"Distance\", Subplots shared xaxes true, shared yaxes true, rows 1, cols 2, subplot titles \"Reference\" \"Scattered\" add trace fig, heatmap x xgrid, y zgrid, z d1, zmin d1max, zmax d1max, showscale false, colorscale \"Greys\" , row 1, col 1 add trace fig, heatmap x xgrid, y zgrid, z d2, zmin d1max, zmax d1max, showscale false, colorscale \"Greys\" , row 1, col 2 add ageom fig, acq, 1, 1 add ageom fig, acq, 1, 2 return PlutoPlotly.plot fig end begin reset anim plot animations dgrid mod it plot, div length tgrid , 2 1, , , δdgrid mod it plot, div length tgrid , 2 1, , , maximum abs, dgrid 1.0 end md\" References\" md\"\"\" Stanford Notes http sepwww.stanford.edu public docs sep131 rgunther1 paper html node3.html SEG Wiki https wiki.seg.org wiki Born approximate modeling formula \"\"\" md\"\"\" TODO refine the derivation Disconnect b w symbolic derivation and numerical simulation, is it inevitable here? Elastic Wavefield w density scatterers Radiation of velocity and density scatterers \"\"\" "},{"url":"imaging/adjoint-state-method/","title":"Adjoint State Method","tags":["imaging"],"text":" A Pluto.jl notebook v0.19.46 frontmatter title \"Adjoint State Method\" tags \"imaging\" layout \"layout.jlhtml\" description \"This notebook presents a discrete symbolic version of the adjoint state formulation involving the seismic wave equation so that it can act as a reference while implementing methods for full waveform inversion.\" using Markdown using InteractiveUtils using Symbolics, SymbolicUtils, LinearAlgebra, ChainRules, PlutoUI, PlutoTeachingTools, TikzPictures TableOfContents variables q md\"\"\" Adjoint State Method In seismic imaging, the adjoint state method is a numerical method for efficiently computing the gradient of an objective function. This notebook presents a discrete version of the adjoint state formulation involving the seismic wave equation so that it can act as a reference while implementing methods for full waveform inversion. We focus on the velocity stress formulation, which is a widely used numerical method for solving wave propagation problems in geophysics. This method involves discretizing the governing equations of motion, such as the wave equation, using finite difference techniques. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj, Indian Institute of Science, Bengaluru, India \"\"\" md\" Medium Created two symbolic variables ρ and μ⁻¹ which can be used to represent the density and inverse of the shear modulus of the medium as functions of position x.\" variables ρ 1 3 μ⁻¹ 1 3 md\" State Variables\" md\"In the velocity stress formulation, the seismic wavefield is described in terms of two variables the particle velocity and the stress. Two symbolic variables `v x, t ` and `σ x, t ` representing velocity and stress, respectively, as functions of space `x` and time `t` .\" syms v x, t σ x, t t collect x v x 1 , t 1 md\"As the velocity and stress fields are staggered in time, we create corresponding vectors at each time value in t and t̂, respectively.\" V hcat collect broadcast x collect map t v x, t , vcat t₀, t, T , x ... velocity in the discrete world Σ hcat collect broadcast x collect map t σ x, t , vcat t₀, t̂ , x̂ ... stress in the discrete world md\" Forcing\" md\"The symbol `f` represents the body force density, which is a quantity that describes the force per unit volume acting on a material.\" syms f x, t F collect map t f 0, t , t̂ F hcat collect broadcast x collect map t f x, t , vcat t₀, t̂ , x ... md\" Momentum Equation\" md\"\"\" This line defines the initial momentum of the system, which is equal to the difference between the initial velocity of the particle v x, t̂ 1 and its velocity at time t 0 which is zero in this case multiplied by the density of the medium ρ x and then subtracting the force acting on the particle at time t 0 f 0, x . It represents the balance of forces and momentum of the system at the initial time. \"\"\" syms δₓ δₜ dΣdx diff Σ, dims 2 δₓ md\"\"\" We will now construct a vector that represents the time derivative of the velocity field. The first few elements can be computed using the `diff ` function applied to the `V` array. The last element is the time derivative of `v x, t ` evaluated at the final time `T`, which is computed as the difference between `v x, T ` and `v x, last t̂ `. \"\"\" dVdt diff V, dims 1 δₜ ρt repeat reshape ρ, 1, , 4, 1 compute value of ρ on the velocity grid function avx ρt hcat 0.5 ρt , i 1 . ρt , i for i in 1 size ρt, 2 1 ... end Meqs dVdt , 2 end 1 . avx ρt dΣdx F , 2 end 1 avx ρt Meqs ~ 0 md\" Constitutive Relations In linear elasticity, for example, the constitutive relation is given by Hooke's law, which states that stress is proportional to strain. \" ∂V∂x diff V, dims 2 δₓ md\"Similar to velocity, we will construct a vector that represents the time derivative of the stress field.\" ∂Σ∂t diff Σ, dims 1 δₜ μ⁻¹t repeat reshape μ⁻¹, 1, , 3, 1 md\"This equation states that the time derivative of stress minus the gradient of the stress scaled by the shear modulus is equal to zero. This is a simplified form of the constitutive relation.\" Ceqs ∂Σ∂t . μ⁻¹t ∂V∂x 2 end 1, Ceqs ~ 0 md\" Leap frog Scheme\" md\"The leap frog scheme updates the values of the velocity and stress components at half integer time steps, staggered in time and space. The first two steps stress and velocity updates of this scheme are marked here.\" md\" Objective Function\" md\"Variable to define an observed velocity field, which is a function of space and time.\" syms v₀ x, t md\"This defines a simple quadratic objective function that measures the difference between the model predicted velocity field v and the observed velocity field v₀. Squaring the difference ensures that all differences are positive and also gives more weight to larger differences. The goal is to minimize this objective function to find the velocity field that best matches the observed data.\" V₀ hcat collect broadcast x collect map t v₀ x, t , vcat t , x ... obj v, v₀ v v₀ ^2 md\"The final value of the objective function.\" J sum map obj, V 2 end 1, , V₀ md\" Adjoint State Variables Adjoint state variables are introduced in the context of optimization problems. In this case, these variables are used to find gradients of an objective function with respect to the parameters mass density and shear modulus.\" syms u x, t τ x, t size Meqs md\"One multiplier for each of Meqs⋯\" U hcat collect broadcast x collect map t u x, t , vcat t̂, T̂ , x 2 end 1 ... size Ceqs md\"One multiplier for each Ceqs⋯\" 𝛕 hcat collect broadcast x collect map t τ x, t , vcat t end 1 , t end , T , x̂ ... md\" Lagrangian\" Meqs | size, U| size md\"The Lagrangian component, for momentum equations `Meqs`, is given by\" L₁ sum U . Meqs md\"The Lagrangian component, for constitutive equations `Ceqs`, is given by\" L₂ sum 𝛕 . Ceqs md\"Adding all the components of the Lagrangian together gives\" L L₁ L₂ J md\" Adjoint State Equations\" md\" Final Condition Time Reversal To obtain the final condition, we shall compute the gradient of the Lagrangian with respect to `v x, T `.\" md\"The solution of these adjoint equations is often obtained by using a time reversed version of the original numerical solver, known as the backpropagation.\" md\" Parameter Gradients Lets compute the gradient of L with respect to ρ and μ.\" gradient w.r.t. mass density ∇ρ Differential ρ 2 L | expand derivatives , u x, T̂ 0, v x, 0 0 gradient w.r.t. shear modulus ∇μ⁻¹ Differential μ⁻¹ 2 L | expand derivatives , σ x, 0 0, τ x, T 0 md\" Appendix\" md\" Variables\" md\"These commands create three symbolic time variables `t`, and staggered time variables `t̂` and space variable `x`. We will consider three time steps for the leap frog scheme. The ` syms` macro is used in the `Symbolics.jl` package to declare symbolic variables.\" variables t 1 3 t̂ 1 3 t̂ is staggered collect t , collect t̂ syms T T̂ final time syms t₀ variables x 1 4 x̂ 1 3 space md\" Lagrangian\" md\"This code computes the gradient of the Lagrangian with respect to the velocity field to obtain adjoint equations.\" ∂vL broadcast V 2 end, 2 end 1 do v Differential v L | expand derivatives end ∂vL ~ 0 md\"This code computes the gradient of the Lagrangian with respect to the stress field to obtain adjoint equations.\" ∂σL broadcast Σ 2 end, do σ Differential σ L | expand derivatives end ∂σL ~ 0 md\" Final Condition\" ∂L∂VT broadcast V end, do v Differential v L | expand derivatives end ∂L∂VT ~ 0 md\" Gradient Expressions\" nt 3 Vs1 V , Vs2 reverse Vs1, dims 1 Us1 hcat fill 0, 4 , U , , fill 0, 4 Us2 reverse Us1, dims 1 begin ∇ρ1 0.0 for it in 2 5 ∇ρ1 0.5 δₜ Us2 it 1, 2 Vs2 it 1, 2 Vs2 it, 2 0.5 δₜ Us2 it 1, 3 Vs2 it 1, 3 Vs2 it, 3 end end ∇ρ ∇ρ1 ∇ρ ∇ρ1 Σs1 σ x, t̂ 1 , σ x, t̂ 2 , σ x, t̂ 3 Σs2 reverse Σs1 𝛕s τ x, t 3 , τ x, t 2 , τ x, t 1 ∇μ⁻¹1 simplify sum 𝛕s it Σs1 nt it Σs1 nt it 1 for it in 1 nt 2 , expand true 𝛕s nt 1 Σs1 1 ∇μ⁻¹2 simplify sum 𝛕s it 1 Σs2 it Σs2 it 1 for it in 2 nt 1 , expand true 𝛕s nt 1 Σs2 nt ∇μ⁻¹ ∇μ⁻¹1 ∇μ⁻¹ ∇μ⁻¹2 md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot state tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in v 0 1, v t 1 5, v t 2 9, v t 3 13, v T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\sigma 0 3, \\sigma \\hat t 1 7, \\sigma \\hat t 2 11, \\sigma \\hat t 3 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in f 0 3, f \\hat t 1 7, f \\hat t 2 11, f \\hat t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 3 s 7 node above, midway, red 1 \\draw ,thick, red v 5 s 7 node above, midway, red 1 \\draw ,thick, blue s 7 v 9 node below, midway, blue 2 \\draw ,thick, blue v 5 v 9 node above, midway, blue 2 \\node above right 2mm of s 3 0 \\node above right 2mm of v 1 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot state tikz t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot adjstate tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in u 0 1, u \\hat t 1 5, u \\hat t 2 9, u \\hat t 3 13, u \\hat T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\tau t 1 3, \\tau t 2 7, \\tau t 3 11, \\tau T 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in g t 1 7, g t 2 11, g t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 15 s 11 node above, midway, red 1 \\draw ,thick, red v 13 s 11 node above, midway, red 1 \\draw ,thick, blue s 11 v 9 node below, midway, blue 2 \\draw ,thick, blue v 13 v 9 node above, midway, blue 2 \\node above right 2mm of s 15 0 \\node above right 2mm of v 17 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot adjstate tikz md\"\"\" References ^plessix R. E. Plessix, A review of the adjoint state method for computing the gradient of a functional with geophysical applications, Geophysical Journal International, Volume 167, Issue 2, November 2006, Pages 495–503, https doi.org 10.1111 j.1365 246X.2006.02978.x \"\"\" "},{"url":"imaging/adjoint-state-method_acoustic backup 1/","title":"adjoint-state-method_acoustic backup 1","tags":[],"text":" A Pluto.jl notebook v0.19.46 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Symbolics, SymbolicUtils, LinearAlgebra, ChainRules, PlutoUI, PlutoTeachingTools, TikzPictures ChooseDisplayMode TableOfContents md\"\"\" Adjoint State Method In seismic imaging, the adjoint state method is a numerical method for efficiently computing the gradient of an objective function. This notebook presents a discrete version of the adjoint state formulation involving the seismic wave equation so that it can act as a reference while implementing methods for full waveform inversion. We focus on the velocity stress formulation, which is a widely used numerical method for solving wave propagation problems in geophysics. This method involves discretizing the governing equations of motion, such as the wave equation, using finite difference techniques. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj, Indian Institute of Science, Bengaluru, India \"\"\" md\" Medium Created two symbolic variables ρ and μ⁻¹ which can be used to represent the density and inverse of the shear modulus of the medium as functions of position x.\" variables ρ 1 3 K⁻¹ 1 3 md\" State Variables\" md\"In the velocity stress formulation, the seismic wavefield is described in terms of two variables the particle velocity and the stress. Two symbolic variables `v x, t ` and `σ x, t ` representing velocity and stress, respectively, as functions of space `x` and time `t` .\" syms v x, t p x, t md\"As the velocity and stress fields are staggered in time, we create corresponding vectors at each time value in t and t̂, respectively.\" V hcat collect broadcast x collect map t v x, t , vcat t₀, t, T , x ... velocity in the discrete world P hcat collect broadcast x collect map t p x, t , vcat t₀, t̂ , x̂ ... stress in the discrete world md\" Forcing\" md\"The symbol `f` represents the body force density, which is a quantity that describes the force per unit volume acting on a material.\" syms f x, t F collect map t f 0, t , t̂ F hcat collect broadcast x collect map t f x, t , vcat t₀, t̂ , x ... md\" Momentum Equation\" md\"\"\" This line defines the initial momentum of the system, which is equal to the difference between the initial velocity of the particle v x, t̂ 1 and its velocity at time t 0 which is zero in this case multiplied by the density of the medium ρ x and then subtracting the force acting on the particle at time t 0 f 0, x . It represents the balance of forces and momentum of the system at the initial time. \"\"\" syms δₓ⁻¹ δₜ⁻¹ dPdx diff P, dims 2 δₓ⁻¹ md\"\"\" We will now construct a vector that represents the time derivative of the velocity field. The first few elements can be computed using the `diff ` function applied to the `V` array. The last element is the time derivative of `v x, t ` evaluated at the final time `T`, which is computed as the difference between `v x, T ` and `v x, last t̂ `. \"\"\" dVdt diff V, dims 1 δₜ⁻¹ ρt repeat reshape ρ, 1, , 4, 1 compute value of ρ on the velocity grid function avx ρt hcat 0.5 ρt , i 1 . ρt , i for i in 1 size ρt, 2 1 ... end Meqs dVdt , 2 end 1 . avx ρt dPdx F , 2 end 1 avx ρt Meqs ~ 0 md\" Constitutive Relations In linear elasticity, for example, the constitutive relation is given by Hooke's law, which states that stress is proportional to strain. \" ∂V∂x diff V, dims 2 δₓ⁻¹ md\"Similar to velocity, we will construct a vector that represents the time derivative of the stress field.\" ∂P∂t diff P, dims 1 δₜ⁻¹ K⁻¹t repeat reshape K⁻¹, 1, , 3, 1 md\"This equation states that the time derivative of stress minus the gradient of the stress scaled by the shear modulus is equal to zero. This is a simplified form of the constitutive relation.\" Ceqs ∂P∂t . K⁻¹t ∂V∂x 2 end 1, Ceqs ~ 0 md\" Leap frog Scheme\" md\"The leap frog scheme updates the values of the velocity and stress components at half integer time steps, staggered in time and space. The first two steps stress and velocity updates of this scheme are marked here.\" md\" Objective Function\" md\"Variable to define an observed velocity field, which is a function of space and time.\" syms v₀ x, t md\"This defines a simple quadratic objective function that measures the difference between the model predicted velocity field v and the observed velocity field v₀. Squaring the difference ensures that all differences are positive and also gives more weight to larger differences. The goal is to minimize this objective function to find the velocity field that best matches the observed data.\" V₀ hcat collect broadcast x collect map t v₀ x, t , vcat t , x ... obj v, v₀ v v₀ ^2 md\"The final value of the objective function.\" J sum map obj, V 2 end 1, , V₀ md\" Adjoint State Variables Adjoint state variables are introduced in the context of optimization problems. In this case, these variables are used to find gradients of an objective function with respect to the parameters mass density and shear modulus.\" syms u x, t τ x, t size Meqs md\"One multiplier for each of Meqs⋯\" U hcat collect broadcast x collect map t u x, t , vcat t̂, T̂ , x 2 end 1 ... size Ceqs md\"One multiplier for each Ceqs⋯\" 𝛕 hcat collect broadcast x collect map t τ x, t , vcat t end 1 , t end , T , x̂ ... md\" Lagrangian\" md\"The Lagrangian component, for momentum equations `Meqs`, is given by\" L₁ sum U . Meqs md\"The Lagrangian component, for constitutive equations `Ceqs`, is given by\" L₂ sum 𝛕 . Ceqs md\"Adding all the components of the Lagrangian together gives\" L L₁ L₂ J md\" Adjoint State Equations\" md\" Final Condition Time Reversal To obtain the final condition, we shall compute the gradient of the Lagrangian with respect to `v x, T `.\" md\"The solution of these adjoint equations is often obtained by using a time reversed version of the original numerical solver, known as the backpropagation.\" md\" Parameter Gradients Lets compute the gradient of L with respect to ρ and μ.\" bind iρd Select 1 3 gradient w.r.t. mass density ∇ρ Differential ρ iρd L | expand derivatives , u x, T̂ 0, v x, 0 0 gradient w.r.t. shear modulus ∇K⁻¹ Differential K⁻¹ 2 L | expand derivatives , σ x, 0 0, τ x, T 0 md\" Appendix\" md\" Variables\" md\"These commands create three symbolic time variables `t`, and staggered time variables `t̂` and space variable `x`. We will consider three time steps for the leap frog scheme. The ` syms` macro is used in the `Symbolics.jl` package to declare symbolic variables.\" variables t 1 3 t̂ 1 3 t̂ is staggered collect t , collect t̂ syms T T̂ final time syms t₀ variables x 1 4 x̂ 1 3 space md\" Lagrangian\" md\"This code computes the gradient of the Lagrangian with respect to the velocity field to obtain adjoint equations.\" ∂vL broadcast V 2 end, 2 end 1 do v Differential v L | expand derivatives end ∂vL ~ 0 md\"This code computes the gradient of the Lagrangian with respect to the stress field to obtain adjoint equations.\" ∂σL broadcast P 2 end, do σ Differential σ L | expand derivatives end ∂σL ~ 0 md\" Final Condition\" ∂L∂VT broadcast V end, do v Differential v L | expand derivatives end ∂L∂VT ~ 0 md\" Gradient Expressions\" nt 3 Vs1 V , Vs2 reverse Vs1, dims 1 Us1 hcat fill 0, 4 , U , , fill 0, 4 Us2 reverse Us1, dims 1 begin ∇ρ1 0.0 for it in 2 5 ∇ρ1 0.5 δₜ Us2 it 1, 2 Vs2 it 1, 2 Vs2 it, 2 0.5 δₜ Us2 it 1, 3 Vs2 it 1, 3 Vs2 it, 3 end end ∇ρ ∇ρ1 ∇ρ ∇ρ1 Ps1 P 𝛕s1 𝛕 , Ps2 reverse Ps1, dims 1 𝛕s2 reverse 𝛕s1, dims 1 begin ∇K⁻¹1 0.0 for it in 2 4 global ∇K⁻¹1 δₜ 𝛕s2 it 1, 2 Ps2 it 1, 2 Ps2 it, 2 end end ∇K⁻¹ ∇K⁻¹1 ∇K⁻¹ ∇K⁻¹1 let ∇K⁻¹2 0.0 pp 0 pap 0 p 0 pa 0 for it in 1 3 pp p pap pa p Ps2 it, 2 pa 𝛕s2 it, 2 show p, pa global ∇K⁻¹1 δₜ 𝛕s2 it 1, 2 Ps2 it 1, 2 Ps2 it, 2 end end md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot state tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in v 0 1, v t 1 5, v t 2 9, v t 3 13, v T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\sigma 0 3, \\sigma \\hat t 1 7, \\sigma \\hat t 2 11, \\sigma \\hat t 3 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in f 0 3, f \\hat t 1 7, f \\hat t 2 11, f \\hat t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 3 s 7 node above, midway, red 1 \\draw ,thick, red v 5 s 7 node above, midway, red 1 \\draw ,thick, blue s 7 v 9 node below, midway, blue 2 \\draw ,thick, blue v 5 v 9 node above, midway, blue 2 \\node above right 2mm of s 3 0 \\node above right 2mm of v 1 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot state tikz t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot adjstate tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in u 0 1, u \\hat t 1 5, u \\hat t 2 9, u \\hat t 3 13, u \\hat T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\tau t 1 3, \\tau t 2 7, \\tau t 3 11, \\tau T 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in g t 1 7, g t 2 11, g t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 15 s 11 node above, midway, red 1 \\draw ,thick, red v 13 s 11 node above, midway, red 1 \\draw ,thick, blue s 11 v 9 node below, midway, blue 2 \\draw ,thick, blue v 13 v 9 node above, midway, blue 2 \\node above right 2mm of s 15 0 \\node above right 2mm of v 17 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot adjstate tikz md\"\"\" References ^plessix R. E. Plessix, A review of the adjoint state method for computing the gradient of a functional with geophysical applications, Geophysical Journal International, Volume 167, Issue 2, November 2006, Pages 495–503, https doi.org 10.1111 j.1365 246X.2006.02978.x \"\"\" "},{"url":"imaging/adjoint-state-method_acoustic/","title":"adjoint-state-method_acoustic","tags":[],"text":" A Pluto.jl notebook v0.19.46 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using Symbolics, SymbolicUtils, LinearAlgebra, ChainRules, PlutoUI, PlutoTeachingTools, TikzPictures ChooseDisplayMode TableOfContents md\"\"\" Adjoint State Method In seismic imaging, the adjoint state method is a numerical method for efficiently computing the gradient of an objective function. This notebook presents a discrete version of the adjoint state formulation involving the seismic wave equation so that it can act as a reference while implementing methods for full waveform inversion. We focus on the velocity stress formulation, which is a widely used numerical method for solving wave propagation problems in geophysics. This method involves discretizing the governing equations of motion, such as the wave equation, using finite difference techniques. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj, Indian Institute of Science, Bengaluru, India \"\"\" md\" Medium Created two symbolic variables ρ and μ⁻¹ which can be used to represent the density and inverse of the shear modulus of the medium as functions of position x.\" variables ρ 1 3 K⁻¹ 1 3 md\" State Variables\" md\"In the velocity stress formulation, the seismic wavefield is described in terms of two variables the particle velocity and the stress. Two symbolic variables `v x, t ` and `σ x, t ` representing velocity and stress, respectively, as functions of space `x` and time `t` .\" syms v x, t p x, t md\"As the velocity and stress fields are staggered in time, we create corresponding vectors at each time value in t and t̂, respectively.\" md\" Forcing\" md\"The symbol `f` represents the body force density, which is a quantity that describes the force per unit volume acting on a material.\" syms f x, t F collect map t f 0, t , t̂ md\" Momentum Equation\" md\"\"\" This line defines the initial momentum of the system, which is equal to the difference between the initial velocity of the particle v x, t̂ 1 and its velocity at time t 0 which is zero in this case multiplied by the density of the medium ρ x and then subtracting the force acting on the particle at time t 0 f 0, x . It represents the balance of forces and momentum of the system at the initial time. \"\"\" syms δₓ⁻¹ δₜ⁻¹ md\"\"\" We will now construct a vector that represents the time derivative of the velocity field. The first few elements can be computed using the `diff ` function applied to the `V` array. The last element is the time derivative of `v x, t ` evaluated at the final time `T`, which is computed as the difference between `v x, T ` and `v x, last t̂ `. \"\"\" ρt repeat reshape ρ, 1, , 4, 1 compute value of ρ on the velocity grid function avx ρt hcat 0.5 ρt , i 1 . ρt , i for i in 1 size ρt, 2 1 ... end avx ρt md\" Constitutive Relations In linear elasticity, for example, the constitutive relation is given by Hooke's law, which states that stress is proportional to strain. \" md\"Similar to velocity, we will construct a vector that represents the time derivative of the stress field.\" K⁻¹t repeat reshape K⁻¹, 1, , 3, 1 md\"This equation states that the time derivative of stress minus the gradient of the stress scaled by the shear modulus is equal to zero. This is a simplified form of the constitutive relation.\" md\" Leap frog Scheme\" md\"The leap frog scheme updates the values of the velocity and stress components at half integer time steps, staggered in time and space. The first two steps stress and velocity updates of this scheme are marked here.\" md\" Objective Function\" md\"Variable to define an observed velocity field, which is a function of space and time.\" syms v₀ x, t md\"This defines a simple quadratic objective function that measures the difference between the model predicted velocity field v and the observed velocity field v₀. Squaring the difference ensures that all differences are positive and also gives more weight to larger differences. The goal is to minimize this objective function to find the velocity field that best matches the observed data.\" obj v, v₀ v v₀ ^2 md\"The final value of the objective function.\" md\" Adjoint State Variables Adjoint state variables are introduced in the context of optimization problems. In this case, these variables are used to find gradients of an objective function with respect to the parameters mass density and shear modulus.\" syms u x, t τ x, t md\"One multiplier for each of Meqs⋯\" md\"One multiplier for each Ceqs⋯\" md\" Lagrangian\" md\"The Lagrangian component, for momentum equations `Meqs`, is given by\" md\"The Lagrangian component, for constitutive equations `Ceqs`, is given by\" md\"Adding all the components of the Lagrangian together gives\" md\" Adjoint State Equations\" md\" Final Condition Time Reversal To obtain the final condition, we shall compute the gradient of the Lagrangian with respect to `v x, T `.\" md\"The solution of these adjoint equations is often obtained by using a time reversed version of the original numerical solver, known as the backpropagation.\" md\" Parameter Gradients Lets compute the gradient of L with respect to ρ and μ.\" bind iρd Select 1 3 md\" Appendix\" md\" Variables\" md\"These commands create three symbolic time variables `t`, and staggered time variables `t̂` and space variable `x`. We will consider three time steps for the leap frog scheme. The ` syms` macro is used in the `Symbolics.jl` package to declare symbolic variables.\" variables t 1 3 t̂ 1 3 t̂ is staggered collect t , collect t̂ syms T T̂ final time syms t₀ variables x 1 4 x̂ 1 3 space V hcat collect broadcast x collect map t v x, t , vcat t₀, t, T , x ... velocity in the discrete world dVdt diff V, dims 1 δₜ⁻¹ ∂V∂x diff V, dims 2 δₓ⁻¹ P hcat collect broadcast x collect map t p x, t , vcat t₀, t̂ , x̂ ... stress in the discrete world dPdx diff P, dims 2 δₓ⁻¹ ∂P∂t diff P, dims 1 δₜ⁻¹ Ceqs ∂P∂t . K⁻¹t ∂V∂x 2 end 1, Ceqs ~ 0 size Ceqs F hcat collect broadcast x collect map t f x, t , vcat t₀, t̂ , x ... Meqs dVdt , 2 end 1 . avx ρt dPdx F , 2 end 1 Meqs ~ 0 size Meqs V₀ hcat collect broadcast x collect map t v₀ x, t , vcat t , x ... J sum map obj, V 2 end 1, , V₀ U hcat collect broadcast x collect map t u x, t , vcat t̂, T̂ , x 2 end 1 ... L₁ sum U . Meqs 𝛕 hcat collect broadcast x collect map t τ x, t , vcat t end 1 , t end , T , x̂ ... L₂ sum 𝛕 . Ceqs L L₁ L₂ J gradient w.r.t. mass density ∇ρ Differential ρ iρd L | expand derivatives , u x, T̂ 0, v x, 0 0 gradient w.r.t. shear modulus ∇K⁻¹ Differential K⁻¹ 2 L | expand derivatives , σ x, 0 0, τ x, T 0 md\" Lagrangian\" md\"This code computes the gradient of the Lagrangian with respect to the velocity field to obtain adjoint equations.\" ∂vL broadcast V 2 end, 2 end 1 do v Differential v L | expand derivatives end ∂vL ~ 0 md\"This code computes the gradient of the Lagrangian with respect to the stress field to obtain adjoint equations.\" ∂σL broadcast P 2 end, do σ Differential σ L | expand derivatives end ∂σL ~ 0 md\" Final Condition\" ∂L∂VT broadcast V end, do v Differential v L | expand derivatives end ∂L∂VT ~ 0 md\" Gradient Expressions\" nt 3 Vs1 V , Vs2 reverse Vs1, dims 1 Us1 hcat fill 0, 4 , U , , fill 0, 4 Us2 reverse Us1, dims 1 begin ∇ρ1 0.0 for it in 2 5 ∇ρ1 0.5 δₜ Us2 it 1, 2 Vs2 it 1, 2 Vs2 it, 2 0.5 δₜ Us2 it 1, 3 Vs2 it 1, 3 Vs2 it, 3 end end ∇ρ ∇ρ1 ∇ρ ∇ρ1 Ps1 P 𝛕s1 𝛕 , Ps2 reverse Ps1, dims 1 𝛕s2 reverse 𝛕s1, dims 1 begin ∇K⁻¹1 0.0 for it in 2 4 global ∇K⁻¹1 δₜ 𝛕s2 it 1, 2 Ps2 it 1, 2 Ps2 it, 2 end end ∇K⁻¹ ∇K⁻¹1 ∇K⁻¹ ∇K⁻¹1 let ∇K⁻¹2 0.0 pp 0 pap 0 p 0 pa 0 for it in 1 3 pp p pap pa p Ps2 it, 2 pa 𝛕s2 it, 2 show p, pa global ∇K⁻¹1 δₜ 𝛕s2 it 1, 2 Ps2 it 1, 2 Ps2 it, 2 end end md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot state tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in v 0 1, v t 1 5, v t 2 9, v t 3 13, v T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\sigma 0 3, \\sigma \\hat t 1 7, \\sigma \\hat t 2 11, \\sigma \\hat t 3 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in f 0 3, f \\hat t 1 7, f \\hat t 2 11, f \\hat t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 3 s 7 node above, midway, red 1 \\draw ,thick, red v 5 s 7 node above, midway, red 1 \\draw ,thick, blue s 7 v 9 node below, midway, blue 2 \\draw ,thick, blue v 5 v 9 node above, midway, blue 2 \\node above right 2mm of s 3 0 \\node above right 2mm of v 1 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot state tikz t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot adjstate tikz TikzPicture L\"\"\" \\tikzstyle vertex circle,minimum size 20pt,inner sep 0pt \\foreach \\name \\x in u 0 1, u \\hat t 1 5, u \\hat t 2 9, u \\hat t 3 13, u \\hat T 17 \\node vertex,fill black 25, v \\x at \\x,0 \\name \\foreach \\name \\x in \\tau t 1 3, \\tau t 2 7, \\tau t 3 11, \\tau T 15 \\node vertex,fill red 25 s \\x at \\x, 1 \\name \\foreach \\name \\x in g t 1 7, g t 2 11, g t 3 15 \\node vertex,fill blue 25 f \\x at \\x,1 \\name \\draw ,thick, red s 15 s 11 node above, midway, red 1 \\draw ,thick, red v 13 s 11 node above, midway, red 1 \\draw ,thick, blue s 11 v 9 node below, midway, blue 2 \\draw ,thick, blue v 13 v 9 node above, midway, blue 2 \\node above right 2mm of s 15 0 \\node above right 2mm of v 17 0 \"\"\", options tikz default options, preamble tikz preamble, width \"20cm\" plot adjstate tikz md\"\"\" References ^plessix R. E. Plessix, A review of the adjoint state method for computing the gradient of a functional with geophysical applications, Geophysical Journal International, Volume 167, Issue 2, November 2006, Pages 495–503, https doi.org 10.1111 j.1365 246X.2006.02978.x \"\"\" "},{"url":"imaging/full-waveform-inversion/","title":"Seismic Full Waveform Inversion","tags":["imaging"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Seismic Full Waveform Inversion\" tags \"imaging\" layout \"layout.jlhtml\" description \"A notebook that demonstrates how interactivity makes seismic full waveform inversion more accessible and intuitive.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using FFTW using LinearAlgebra using LaTeXStrings using PlutoUI using Statistics using ProgressLogging using SparseArrays using DSP using PlutoPlotly using LossFunctions using MLUtils using FiniteDifferences using ForwardDiff using PlutoTeachingTools end using Random using Zygote using Printf using ImageFiltering PlutoUI.TableOfContents include definitions true md\"\"\" Full Waveform Inversion Seismic full waveform inversion FWI is a powerful technique for imaging the Earth's subsurface using seismic waves. However, FWI can be computationally intensive and require a deep understanding of numerical methods and algorithms. This notebook demonstrates how interactivity makes FWI more accessible and intuitive. Pseudo spectral methods are used to solve the 2 D SH stress velocity system. The particle velocity and stress fields are staggered in time and we use a simple explicit time stepping approach. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" True Earth Medium Consider a mantle like medium that has density of 3.22 g cc and shear wave velocity of 5 km s^ 1 . Suppose it has a reflector such that the medium has a higher density below the reflector compared to above. You can specify the location and density of the reflector below. \"\"\" md\"\"\" Reference Medium Starting Medium \"\"\" md\"\"\" Particle Velocity Pseudo spectral method is applied for solving the seismic equation given the true medium parameters. Wavefields at the receivers are recorded and observed data is generated. \"\"\" md\"\"\" Lower frequency by factor bind source ffactor confirm Select 1.0, 0.75, 0.5, 0.25 default 1.0 \"\"\" md\" Gradients\" md\" Wave Equation\" md\"\"\" We shall first consider the equation of motion and simplify it to derive the 2 D SH system ```math \\rho \\ddot u \\mathbf \\nabla \\cdot \\mathbf \\sigma f . \\ ``` Lets assume that the \\ 1 particles are constrained to move only along y direction, i.e., u x u z 0 ```math \\rho \\ddot u y \\partial x \\sigma yx \\partial z \\sigma yz f y , ```\\ 2 stresses don't change along y direction to result in ```math \\partial y \\sigma \\cdot 0. ``` The constitutive equations are ```math \\sigma yx 2\\mu\\epsilon yx \\mu\\partial x u y, ``` ```math \\sigma yz 2\\mu\\epsilon yz \\mu\\partial z u y. ``` \"\"\" md\"\"\" Forward Experiment \"\"\" md\"\"\" Spatial Grids Let us set up the spatial parameters of the simulation. We define a 2 D spatial grid of extents x∈ 40,40 km and z∈ 0,40 km. \"\"\" input number of wavelengths, then roughly get the length, then use nextfast fft md\"\"\" Acquistion Geometry Choose the number of sources and receivers to be used in the simulation. \"\"\" md\"\"\" Medium This will also serve as an initial model during inversion. Medium without the reflector is considered. \"\"\" helper Gaussian smoothing for 2D arrays function smooth2D arr σ 3.0, 3.0 kernel Kernel.gaussian σ return imfilter arr, kernel end md\"\"\" Time Grid In order to study the propagation of the wave front, we need to choose a time step that satisfies the Courant condition. Here, we have chosen the Courant number to be 0.2 . \"\"\" courant number 0.2 md\" Body Forces\" source fpeak 2f0 in Hz source fmax 3f0 source fpeak maximum useful frequency as 3 fpeak md\" Inversion\" md\" Generate Data\" md\" Bundle Parameters \" md\" Loss Function\" \"\"\" mse loss observed, modelled Compute the mean squared error MSE between observed and modelled matrices. \"\"\" function mse loss observed AbstractMatrix, modelled AbstractMatrix, t window AbstractMatrix return mean observed . t window . modelled . t window .^ 2 end md\" Adjoint Simulation\" md\"Deviation between the observed and modelled data is referred to as the data error and it acts as the forcing in the case of adjoint simulation.\" md\"\"\" Gradients \"\"\" md\"\"\" Finite Difference Tests Tick to perform these tests bind do fd tests CheckBox \"\"\" do fd tests && xs zeros Float32, 3 md\"\"\" Appendix \"\"\" md\" UI\" md\"\"\" Function to choose the number of sources and receivers \"\"\" function src rec ip return PlutoUI.combine do Child src md\"\"\"Number of sources Child \"ns\", Slider range start 1,stop 20,step 1 , default 1, show value true \"\"\", rec md\"\"\"Number of receivers Child \"nr\", Slider range start 1, stop 100, step 1 , default 50, show value true \"\"\", md\"\"\" src rec \"\"\" end end bind acq confirm src rec ip md\"\"\" Function to choose the parameters of the true medium. Z location of the reflector as the well as the density of the medium below the reflector can be chosen. \"\"\" md\"\"\" Fourier Derivatives We now define methods to compute a 2 D Fourier transform. ```math \\hat u \\mathbf k , t \\frac 1 2\\pi \\sum \\mathbf x u \\mathbf x , t \\, e^ i \\mathbf k \\cdot \\mathbf x \\ , ``` The derivative property of Fourier Transform First order differentiation of a function along the x dimension is equivalent to multiplying its Fourier Transform by \\imath k x in the wavenumber domain.\\ ```math \\partial xu \\mathbf x , t \\leftrightarrow ik x \\hat u \\mathbf k , t . ``` In the following cell, the derivatives are calculated using the functions `Dx ` and `Dz `. Simply put, these functions compute the Fourier transform, apply the derivative property, and take the inverse Fourier Transform to generate the spatial derivative. \"\"\" md\" Acquisition\" function get ageom xgrid, zgrid, ns, nr zs quantile zgrid, 0.2 , zr quantile zgrid, 0.2 A ns, nr, zs fill zs, ns , zr fill zr, nr , xr nr 1 ? quantile xgrid, 0.75 range quantile xgrid, 0.15 , stop quantile xgrid, 0.85 , length nr , xs ns 1 ? quantile xgrid, 0.25 range quantile xgrid, 0.15 , stop quantile xgrid, 0.85 , length ns return A end get adj ageom ageom nr ageom.ns, ns ageom.nr, xs ageom.xr, zs ageom.zr, xr ageom.xs, zr ageom.zs m are the medium properties that will be used function get projection matrix xpos, zpos, xgrid, zgrid transpose flag false, m ones Float32, length zgrid , length xgrid l LinearIndices length zgrid , length xgrid assert length xpos length zpos n length xpos N length xgrid length zgrid I broadcast zpos, xpos do z, x iz argmin abs. zgrid . z 1 ix argmin abs. xgrid . x 1 return l iz, ix end J collect 1 n V m I return transpose flag ? sparse J, I, V, n, N sparse I, J, V, N, n end md\" Data\" function initialize data grid param, ageom zeros Float32, length grid param.tgrid , length ageom.xr end md\" Medium\" function bundle medium μ, ρ return μ μ, ρ ρ, invρ inv. ρ end function make medium random reflector nz, nx, zgrid, medium ref values amplitude 7, smoothness 1, rng Random.GLOBAL RNG, reflector true Base medium μtrue ones Float32, nz, nx . medium ref values.μ0 ρtrue ones Float32, nz, nx . medium ref values.ρ0 Compute reference velocity from μ0, ρ0 v0 sqrt medium ref values.μ0 medium ref values.ρ0 Compute reference velocity from μ0, ρ0 v1 sqrt medium ref values.μ1 medium ref values.ρ1 grad 0.5 noise amp 0.1f0 Linear velocity gradient v z v0 grad z vel lin v0 . grad . zgrid Expand to 2D field vel field repeat vel lin, 1, nx Add random noise raw vel field . noise amp . randn rng, Float32, nz, nx Top layer smoothed random velocity field raw rand rng, Float32, nz, nx base random noise smooth field smooth2D raw σ 4 Normalize between 1 3 v1, v1 minv, maxv v0, v0 v1 2.0 vel field minv . maxv minv . smooth field . minimum smooth field . maximum smooth field minimum smooth field Generate random perturbation shape across x direction noise randn rng, nx random noise perturb amplitude . sin. range 0, 2π length nx . smoothness . noise perturb round. Int, perturb convert to indices Convert back to μ and ρ here we assume ρ stays ~ρ0, adjust μ ρtrue ones Float32, nz, nx . medium ref values.ρ0 base index round Int, quantile zgrid, 0.65 . step zgrid Ensure reflector stays within bounds reflector indices clamp. base index . perturb, 1, nz Apply density perturbation column by column for ix in 1 nx vel field reflector indices ix end, ix . v1 ρtrue reflector indices ix end, ix . medium ref values.ρ1 end μtrue . vel field .^ 2 . ρtrue return bundle medium μtrue, ρtrue , reflector indices end function update xsρ x, xs xρ, xinvμ chunk x, 2 N length xρ N2 div N, 2 X view xρ, N2 N2 length xs 1 copyto X, xs return xs end function update xsinvμ x, xs xρ, xinvμ chunk x, 2 N length xρ N2 div N, 2 X view xinvμ, N2 N2 length xs 1 copyto X, xs return xs end function get xs x, xs xρ, xinvμ chunk x, 2 N length xρ N2 div N, 2 return vcat xρ N2 N2 length xs 1 , xinvμ N2 N2 length xs 1 end ╠═╡ begin e.g., get vs mean, medium get vs op, medium op sqrt. medium.μ . medium.ρ get vs medium sqrt. medium.μ . medium.ρ end ╠═╡ χ m, m0 log m m0 invχ x, m0 exp x m0 ρ0 Float32 3.22 10^ 3 10^15 density in kg km3 ρ1 Float32 5.00 10^ 3 10^15 density in kg km3 μ0 Float32 40 10^9 10^3 μ1 Float32 82 10^9 10^3 invρ0 inv ρ0 invμ0 inv μ0 medium ref values μ0, invμ0, ρ0, invρ0, ρ1, μ1 medium ref values function get x medium, ref medium ref values return vcat vec χ. medium.ρ, ref.ρ0 , vec χ. inv. medium.μ , ref.invμ0 end function update medium medium, x, ref medium ref values xρ, xinvμ chunk x, 2 map medium.μ, xinvμ do xm inv invχ xm, ref.invμ0 end map medium.ρ, xρ do xm invχ xm, ref.ρ0 end map medium.invρ, medium.ρ do ρ inv ρ end return medium end function update x x, medium, ref medium ref values xρ, xinvμ chunk x, 2 map xinvμ, medium.μ do m χ inv m , ref.invμ0 end map xρ, medium.ρ do m χ m, ref.ρ0 end return x end minimum velocity min sqrt medium ref values.μ0 medium ref values.ρ0 , sqrt medium ref values.μ1 medium ref values.ρ1 minimum wavelength minimum velocity source fmax begin points per wavelength 2 Spatial step size dx minimum wavelength inv points per wavelength dz dx domain extends zgrid range 0, stop 40, step dx xgrid range 40, stop 40, step dx end grid sizes nx, nz length xgrid , length zgrid Reference medium medium ref let μref fill medium ref values.μ0, nz, nx ρref ones Float32, nz, nx . medium ref values.ρ0 bundle medium μref, ρref end x0 get x medium ref ageom get ageom xgrid, zgrid, acq.ns, acq.nr adj ageom get adj ageom ageom medium true make medium random reflector nz, nx, zgrid, medium ref values minimum density minimum medium true.ρ maximum density maximum medium true.ρ function choose param truemed return PlutoUI.combine do Child zloc md\"\"\"Z location km Child \"z\", Slider zgrid floor Int,0.3 nz end , default zgrid floor Int,0.5 nz , show value true \"\"\", dens md\"\"\"Density g cc Child \"ρ\", Slider range start 4, stop 6, step 0.1 , default 5, show value true \"\"\", md\"\"\" zloc dens \"\"\" end end begin Fz plan rfft zeros Float32, nz, nx , 1 Fx plan rfft zeros Float32, nz, nx , 2 kx reshape collect rfftfreq nx, inv step xgrid , 1, 2 pi kz reshape collect rfftfreq nz, inv step zgrid , , 1 2 pi storagex zero Fx zeros Float32, nz, nx storagez zero Fz zeros Float32, nz, nx fp Fx, Fz, kx, kz, storagex, storagez function Dx dPdx, P, fp mul fp.storagex, fp.Fx, P broadcast , fp.storagex, fp.storagex, fp.kx rmul fp.storagex, im ldiv dPdx, fp.Fx, fp.storagex end Dx dP, P Dx dP, P, fp Dx P dPdx zero P Dx dPdx, P, fp dPdx function Dz dPdz, P, fp mul fp.storagez, fp.Fz, P broadcast , fp.storagez, fp.storagez, fp.kz rmul fp.storagez, im ldiv dPdz, fp.Fz, fp.storagez end Dz dP, P Dz dP, P, fp Dz P dPdz zero P Dz dPdz, P, fp dPdz end test transpose of Dx begin x1 rand Float32, nz, nx y1 rand Float32, nz, nx dot Dx x1 , y1 , dot x1, Dx y1 end Choosing the extent of taper for absorbing boundaries taper points floor Int, 4 minimum wavelength dz ╠═╡ assert minimum get vs medium true minimum velocity ╠═╡ maximum velocity max sqrt medium ref values.μ0 medium ref values.ρ0 , sqrt medium ref values.μ1 medium ref values.ρ1 choose time stepping dt to satisfy Courant condition dt courant number step xgrid inv maximum velocity nt let lets calculate the min distance from the center to the edge of the domain r min xgrid end xgrid 1 , zgrid end zgrid 1 0.5 nt Int floor r minimum velocity dt 5 end tgrid range 0, length nt, step dt md\"\"\" Time in seconds to viz. forward and adjoint wavefields bind t forw Slider round. tgrid 2 end 3 , digits 4 , show value true \"\"\" length tgrid ╠═╡ assert maximum get vs medium true maximum velocity ╠═╡ md\" Absorbing Boundaries\" function get taper array nx, nz np 50, tapfact 0.20 tarray ones Float32, nz, nx for ix in 1 np tarray , ix . tarray , ix abs2 exp tapfact abs np ix 1 np tarray , nx ix 1 . tarray , nx ix 1 abs2 exp tapfact abs np ix 1 np end for iz in 1 np tarray iz, . tarray iz, abs2 exp tapfact abs np iz 1 np tarray nz iz 1, . tarray nz iz 1, abs2 exp tapfact abs np iz 1 np end return tarray end NamedTuple for grid related parameters grid param xgrid, zgrid, tgrid, dt step tgrid , nt length tgrid , nx length xgrid , nz length zgrid , tarray get taper array nx, nz, np taper points, tapfact 0.1 function clip edges m, grid param xgrid, zgrid grid param I findall x isequal x, 1 , grid param.tarray xs extrema unique getindex. I, 2 zs extrema unique getindex. I, 1 return xgrid range xs... , zgrid range zs... , m range zs... , range xs... end plot heatmap x xgrid, y zgrid, z grid param.tarray md\"\"\" Fields \"\"\" function initialize fields pa, nt snap store false nz, nx pa.nz, pa.nx f vy zeros Float32, nz, nx , dvydx zeros Float32, nz, nx , dvydz zeros Float32, nz, nx , σyx zeros Float32, nz, nx , dσyxdx zeros Float32, nz, nx , σyz zeros Float32, nz, nx , dσyzdz zeros Float32, nz, nx if snap store fs vys zeros Float32, nz, nx for i in 1 nt , σyxs zeros Float32, nz, nx for i in 1 nt , σyzs zeros Float32, nz, nx for i in 1 nt return merge f, fs else return f end end function reset fields fields fill fields.vy, zero Float32 fill fields.dvydx, zero Float32 fill fields.dvydz, zero Float32 fill fields.σyx, zero Float32 fill fields.σyz, zero Float32 fill fields.dσyxdx, zero Float32 fill fields.dσyzdz, zero Float32 end function propagate data, fields, pa, medium, ageom, source source spray and receiver projection matrix Rs get projection matrix ageom.xs, ageom.zs, grid param.xgrid, grid param.zgrid, transpose flag false, m medium.invρ Rr get projection matrix ageom.xr, ageom.zr, grid param.xgrid, grid param.zgrid, transpose flag true reset fields fields vy, dvydx, dvydz, σyx, σyz, dσyxdx, dσyzdz fields nx, nz, tarray, tgrid, dt, nt pa μ, ρ, invρ medium time loop progress for it 1 nt update vy Dx dσyxdx, σyx Dz dσyzdz, σyz . vy vy invρ dσyxdx dσyzdz dt . vy vy pa.tarray body force need to view vy as a vector for source recording operations vyv view vy, f view source, it, mul vyv, Rs, f, dt, 1.0 update σ Dx dvydx, vy Dz dvydz, vy record fields d view data, it, mul d, Rr, vyv . σyx σyx μ dvydx dt . σyx σyx pa.tarray . σyz σyz μ dvydz dt . σyz σyz pa.tarray vys ∈ keys fields && copyto fields.vys it , vy σyxs ∈ keys fields && copyto fields.σyxs it , σyx σyzs ∈ keys fields && copyto fields.σyzs it , σyz end return nothing end md\" Gradients\" function initialize grad pa, nt nz, nx pa.nz, pa.nx return g zeros Float32, 2 nz nx , gρ zeros Float32, nz, nx , ginvμ zeros Float32, nz, nx end function update gx gx, g, x, ref medium ref values xρ, xinvμ chunk x, 2 gρ, ginvμ chunk g, 2 gxρ, gxinvμ chunk gx, 2 map gxinvμ, ginvμ, xinvμ do g, m ref.invμ0 exp m g end map gxρ, gρ, xρ do g, m ref.ρ0 exp m g end return x end create a function to compute grad phi and grad mu function reduce gradients grad, x, forwfields, adjfields, pa g, gρ, ginvμ grad fill g, zero Float32 fill gρ, zero Float32 fill ginvμ, zero Float32 nx, nz, tarray, dt, tgrid pa nt1 1 nt2 length tgrid term u nt v 1 . gρ gρ adjfields.vys nt2 forwfields.vys nt2 term τ nt 1 σ 1 . ginvμ ginvμ adjfields.σyxs nt2 1 forwfields.σyxs nt2 adjfields.σyzs nt2 1 forwfields.σyzs nt2 for gradρ for it nt1 nt2 1 . gρ gρ adjfields.vys it forwfields.vys it 1 forwfields.vys it end . gρ gρ pa.tarray for gradμ for it nt1 1 nt2 1 . ginvμ ginvμ adjfields.σyxs it 1 forwfields.σyxs it 1 forwfields.σyxs it adjfields.σyzs it 1 forwfields.σyzs it 1 forwfields.σyzs it . gμ gμ pa.tarray end multiply with dt rmul ginvμ, inv dt rmul gρ, inv dt gρ1, ginvμ1 chunk g, 2 copyto gρ1, gρ copyto ginvμ1, ginvμ parameterization update gx g, g, x end md\" Wavelets\" md\"\"\" Generate a Ricker Wavelet. Reference Frequencies of the Ricker wavelet, Yanghua Wang, GEOPHYSICS, VOL. 80, NO. 2. Its bandwidth is roughly 1.2 fpeak. `fqdom Float32` dominant frequency `tgrid` time domain grid `tpeak Float32 tgrid 1 1.5 fqdom` the peak of the ricker in time has a default \"\"\" function ricker fqdom, tgrid tpeak is the location of the peak amplitude tpeak tgrid 1 1.5 fqdom, using approximate half width of ricker trim tol 0.0, maxamp 1.0 tpeak tgrid 1 1.5 fqdom && error \"cannot output Ricker for given tgrid and tpeak\" tpeak tgrid end 1.5 fqdom && error \"cannot output Ricker for given tgrid and tpeak\" isapprox fqdom, 0.0 && error \"dominant frequency cannot be zero\" some constants pf π π fqdom^2.0 nt length tgrid δt step tgrid initialize wav zero tgrid ricker wavelet for it 1 nt tsquare tgrid it tpeak tgrid it tpeak wav it 1.0 2.0 pf tsquare exp 1.0e0 pf tsquare maxamp end isapprox maximum abs. wav , 0.0 && warn \"wavelet is zeros\" return Float32. wav end begin source wavelet ricker source fpeak source ffactor, tgrid, maxamp 1e15 source repeat source wavelet, 1, ageom.ns end plot tgrid, source wavelet, size 500, 200 , w 2, label \"Source Wavelet\", Layout width 500, height 250 source wavelet | typeof begin Initialisation of fields and data fields true initialize fields grid param, grid param.nt dobs initialize data grid param, ageom Running the simulation to generate observed data time propagate dobs, fields true, grid param, medium true, ageom, source end md\"\"\" Window Data Receiver 1 bind t grad1 confirm RangeSlider tgrid left first tgrid , right last tgrid , show value true Receiver size dobs, 2 Last bind t grad2 confirm RangeSlider tgrid left first tgrid , right last tgrid , show value true \"\"\" t window let nrec size dobs, 2 number of receivers nt length tgrid number of time samples win zeros Float32, nt, nrec Interpolate start and end times across receivers t start range t grad1 1 , t grad2 1 , length nrec t end range t grad1 end , t grad2 end , length nrec for irec in 1 nrec nt1 argmin abs. tgrid . t start irec nt2 argmin abs. tgrid . t end irec win nt1 nt2, irec . 1.0 end win end loss modelled mse loss dobs, modelled, t window function get adj source dobs, d , adj source Zygote.withgradient loss, d return reverse adj source 1 , dims 1 end begin Initialisation of fields and data fields forw initialize fields grid param, grid param.nt, snap store true dref initialize data grid param, ageom Simulation to compute wavefields propagate dref, fields forw, grid param, medium ref, ageom, source reverse the time order of fields stored reverse fields forw.vys reverse fields forw.σyxs reverse fields forw.σyzs end adj source get adj source dobs, dref begin Initialisation of fields and data fields adj initialize fields grid param, nt, snap store true dadj initialize data grid param, adj ageom Simulating the adjoint field propagate dadj, fields adj, grid param, medium ref, adj ageom, adj source end begin gradient initialize grad grid param, grid param.nt reduce gradients gradient, x0, fields forw, fields adj, grid param end do fd tests && g2ρ get xs gradient.g, xs 1 length xs Gradients wrt ρ computed via adjoint state method do fd tests && g2invμ get xs gradient.g, xs length xs 1 end Gradients wrt μ⁻¹ computed via adjoint state method fwi param fields forw initialize fields grid param, nt, snap store true , fields adj initialize fields grid param, nt, snap store true , medium deepcopy medium ref , dref, ageom, adj ageom, source, adj source, dobs, grid param, xbuffer get x medium ref function J x fwi param fwi param dref, fields forw, grid param, medium, ageom, source fwi param update medium medium, x propagate dref, fields forw, grid param, medium, ageom, source return loss dref end function Jsρ xs fwi param fwi param Function to check gradients wrt ρ update xsρ fwi param.xbuffer, xs return J fwi param.xbuffer, fwi param fwi param end do fd tests && time Jsρ xs do fd tests && g1ρ grad central fdm 2, 1 , Jsρ, xs Gradients wrt ρ using central difference do fd tests && g1ρ 1 . g2ρ function Jsinvμ xs fwi param fwi param Function to check gradients wrt invμ update xsinvμ fwi param.xbuffer, xs return J fwi param.xbuffer, fwi param fwi param end do fd tests && time Jsinvμ xs do fd tests && g1invμ grad central fdm 2, 1 , Jsinvμ, xs Gradients wrt μ⁻¹ using central difference do fd tests && g1invμ 1 . g2invμ md\"\"\" Plots \"\"\" md\"This function plots the wavefield after clipping the edges.\" function add ageom fig, ageom, row, col if ageom nothing add trace fig, scatter x ageom.xr, y ageom.zr, mode \"markers\", marker color \"black\", marker symbol \"triangle down\", showlegend false , row row, col col add trace fig, scatter x ageom.xs, y ageom.zs, mode \"markers\", marker color \"black\", marker size 10, marker symbol \"star\", showlegend false , row row, col col end end \"\"\" Plot heatmaps of displacement velocity fields \"\"\" function fieldheat fields, titles, grid param, ageom nothing zmax1 1.0, zmax2 1.0, zscale34 1.0 assert length fields length titles 4 fig Plot Layout yaxis autorange \"reversed\", title attr font size 12, , font attr size 10 , yaxis attr scaleanchor \"x\", scaleratio 1 , Subplots shared xaxes true, shared yaxes true, horizontal spacing 0.04, vertical spacing 0.04, rows div length fields 1, 2 1, cols 2, subplot titles titles i 0 for f in fields i i 1 ic 2 mod i, 2 ir div i 1, 2 1 x, y, z clip edges f, grid param dmax if i 1 zmax1 elseif i 2 zmax2 else maximum abs, f . zscale34 end add trace fig, heatmap xmin 30, xmax 30, x x, y y, z z, zmin dmax, zmax dmax, colorscale \"seismic\", showscale false , row ir, col ic add ageom fig, ageom, ir, ic end return PlutoPlotly.plot fig end let it convert Int, floor t forw step tgrid t grad1, t grad2 adj source fieldheat fields forw.vys length tgrid it , fields adj.vys length tgrid it , gradient.gρ, gradient.ginvμ , \"Forward Field\" \"Adjoint Field\" \"Gradient w.r.t. ρ\" \"Gradient w.r.t. μ⁻¹\" , grid param, ageom, zmax1 0.2 maximum map fields forw.vys do y maximum abs. y end , zmax2 0.2 maximum map fields adj.vys do y maximum abs. y end , zscale34 0.5 end ╠═╡ function mediumheat medium, ageom nothing μ, ρ medium c get vs medium x, y, c clip edges c, grid param , , ρ clip edges ρ, grid param fig Plot Layout yaxis autorange \"reversed\", height 300, width 650, title attr font size 12, , font attr size 10 , yaxis attr scaleanchor \"x\" , Subplots shared xaxes true, shared yaxes true, horizontal spacing 0.3, rows 1, cols 2, subplot titles \"Velocity km s \" \"Density g cc \" add trace fig, heatmap x x, y y, z c, zmin minimum velocity, zmax maximum velocity, colorscale \"Portland\", colorbar x 0.35 , row 1, col 1 add trace fig, heatmap x x, y y, z ρ 1e 12, zmin minimum density 1e 12, zmax maximum density 1e 12, colorscale \"Portland\", colorbar x 1.0 , row 1, col 2 if ageom nothing for ic in 1 2 add ageom fig, ageom, 1, ic end end return PlutoPlotly.plot fig end ╠═╡ ╠═╡ mediumheat medium true, ageom ╠═╡ ╠═╡ mediumheat medium ref, ageom ╠═╡ \"\"\" Plot heatmaps for data \"\"\" function dataheat d, tgrid title \"Data\", scale 1.0 data d dmax maximum abs, data trace heatmap z data, x 1 size data, 2 , y tgrid, colorscale \"RdBu\", reversescale true, zmin dmax scale, zmax dmax scale, layout Layout title title, width 225, height 501, xaxis range 0, size data, 2 1 , yaxis range tgrid 1 , tgrid end , yaxis scaleanchor \"x\", yaxis scaleratio size data, 1 size data, 2 , yaxis autorange \"reversed\", xaxis title \"Receiver \", yaxis title \"Time s \", nrec size d, 2 x left 0.5 x right nrec 0.5 t grad1 start first, end first t grad2 start last, end last y bl float t grad1 1 bottom left receiver 1 min time y tl float t grad1 end top left receiver 1 max time y br float t grad2 1 bottom right receiver N min time y tr float t grad2 end top right receiver N max time SVG style path use spaces no commas and format numbers cleanly path str sprintf \"M %0.6f %0.6f L %0.6f %0.6f L %0.6f %0.6f L %0.6f %0.6f Z\", x left, y bl, x right, y br, x right, y tr, x left, y tl layout shapes attr type \"path\", path path str, xref \"x\", yref \"y\", fillcolor \"Yellow\", opacity 0.25, line width 0 return plot trace, layout end ThreeColumn md\"\"\" dataheat dobs, tgrid, title \"Observed Data\", scale 0.01 \"\"\", md\"\"\" dataheat dref, tgrid, title \"Modelled Data\", scale 0.01 \"\"\", md\"\"\" dataheat t window . reverse adj source, dims 1 , tgrid, title \"Adjoint Sources\", scale 0.1 \"\"\" md\"\"\" We now know how to calculate the derivatives using functions `Dx` and `Dz`. Let's now discretize the time dimension and formulate an explicit time stepping leap frog scheme and alternatively update the velocity and stress fields. We will start with the velocity field ```math \\rho \\dot v y \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 , ``` where the finite difference approximation for the time derivative for timestep dt is ```math \\frac \\rho v y it v y it 1 dt \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 , ``` ```math v y it v y it 1 \\frac dt \\rho \\left \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 \\right , ``` ```math v y it v y it 1 \\frac dt \\rho \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 . ``` Similarly, for updating the stresses, ```math \\dot \\sigma 21 \\mu\\frac dv y dx , ``` ```math \\dot \\sigma 23 \\mu\\frac dv y dz , ``` we can write ```math \\sigma 21 it \\tfrac 1 2 \\sigma 21 it \\tfrac 1 2 \\mu\\mathrm Dx v y dt, ``` ```math \\sigma 23 it \\tfrac 1 2 \\sigma 23 it \\tfrac 1 2 \\mu\\mathrm Dz v y dt. ``` Notice that the temporal grid of stress and velocity are staggered. Finally, let's write a function now that leaps by a given number of steps. \"\"\" "},{"url":"introduction/coupled_oscillations/","title":"Oscillations","tags":["introduction"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Oscillations\" tags \"introduction\" layout \"layout.jlhtml\" description \"Environment for exploring oscillations\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using LinearAlgebra using Plots using PlutoUI using LaTeXStrings using PlutoTeachingTools using PlutoUI using Symbolics using SymbolicUtils using Einsum using TikzPictures using Roots end TableOfContents md\"\"\" Coupled Oscillations This notebook creates an interactive environment to explore the coupled oscillations of `N` particles attached to springs. We write the equation of motion for each of the particles and then solve for the modes of the system. The user can select a particular mode to visualize the oscillations. Notice that all the particles oscillate in phase given a particular mode. This exercise will help us transition from the oscillations of one particle to the oscillations of a continuous object, that is, seismic waves. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"Number of particles bind N Slider 2 10, show value true \" bind tplot Clock 0.1 md\"\"\" ```math \\omega 0 \\sqrt\\frac k m ``` Each spring is assumed to have a constant k and each particle has mass m . \"\"\" variables t ω₀ ω variables x 1 N A 1 N Dt Differential t md\" Determinant Method\" md\"\"\" `fma` constructs the equations of motion for a system of N particles connected by springs. Here's a breakdown of how it works First particle Boundary Condition This represents the equation of motion for the first particle, considering the spring force from the boundary and the second particle. Intermediate Masses This represents the equations of motion for the intermediate masses, considering the spring forces from both the previous and the next particles. Last Mass Boundary Condition This represents the equation of motion for the last mass, considering the spring force from the second to last particle and the boundary. \"\"\" fma vcat Dt Dt x 1 ω₀^2 x 1 ω₀^2 x 1 x 2 , Dt Dt x i ω₀^2 x i x i 1 ω₀^2 x i x i 1 for i in 2 N 1 , Dt Dt x N ω₀^2 x N ω₀^2 x N x N 1 md\"\"\" Now we create a dictionary that substitutes each `x i ` with `A i cos ω t `. This is used to apply the ansatz a trial solution for the oscillatory motion of the masses. This substitution assumes that each mass oscillates with a cosine function, where `A i ` gives the amplitude and ω is the angular frequency. \"\"\" subs ansatz Dict x i A i cos ω t for i in 1 N fma2 map fma do f f1 simplify expand derivatives substitute f, subs ansatz cos ω t end md\"\"\" Lets find \\Omega such that ```math \\Omega A 0. ``` \"\"\" subs A i Dict A j i j ? 1.0 0.0 for j in 1 N Ω hcat map 1 N do i substitute f, subs A i for f in fma2 end... Symbolics.scalarize collect Ω Ωdet det collect Ω Ωdet fn build function substitute Ωdet, ω₀ 1 , ω, expression Val false roots filter x x 0, find zeros Ωdet fn, 100,100 md\"Select the mode to visualize bind imode Slider 1 length roots , show value true \" Ω1 map x getfield x, val , collect map Ω do om substitute om, ω₀ 1.0, ω roots imode end A1 nullspace Ω1 points 0.2 A1 i cos roots imode tplot x, 0 for i,x in zip 1 N, range 1, stop 1, length N md\" Appendix\" md\"\"\" Plotting \"\"\" function plotmasses a, t \"\" p scatter first. a , last. a , c red, xlim 3,3 , ylim 2,2 , yaxis nothing, xlabel L\"x\", label nothing, size 500,200 , title t return p end plotmasses points, \"N N particles Mode imode t tplot\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz 3dplot \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\tikzstyle spring thick,decorate,decoration aspect 0.5, segment length 1mm, amplitude 2mm,coil \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot spring block x TikzPicture L\"\"\" \\draw thick 0,0 0,1 \\draw thick 0,0 3,0 node draw none,xshift 5pt \\tiny x \\node at 0,0.25 a draw none \\node at % x , 0.25 b minimum size 0.5cm,label \\rightarrow m \\draw spring a b node draw none,pos .5,right .25cm \\node at 2, 1 c draw none,yshift 5pt \\tiny x 0 \\draw dashed b.south c.north \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot spring block 1 "},{"url":"introduction/history/","title":"Historical Review","tags":["introduction"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Historical Review\" layout \"layout.jlhtml\" tags \"introduction\" description \"Some notes on the historical review and introductory material\" using Markdown using InteractiveUtils using PlutoUI, PlutoTeachingTools ChooseDisplayMode TableOfContents md\"\"\" Seismology \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" the study of mechanical vibrations of the Earth The science of seismology has double feature, it aims simultaneously to obtain the infrastructure of the Earth's interior with the aid of seismic wave phenomena nature of earthquake sources with an ultimate goal of mitigating them \"\"\" PlutoUI.LocalResource \".. assets images what is inside the Earth.png\" md\" Seismology Unique Characteristics\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" 1 concerned only with the mechanical properties and dynamics of the Earth 2 seismic waves allow investigation of Earth's interior out to the greatest depths than any other branch of geophysics they have least distortion compared to any other wave that can be observed after propogating through the Earth 3 contributes to our knowledge of only the present state of the Earth's interior \"\"\" PlutoUI.LocalResource \".. assets images interior cartoon.png\" md\" Seismology Interdisciplinary Science\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" medicine knowledge of anatomy, chemistry of drugs, physics of lasers, mathematics of tomography seismology geology , engineering , physics , mathematics , and computation \"\"\" Markdown.MD Markdown.Admonition \"note\", \"\", md\"\"\" most of the theory needed to interpret seismograms through efforts of physicists and mathematicians prior to 1922 its history is inseparable from the history of great achievements in continuum mechanics , applied mathematics , and general wave theory \"\"\" PlutoUI.ExperimentalLayout.hbox PlutoUI.LocalResource \".. assets images ct head.png\", height 200 ,PlutoUI.LocalResource \".. assets images garnero mcnamara.jpg\", height 200 md\" Seismology\" Markdown.MD Markdown.Admonition \"warning\", \"Principal Components\", md\"\"\" seismometry and experimental seismology theory of seismic fields in the earth rays, waves, modes, beams seismic sources Earth's internal structure \"\"\" md\" Scales in Seismology\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" seismic sources , a factor of 10^ 18 in equivalent seismic moment smallest detectable micro earthquake to 1960 Chile earthquake seismograph networks , a factor of 10^6 in linear dimension 10 meter in engineering surveys to 10000 km global array observatories ground displacement , a factor of 10^ 11 smallest detectable ground displacement of 10^ 10 m compare with diameter of the hydrogen atom to ≈ 10 m of slip on a major fault during the earthquake \"\"\" md\"\"\" Seesaws in Seismology \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" effects of sources and medium are strongly coupled in seismology our knowledge of the seismic sources and the Earth medium have advanced in a see saw fashion, i.e., if sources are better understood at a given stage, they are constrained to better understand the medium, and then the improved knowledge of the medium is used to revise our knowledge of the source \"\"\" PlutoUI.LocalResource \".. assets images seismic ducks.png\", height 400 md\" Seismology\" Markdown.MD Markdown.Admonition \"warning\", \"Stimuli of Rapid Growth\", md\"\"\" occurrence of major devastating earthquakes exploration oil and gas, minerals advances in mathematics and theoretical physics breakthroughs in sensing or computation technology planetary exploration \"\"\" md\" Seismology and Big Data\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" exponential growth in better quality data 1901 25 seismic stations 1940 250 seismic stations around the globe 2023 10000 seismic stations around the globe \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"Current Holistic Statge\", md\"\"\" imaging the Earth's interior and seismic sources will all available data \"\"\" md\"\"\" Seismologists are Handicapped \"\"\" Markdown.MD Markdown.Admonition \"danger\", \"\", md\"\"\" meteorologists can put their sensors in the eye of a hurricane, we cannot put a sensor in the focal region of an earthquake heavy dependency on the far field measurements physical theory as to what happens at the earthquake source is missing \"\"\" Markdown.MD Markdown.Admonition \"danger\", \"\", md\"\"\" most of the current graduate students engaged in computer simulation games and or seismic data processing challenges, with insufficient efforts to construct new theoretical physical models we need endeavors to come up with new mathematical weapons to understand the nonlinear dynamics \"\"\" md\"\"\" Some Technical Remarks \"\"\" Markdown.MD Markdown.Admonition \"danger\", \"\", md\"\"\" A more technical definition mostly a study where the spatial fluctuations in particle displacements, strains, and stresses have wavelengths much larger than the amplitudes of the particle displacements in the Earth's medium in other words, we don't use the equation of motion in its strict form Aki and Richards, Ch.2 \"\"\" md\" Historical Review\" md\"\"\" Seismometry \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" a seismograph for an earth scientist what the telescope is to the astronomer a tool for peering into inaccessible regions Ari Ben Menahem \"\"\" md\"\"\" 1819 Observations of faulting associated with Kutch earthquake in India \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" major earthquakes continue to serve as milestones on the road of progress in seismology \"\"\" md\"\"\" 1841 James David Forbes the first seismometer \"\"\" md\"\"\" 1857 Robert Mallet an engineer who laid the foundation of instrumental seismology first systematic attempt to apply physical principles to earthquake effects first world seismicity map \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" Mallet, the first true seismologist, used bowls of mercury at varying distances from sources to measure the propogation of waves \"\"\" md\"\"\" 1884 Rossi Forel, J. F. J Schmidt a scale for earthquake effects \"\"\" md\"\"\" 1889 Ernst von Rebeur Paschwitz first measurement of teleseismic Japanese earthquake \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" birth of teleseismic seismograms earthquakes are no longer a local affair of cities but became a global phenomenon this was the first revolution \"\"\" Markdown.MD Markdown.Admonition \"tems\", \"\", md\"\"\" When first seismogram was measured in early 1880s, seismologists were puzzled why it lasted long and why there are oscillations after the arrivals or P and S waves \"\"\" md\"\"\" 1894 Milne and his associates compact seismograph system, and seismology emerged as a quantitative science \"\"\" md\"\"\" 1895 F. Omori a law for aftershock time series \"\"\" md\"\"\" 1897 R. D. Oldham identification of three types of waves P, S and R in seismograms \"\"\" md\"\"\" 1900 Emil Wiechert three component mechanical seismograph system \"\"\" md\"\"\" 1906 observed faulting and slip for California earthquake \"\"\" md\"\"\" 1910 Boris Borisovich Golitzin first electromagnetic seismograph \"\"\" md\"\"\" 1935 Hugo Benioff measure a component of ground strain a strain seismograph measures variation in displacement between two points in space \"\"\" md\"\"\" 1942 B. Gutenberg, C. Richter first empirical observations between earthquake magnitude, intensity, energy, and frequency of occurrence \"\"\" md\"\"\" 1946 age of nuclear testing the use of nuclear explosions greatly enhanced the capabilities of seismic studies of the Earth's interior \"\"\" md\"\"\" 1964 1969 large seismometer arrays came into vogue \"\"\" md\"\"\" 1969 Apollo passive seismic experiment beginning of planetary seismology \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" When the first seismogram for the Moon was obtained in 1969, seismologists were again puzzled by the great length of time for which oscillations continued \"\"\" md\"\"\" 1978 ocean bottom seismographs \"\"\" md\"\"\" 1982 Global Digital Seismograph Network a worldwide network of more than 100 stations \"\"\" md\"\"\" 2011 Distributed Acoustic Sensing DAS Rayleigh scattering based DAS systems use fiber optic cables to provide distributed strain sensing \"\"\" md\"\"\" Theory of Seismic Fields in the Earth \"\"\" md\"\"\" 1660 Robert Hooke stated one dimensional linear stress strain relationship, thus laying the foundation for theory of elasticity \"\"\" md\"\"\" 1807 Thomas Young recognize shear as elastic strain and defined modulus of elasticity \"\"\" md\"\"\" 1821 to 1831 C. Navier, A. Cauchy, S. D. Poisson fundamental equations of linear elastodynamics Cauchy's stress strain relations existence of compressional and shear waves in elastic solids created confusion in the wave theory of light if two types of light waves should be visible \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" Navier was a disciple of Fourier and a professor of mechanics he was the first one to derive elastodynamic displacement equations \"\"\" md\"\"\" 1829 to 1850 S. D. Poisson, G. G. Stokes, Lord Kelvin, H. Lamb, G. Lame theoretical studies on the vibrations of elastic bodies Stokes fundemental equation on viscous fluids \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" even though Poisson discovered longitudinal and transverse waves in 1828, they were only first observed in seismograms by Oldham in 1897 \"\"\" md\"\"\" 1872 E. Betti Reciprocity relations leading later to the representation theorem of elastodynamics \"\"\" md\"\"\" 1877 E. B. Christoffel plane wave phase velocities in general anisotropic media \"\"\" md\"\"\" 1885 Lord Rayleigh a homogeneous elastic substance can accommodate a third wave at its boundary Rayleigh waves are inhomogeneous waves \"\"\" md\"\"\" 1898 T. Bromwich studied the influence of gravity on elastic waves \"\"\" md\"\"\" 1899 C. G. Knott refraction and reflection coefficients of plane seismic waves at planar discontinuities \"\"\" md\"\"\" 1904 H. Lamb first synthetic seismogram a mathematical model of an earthquake in a half space configuration, known as Lamb's problem \"\"\" md\"\"\" 1904 A. E. H. Love 3 D elastodynamic representation theorem \"\"\" md\"\"\" 1905 R. Becker theory of standard linear solids with relaxation, as a physical model for anelasticity \"\"\" md\"\"\" 1910 H. Benndrof, K. Zoppritz ray theory for seismic signal propagation in spherically symmetric Earth models \"\"\" md\"\"\" 1910 M. R. Frechet functional calculus the \"Frechet\" derivative \"\"\" md\"\"\" 1911 A. E. H. Love Love waves are transversely polarized waves, which are not included in the theories of Rayleigh and Lamb \"\"\" md\"\"\" 1912 H. Lamb group and phase velocity of surface waves and the interpretation of seismograms \"\"\" md\"\"\" 1920 Harold Jeffreys advanced mathematical and statistical methods into seismic data analysis \"\"\" md\"\"\" 1920 L. M. Hoskins studied free oscillations of gravitating radially inhomogeneous spheres \"\"\" md\"\"\" 1926 M. Born the Born approximation of wavefields \"\"\" md\"\"\" 1930 N. Wiener tools for computerized signal analysis \"\"\" md\"\"\" 1949 R. Stoneley effect of anisotropy on elastic surface waves \"\"\" md\"\"\" 1953 P. M. Morse, H. Feshbach elastodynamic integral representation theorem \"\"\" md\"\"\" 1955 Fourier transform methods into analysis of surface wave dispersion and attenuation \"\"\" md\"\"\" 1960 1975 age of digital computers computer generated synthetic seismograms huge amounts of seismological data can be processed in a relatively short time asymptotic wave theories in vertically in homogeneous media \"\"\" md\"\"\" 1970 1985 asymptotic ray theory, ray tracing in complex media, shadow zones finite difference and finite element methods theory of inversion and resolution of gross Earth data imaging in inhomogeneous elastic media Kirchoff Helmholtz integral formulation Kirchoff migration \"\"\" md\"\"\" 1984 back projection of travel time delays along ray paths seismic wave tomographic inversion diffraction tomography in exploration seismology full waveform inversion \"\"\" md\"\"\" Earth's Internal Structure \"\"\" md\"\"\" 1798 Henry Cavendish determined mean density of the Earth using Newton's law of universal gravitation \"\"\" md\"\"\" 1863 Lord Kelvin used tidal observations to estimate that the mean rigidity of the Earth exceeds that of steel \"\"\" md\"\"\" 1888 A. Schmidt argues in general that wave velocity increases with depth, and raypaths will be curved and convave upward toward the Earth surface \"\"\" md\"\"\" 1897 Emil Wiechert numerical details of an Earth model consisting of a core of radius almost 5000 km conjecture that the inner core is mettalic \"\"\" md\"\"\" 1910 R. D. Oldham presence of central core with a radius of 1600 km after observing substantially delayed P waves inferred that the Earth contains a central region with lower wave velocity than the surrounding shell the mantle no S waves were observed below the mantle \"\"\" md\"\"\" 1909 K. Zoppritz first traveltime inversion calculation of travel time tables for seismic phases and analytical solutions for Abel type integral equations to determine wave velocity as a function of depth \"\"\" md\"\"\" 1909 Andrija Mohorovicic evidence of a sharp increase in the P wave velocity 54 km below the Earth's surface \"\"\" md\"\"\" 1914 Beno Gutenberg found a low velocity zone at a depth of 2900 km \"\"\" md\"\"\" 1921 E. Meissner observed dispersion of surface waves in the Earth crust \"\"\" md\"\"\" 1923 E. D. Williamson and L. H. Adams use seismological data, values of Earth's mass and moment of inertia to estimate density gradients of the Earth \"\"\" md\"\"\" 1930 V. Conard H. Jeffreys three layer crustal models using near field headwaves P g , S g , P^ , S^ \"\"\" md\"\"\" 1936 Inge Lehmann existence of an inner core by observing amplitudes of P waves between angular distances of 105° to 142° \"\"\" md\"\"\" 1939 H. Jeffreys apply Airy theory of diffraction near a caustic to understand wave diffraction by the Earth's core \"\"\" md\"\"\" 1942 K. E. Bullen classification of Earth's interior into a number of shells \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" computers enabled sophisticated forward and inverse computational schemes this was the second revolution 1950 1955 \"\"\" md\"\"\" 1969 1977 rays in anisotropic media evidence of anisotropy in crust and mantle \"\"\" md\"\"\" 1980 ever increasing quantity and quality of seismic data, deviations from isotropy, spherical symmetry, and pure elasticity were observed with more precision 3 D images of seismic velocities and anisotropy with detailed velocity structure near major internal boundaries \"\"\" md\"\"\" Seismic Sources \"\"\" md\"\"\" 1761 John Michell explosive theory of earthquakes earthquakes originate within the Earth, and wave spread out from the source throughout the Earth's interior \"\"\" md\"\"\" 1906 H. F. Reid studied geodetic measurements before and after an earthquakee rupture, and developed elastic rebound theory \"\"\" md\"\"\" 1907 Vito Volterra integral representation of seismic sources using Betti's reciprocity theorem \"\"\" md\"\"\" 1917 J. Shida observed regularities in the distribution of polarities of the initial P wave motion epicentral region is divided into four parts by two perpendicular lines intersecting at the epicenter \"\"\" md\"\"\" 1922 H. H. Turner existance of deep earthquakes \"\"\" md\"\"\" 1923 Hiroshi Nakano double couple model observed patterns of initial motions are explainable using classical Stokes Love solution \"\"\" md\"\"\" 1926 H. Jeffreys first use of wave amplitudes from seismograms to estimate earthquake energy release \"\"\" md\"\"\" 1952 B. Gutenberg, C. Richter surface wave magnitude maxiumum amplitude of the crustal surface waves having a specific period \"\"\" md\"\"\" 1958 J. A. Steketee equivalence theorem, stating that the displacement field produced by dislocation sources in an elastic body equals that produced by double couple forces \"\"\" md\"\"\" 1960 Chile earthquake was studied comprehensively \"\"\" md\"\"\" 1960 1980 propagating rupture over a causative fault is revealed kinematic dislocation model energy budget for major earthquakes \"\"\" md\"\"\" 1989 detailed study of the geometry of the rupture using diversified set of data near field and far field seismograms, GPS measurements, surface ruptures, aftershock spatial distribution, and focal mechanism results obtained so far point to complexity of seismic sources \"\"\" md\"\"\" Resources ^Paper Ari Ben Menahem A concise history of mainstream seismology Origins, legacy, and perspectives. Bulletin of the Seismological Society of America \"\"\" "},{"url":"introduction/strain-tensor/","title":"Strain Tensor","tags":["introduction"],"text":" A Pluto.jl notebook v0.20.13 frontmatter order \"3\" title \"Strain Tensor\" tags \"introduction\" layout \"layout.jlhtml\" description \"Deformation of a 2 D square element\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using LinearAlgebra using Plots using PlutoUI using LaTeXStrings using PlutoTeachingTools using PlutoUI using Symbolics using SymbolicUtils using Einsum using TikzPictures end TableOfContents md\"\"\" Strain Tensor This notebook demonstrates how a 2 D square element gets deformed by an input strain or spin tensor. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" The Jacobian matrix in two dimensions is given by ```math J \\begin bmatrix \\frac \\partial u x \\partial x & \\frac \\partial u x \\partial y \\\\ \\frac \\partial u y \\partial x & \\frac \\partial u y \\partial y \\end bmatrix ``` | | | | | | | \\frac \\partial u x \\partial x bind u11 Scrubbable 1 0.1 1, default 0.9 | \\frac \\partial u x \\partial y bind u12 Scrubbable 1 0.1 1 | | \\frac \\partial u y \\partial x bind u21 Scrubbable 1 0.1 1, default 0.4 | \\frac \\partial u y \\partial y bind u22 Scrubbable 1 0.1 1 | where u x and u y are components of displacements. Change the elements of the Jacobian matrix to deform an infinitesimal square element below. Furthermore, by Toeplitz decomposition, we can decompose the Jacobian as a sum of symmetric strain and skew symmetric rotation matrices. \"\"\" Jinput u11 u12 u21 u22 md\"\"\" Displacement Particle displacement is a function of space and time ```math 𝐮 𝐮 𝐱, t . ``` Here, 𝐱 denotes the position the particle occupies at a reference time t 0, which means, a particle at position 𝐱 will be moved to position 𝐮 𝐱, t at time t. The particle velocity and particle acceleration are given by ∂ₜ𝐮 and ∂ₜ²𝐮, respectively. \"\"\" variables x₁, x₂, x₃ 𝐱 x₁, x₂, x₃ syms u₁ x₁, x₂, x₃ u₂ x₁, x₂, x₃ u₃ x₁, x₂, x₃ 𝐮 u₁ x₁, x₂, x₃ , u₂ x₁, x₂, x₃ , u₃ x₁, x₂, x₃ md\"\"\" Distortion Distortion of the medium is liable to change in the relative position of the particles. In other words, they are related to the gradients of 𝐮. \"\"\" ∇ Symbolics.Differential. 𝐱 variables δx₁, δx₂, δx₃ δ𝐱 δx₁, δx₂, δx₃ einsum δ𝐮 i ∇ j 𝐮 i δ𝐱 j 𝐮 δ𝐮 md\"\"\" Strain Tensor We use a strain tensor to analyze the distortion of the medium, whether it is solid or fluid, elastic or inelastic. \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"Strain Rates\", md\"\"\" Geodetic measurements in Southern California indicate a relative plate motion is 2 to 7 cm per year. This translates to a strain rate of approximately 3\\times10^ 7 per year, compared to strain accumulation in the plate interiors that is less than 3\\times 10^ 8 per year an order of magnitude less . During large earthquakes, the shear strain change coseismic strain drop is in the order of 3\\times 10^ 4 . \"\"\" Markdown.MD Markdown.Admonition \"wg\", \"Basic Long term Earthquake Prediction\", md\"\"\" Division of coseismic strain drop by strain rate gives roughly the repeat times of major earthquakes, i.e., 100 1000 years on plate boundaries, and 1000 10000 years within plates. \"\"\" J ∇ j 𝐮 i for i in 1 3, j in 1 3 Jt ∇ i 𝐮 j for i in 1 3, j in 1 3 md\"Let's construct the strain tensor symmetric part via Teoplitz decomposition \" e 0.5 J Jt md\"residual spin tensor anti symmetric \" Ω J e e δ𝐱 Ω δ𝐱 md\" Principal Strains\" md\" Dilatation\" syms je1 je2 je Je je1 je je je2 syms jom Jom 0 jom jom 0 corners 0, 0 , 1, 0 , 1, 1 , 0, 1 new corners1 map corners do c Je c c end new corners2 map corners do c Jom c c end function calculate area corner vectors A corner vectors 1 B corner vectors 2 C corner vectors 3 D corner vectors 4 area 0.5 abs B 1 A 1 C 2 A 2 C 1 A 1 B 2 A 2 C 1 A 1 D 2 A 2 D 1 A 1 C 2 A 2 D 1 A 1 B 2 A 2 B 1 A 1 D 2 A 2 end calculate area new corners1 | simplify calculate area new corners2 | simplify md\" UI and Plotting\" einput 0.5 . Jinput transpose Jinput eeig eigen einput Ωinput Jinput . einput md\"\"\" We shall now define the locations of a bunch of points on the square element x∈ 0,1 , y∈ 0,1 at the reference time t t 0 . Our objective is to understand how this square element is deformed by the action of the Jacobian. We do that by looking at the displacements of these reference locations. \"\"\" points x, y for x in range 0, stop 1, length 10 , y in range 0, stop 1, length 10 md\"\"\" Let us define the functions that we will be using in this notebook. \"\"\" \"\"\" Function to visualize the node points. Inputs are the locations of the points a and title t, optional \"\"\" function plotpoints a, t \"\" p scatter first. a , last. a , c red, xlim 2, 4 , ylim 2, 4 , label nothing, size 500, 500 , title t return p end \"\"\" Function to compute new locations by calculating the displacements given the reference locations a and the Jacobian J . \"\"\" function displace a, J return aa . J aa for aa in a end begin Jinput plot1 plotpoints points, \"Before Deformation\" plot2 plotpoints displace points, Jinput , \"Total Deformation\" plot3 plotpoints displace points, einput , \"Strain Deformation\" plot plot3, eeig.values 1 vcat 0.0 , first selectdim eeig.vectors, 2, 1 , eeig.values 1 vcat 0.0 , last selectdim eeig.vectors, 2, 1 , c blue, w 2, label nothing plot plot3, eeig.values 2 vcat 0.0 , first selectdim eeig.vectors, 2, 2 , vcat 0.0 , eeig.values 2 last selectdim eeig.vectors, 2, 2 , c blue, w 2, label \"Principal Strains\" p scatter first. a , last. a , c red, xlim 2,4 , ylim 2,4 , label nothing, size 500,500 , title t plot4 plotpoints displace points, Ωinput , \"Spin Deformation\" plot plot1, plot2, plot3, plot4, layout 2, 2 end md\"\"\" Appendix \"\"\" md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz 3dplot \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 105 30 \\tdplotsetrotatedcoords 00 30 0 \\begin scope tdplot rotated coords \\begin scope canvas is xy plane at z 0 \\fill gray,fill opacity 0.3 2, 3 rectangle 2,3 \\draw very thick 2,0 2,0 \\path 150 2 coordinate H 1.5,0 coordinate X \\pgflowlevelsynccm \\draw very thick, stealth,gray 0,0 30 1.5 \\end scope \\draw stealth H 1,0,0.2 node pos 1.3 H \\draw stealth X 0,1,0.2 node pos 1.3 X \\draw very thick, stealth 0,0,0 coordinate O 0,0,3 node right p \\end scope \\pgfmathsetmacro \\Radius 1.5 \\draw stealth O 2.5 \\Radius,0,0 node pos 1.15 spot 0 \\draw stealth O 0,3.5 \\Radius,0 node pos 1.15 spot 2 \\draw stealth O 0,0,2.5 \\Radius node pos 1.05 spot 1 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 60 125 \\tikzset cube .style very thick,black , grid .style very thin,gray , axis .style ,blue,thick , %draw a grid in the x y plane \\foreach \\x in 0.5,0,...,2.5 \\foreach \\y in 0.5,0,...,2.5 \\draw grid \\x, 0.5 \\x,2.5 \\draw grid 0.5,\\y 2.5,\\y %draw the axes \\draw axis 0,0,0 3,0,0 node anchor west x 1 \\draw axis 0,0,0 0,3,0 node anchor west x 2 \\draw axis 0,0,0 0,0,3 node anchor west x 3 %draw the top and bottom of the cube \\draw cube 0,0,0 0,2,0 2,2,0 2,0,0 cycle \\draw cube 0,0,2 0,2,2 2,2,2 2,0,2 cycle %draw the edges of the cube \\draw cube 0,0,0 0,0,2 \\draw cube 0,2,0 0,2,2 \\draw cube 2,0,0 2,0,2 \\draw cube 2,2,0 2,2,2 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" "},{"url":"introduction/stress-tensor/","title":"Stress Tensor","tags":["introduction"],"text":" A Pluto.jl notebook v0.19.46 frontmatter order \"4\" title \"Stress Tensor\" tags \"introduction\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using LinearAlgebra using PlutoUI using LaTeXStrings using PlutoTeachingTools using PlutoUI using Symbolics using SymbolicUtils using Einsum using PlutoPlotly using TikzPictures end ChooseDisplayMode TableOfContents md\"\"\" Stress Tensor Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" The stress tensor three dimensions is given by ```math \\sigma \\begin bmatrix \\sigma 11 & \\sigma 12 & \\sigma 13 \\\\ \\sigma 12 & \\sigma 22 & \\sigma 23 \\\\ \\sigma 13 & \\sigma 23 & \\sigma 33 \\\\ \\end bmatrix ``` | | | | | | | | | σ 11 bind σ11 Scrubbable 1 0.01 1, default 1 | σ 22 bind σ22 Scrubbable 1 0.1 1, default 0 | σ 33 bind σ33 Scrubbable 1 0.1 1, default 0.5 | | σ 12 bind σ12 Scrubbable 1 0.1 1, default 0.5 | σ 23 bind σ23 Scrubbable 1 0.1 1, default 0 | σ 13 bind σ13 Scrubbable 1 0.1 1, default 0 | which is symmetric. \"\"\" bind resample normal CounterButton \"Resample Imaginary Plane\" md\" UI and Plotting\" md\"\"\" Let us define the functions that we will be using in this notebook. \"\"\" σinput let σ11 σ12 σ13 σ12 σ22 σ23 σ13 σ23 σ33 end eigsigma eigen σinput nsample let resample normal n randn 3 n n . sqrt sum abs2, n end Tinput σinput nsample function plot3lines 1 v, color, name p1 scatter3d x 0, v 1 , y 0, 0 , z 0, 0 , mode \"lines\", name name, line attr color color , p2 scatter3d x 0, 0 , y 0, v 2 , z 0, 0 , mode \"lines\", name name, line attr color color , p3 scatter3d x 0, 0 , y 0, 0 , z 0, v 3 , mode \"lines\", name name, line attr color color , return p1, p2, p3 end function plot3lines 2 v1,v2,v3, color, name p1 scatter3d x 0, v1 1 , y 0, v1 2 , z 0, v1 3 , mode \"lines\", name name, line attr color color , p2 scatter3d x 0, v2 1 , y 0, v2 2 , z 0, v2 3 , mode \"lines\", name name, line attr color color , p3 scatter3d x 0, v3 1 , y 0, v3 2 , z 0, v3 3 , mode \"lines\", name name, line attr color color , return p1, p2, p3 end function stress plot p1 cone x 0 , y 0 , z 0 , u nsample 1 , v nsample 2 , w nsample 3 , name \"Surface Normal\", hoverinfo \"name\", showscale false, opacity 0.5, anchor \"tail\", color \"black\", colorscale colors.Blues 8, sizeref 0.5 p2 scatter3d x 0, nsample 1 , y 0, nsample 2 , z 0, nsample 3 , mode \"lines\", name \"Normal Vector\", line attr color \"gray\" , p3 plot3lines 1 Tinput, \"red\", \"Traction\" p4 plot3lines 2 collect eachcol eigsigma.vectors . eigsigma.values ..., \"blue\", \"Principal\" layout Layout scene camera eye attr x 0, y 0, z 0 , width 600, height 500, uirevision 1, scene attr xaxis attr nticks 10, range 1,1 , yaxis attr nticks 10, range 1,1 , zaxis attr nticks 10, range 1,1 , , return plot p1, p2, p3..., p4... , layout end stress plot variables σ 1 3, 1 3 σ 3 Symbolics.scalarize σ 0,0,1 variables n 1 3 einsum aa i σ i, j f j md\"\"\" Appendix \"\"\" md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz 3dplot \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 105 30 \\tdplotsetrotatedcoords 00 30 0 \\begin scope tdplot rotated coords \\begin scope canvas is xy plane at z 0 \\fill gray,fill opacity 0.3 2, 3 rectangle 2,3 \\draw very thick 2,0 2,0 \\path 150 2 coordinate H 1.5,0 coordinate X \\pgflowlevelsynccm \\draw very thick, stealth,gray 0,0 30 1.5 \\end scope \\draw stealth H 1,0,0.2 node pos 1.3 H \\draw stealth X 0,1,0.2 node pos 1.3 X \\draw very thick, stealth 0,0,0 coordinate O 0,0,3 node right p \\end scope \\pgfmathsetmacro \\Radius 1.5 \\draw stealth O 2.5 \\Radius,0,0 node pos 1.15 spot 0 \\draw stealth O 0,3.5 \\Radius,0 node pos 1.15 spot 2 \\draw stealth O 0,0,2.5 \\Radius node pos 1.05 spot 1 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 60 125 \\tikzset cube .style very thick,black , grid .style very thin,gray , axis .style ,blue,thick , %draw a grid in the x y plane \\foreach \\x in 0.5,0,...,2.5 \\foreach \\y in 0.5,0,...,2.5 \\draw grid \\x, 0.5 \\x,2.5 \\draw grid 0.5,\\y 2.5,\\y %draw the axes \\draw axis 0,0,0 3,0,0 node anchor west x 1 \\draw axis 0,0,0 0,3,0 node anchor west x 2 \\draw axis 0,0,0 0,0,3 node anchor west x 3 %draw the top and bottom of the cube \\draw cube 0,0,0 0,2,0 2,2,0 2,0,0 cycle \\draw cube 0,0,2 0,2,2 2,2,2 2,0,2 cycle %draw the edges of the cube \\draw cube 0,0,0 0,0,2 \\draw cube 0,2,0 0,2,2 \\draw cube 2,0,0 2,0,2 \\draw cube 2,2,0 2,2,2 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" begin Define the normal vector normal vector 0.0, 0.577, 0.07 Calculate two vectors perpendicular to the normal vector using Gram Schmidt process u normal vector 2 , normal vector 1 , 0 v cross normal vector, u Normalize the perpendicular vectors u u norm u v v norm v Define the plane points a 1.0 Half the side length of the plane plane points a u a v, a u a v, a u a v, a u a v Create a grid of points for the surface x range a 0.1 a y range a 0.1 a z plane x, y normal vector 1 x normal vector 2 y normal vector 3 x grid, y grid x for x in x range, y in y range , y for x in x range, y in y range z grid z plane x, y for x in x range, y in y range end plot scatter3d x x, y y, z z, mode \"lines\", name \"Plane\" , scatter3d x 0, normal vector 1 , y 0, normal vector 2 , z 0, normal vector 3 , mode \"lines markers\", name \"Normal Vector\", line attr color \"red\" plot scatter3d x x, y y, z z, mode \"lines\", name \"Plane\" TikzPicture L\"\"\" % Define the unit normal vector \\def\\nx 0.5 % x component of the normal vector \\def\\ny 0.5 % y component of the normal vector \\def\\nz 0.5 % z component of the normal vector % Define the plane equation ax by cz d \\def\\d 1 % Distance from the origin % Calculate the vertices of the small plane \\pgfmathsetmacro \\a 0.5 % Half the side length of the small plane % Calculate two vectors perpendicular to the normal vector using Gram Schmidt process \\pgfmathsetmacro \\ux \\ny \\pgfmathsetmacro \\uy \\nx \\pgfmathsetmacro \\uz 0 \\pgfmathsetmacro \\vx \\nx \\nz \\pgfmathsetmacro \\vy \\ny \\nz \\pgfmathsetmacro \\vz \\nx^2 \\ny^2 % Normalize the perpendicular vectors \\pgfmathsetmacro \\ulen sqrt \\ux \\ux \\uy \\uy \\uz \\uz \\pgfmathsetmacro \\vlen sqrt \\vx \\vx \\vy \\vy \\vz \\vz \\pgfmathsetmacro \\ux \\ux \\ulen \\pgfmathsetmacro \\uy \\uy \\ulen \\pgfmathsetmacro \\uz \\uz \\ulen \\pgfmathsetmacro \\vx \\vx \\vlen \\pgfmathsetmacro \\vy \\vy \\vlen \\pgfmathsetmacro \\vz \\vz \\vlen % Draw the coordinate axes \\draw 0,0,0 3,0,0 node anchor north east x \\draw 0,0,0 0,3,0 node anchor north west y \\draw 0,0,0 0,0,3 node anchor south z % Draw the small plane \\filldraw opacity 0.5 \\a \\ux , \\a \\uy , \\a \\uz \\a \\vx , \\a \\vy , \\a \\vz \\a \\ux , \\a \\uy , \\a \\uz \\a \\vx , \\a \\vy , \\a \\vz cycle % Draw the normal vector \\draw , thick, color red 0,0,0 \\nx,\\ny,\\nz \\node at \\nx,\\ny,\\nz anchor south west \\vec n \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" "},{"url":"introduction/waves-on-string/","title":"Waves On A String","tags":["introduction"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Waves On A String\" tags \"introduction\" layout \"layout.jlhtml\" description \"Simulates wave propagation on a string\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using FFTW, PlutoPlotly, PlutoUI, LinearAlgebra using ParallelStencil using ParallelStencil.FiniteDifferences1D using Printf, Statistics end TableOfContents md\"\"\" Waves On A String This notebook simulates wave propagation on a string using parallel computing techniques. The core function, `model string`, initializes the simulation environment and defines two parallel functions `compute vy ` and `compute σ `, which update the velocity and stress fields, respectively. The simulation parameters include the shear modulus `μ0` , density `ρ0` , spatial grid `xgrid` , and temporal grid tgrid . The notebook sets up the numerical grid, allocates arrays for stress `σ` and velocity `vy` , and initializes the velocity field with a Gaussian distribution. The medium's properties are heterogeneous, with boundary marked by the red line. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\" Medium\" begin nx 1000 xgrid range 100, 100, length nx end ρ0 Float32 3.22 10^ 3 10^15 density in kg km3 μ0 Float32 82 10^9 10^3 invρ0 inv ρ0 invμ0 inv μ0 medium ref values μ0, invμ0, ρ0, invρ0 vs0 sqrt. μ0 . ρ0 begin courant number 0.1 lets calculate the min distance from the center to the edge of the domain r min xgrid end xgrid 1 0.5 choose time stepping dt to satisfy Courant condition dt courant number step xgrid inv vs0 nt Int floor r vs0 dt 2 tgrid range 0, length nt, step dt nothing end md\"\"\"Time bind T Slider tgrid, show value true Interface Position bind X Slider xgrid, show value true, default 0 \"\"\" md\" Governing Equations\" md\"\"\" Velocity v y and Stress \\sigma ```math \\rho\\,\\partial t v y \\partial x \\sigma \\quad 1 ``` and ```math \\partial t \\sigma \\mu\\partial x v y \\quad 2 ``` \"\"\" md\"\"\" Simulation \"\"\" views function model string μ0, ρ0, xgrid, tgrid, X init parallel stencil Threads, Float32, 1 parallel function compute vy vy Data.Array, σ Data.Array, dt Data.Number, ρ Data.Array, dx Data.Number inn vy inn vy dt all ρ d σ dx return end parallel function compute σ σ Data.Array, vy Data.Array, dt Data.Number, μ Data.Array, dx Data.Number all σ all σ dt all μ d vy dx return end Derived numerics nx length xgrid numerical grid resolution should be a mulitple of 32 1 for optimal GPU perf nt length tgrid number of timesteps dx Float32 step xgrid cell size dt Float32 step tgrid Array allocations σ zeros nx 1 vy zeros nx Initial conditions vy initial exp. 0.11 . xgrid . 50 .^ 2 copyto vy, vy initial Medium μ zeros nx 1 fill μ, Float32 μ0 ρ zeros nx fill ρ, Float32 ρ0 perturb density of the string iX argmin abs. xgrid . X ρ1 view ρ, 1 iX rmul ρ1, 4.0f0 vysave zeros nx 1, nt Time loop for it 1 nt parallel compute σ σ, vy, dt, μ, dx parallel compute vy vy, σ, dt, ρ, dx save vy vys view vysave, , it copyto vys, vy end return vysave end vy save model string μ0, ρ0, xgrid, tgrid, X md\" Appendix\" md\" Plot\" default plotly template plotly dark function plot string vy save, X, T iT argmin abs. tgrid . T fig Plot scatter x xgrid, y vy save , iT , Layout title \"String's vertical displacement at round T, digits 2 s, with interface at round X, digits 2 km\", width 700, height 300, xaxis attr title \"Distance\" , yaxis attr title \"Amplitude\", range 1.2, 1.2 add vline fig, X, line color \"red\", opacity 1, layer \"below\", line width 2, add vline fig, xgrid 1 , line color \"white\", opacity 1, layer \"below\", line width 2, add vline fig, xgrid end , line color \"white\", opacity 1, layer \"below\", line width 2, plot fig end plot string vy save, X, T "},{"url":"misc/seismic-interferometry/","title":"Seismic Interferometry","tags":["misc"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Seismic Interferometry\" layout \"layout.jlhtml\" tags \"misc\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using PlutoUI, DSP, Statistics, PlutoPlotly, FourierTools, FFTW, StatsBase, MLUtils import PlutoUI combine end using LaTeXStrings TableOfContents include definitions true md\"\"\" Simple Seismic Interferometry Demo We generate wavelet at many sources in a homogeneous medium. There are 2 receivers that are recording the wavelets from all the sources. The wavelet from a source recorded at one of the receivers is cross correlated with the wavelet recorded at the other receiver. The cross correlogram of all the sources are stacked to get the approximate Green's function between the 2 receivers. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Parameters Wavelets bind wtype Select \"Ricker\" \"Ricker\", \"Random\" \"Random\" `Ricker` generate same Ricker wavelet at all the sources. `Random` generate random wavelets at each sources. Number of Sources bind number of sources Slider 1000 1000 10000,default 1000,show value true . Inner radius limit of the sources bind inrad Slider 1 2 17,default 1,show value true Angular Range bind iang Select \"all\" \"Circular\",\"small\" \"Sectional\",\"leftarc\" \"Right Arc\",\"rightarc\" \"Left Arc\",\"new\" \"Special case\", \"bimodal\" \"Random Bimodal\" \"\"\" md\"\"\" Cross Correlation \"\"\" bind source distance Slider range 1, 10, length 100 , show value true md\"\"\" Generate Wavelets \"\"\" begin responsetype Lowpass 0.5 fs 10 designmethod Chebyshev1 4, 1 function get wav win rand Float32, 200 . rand 1, 1 , 200 . gaussian 200, rand 0.005 0.001 0.1 , padding 0, zerophase false hk filt digitalfilter responsetype, designmethod , win hk hk . std hk return hk end end function delaywav w, t ts w ts cat zeros Float32, 200 , ts, zeros Float32, 1000 , dims 1 td shift ts, tuple t 300 return td 1 1000 end md\"\"\" Generate Random Source Locations \"\"\" ang1 range 0.1 π, stop 0.1 π, length div number of sources, 2 ang2 range π 0.9, stop π 1.1 , length div number of sources, 2 begin rad 20 smallang cat ang1, ang2, dims 1 allang range 0, stop 2 π, length number of sources leftarc range π 3, stop π 3, length number of sources rightarc range 2 π 3, stop 4 π 3, length number of sources R1 range π 3, stop 2 π 3, length div number of sources, 2 R2 range 4 π 3, stop 5 π 3, length div number of sources, 2 R cat R1, R2, dims 1 new R θ1 2π rand θ2 2π rand Define the angle ranges of width π 6 R1bi range θ1, stop θ1 π 6, length div number of sources, 2 R2bi range θ2, stop θ2 π 6, length number of sources length R1 Combine the ranges Rbirandom vcat R1bi, R2bi newang range cat 0,stop π 2 , π,stop 3 π 2 ,dims 1 ,length num if iang \"all\" ang allang elseif iang \"small\" ang smallang elseif iang \"leftarc\" ang leftarc elseif iang \"rightarc\" ang rightarc elseif iang \"new\" ang new elseif iang \"bimodal\" ang Rbirandom end rr rand inrad 0.05 rad, number of sources ys map rr, ang do r, a r sin a end xs map rr, ang do r, a r cos a end end md\"\"\" Receivers \"\"\" vel 0.035 \"\"\" get traveltime rec, src Calculate the travel time of a seismic wave between a receiver and a source. Arguments `rec Tuple Float64, Float64 ` Coordinates of the receiver x, y . `src Tuple Float64, Float64 ` Coordinates of the source x, y . Returns `tm Float64` Travel time of the seismic wave. Notes The function assumes a constant velocity `vel` which should be defined in the scope where this function is used. \"\"\" function get traveltime rec, src dis sqrt rec 1 src 1 ^2 rec 2 src 2 ^2 tm dis vel return tm end srcloc xs i , ys i for i in 1 number of sources all the source location md\" Appendix\" default plotly template plotly dark function Ricker dt Real 0.002, f0 Real 20.0 nw 2.0 f0 dt nc floor Int, nw 2 t dt collect nc 1 nc b pi f0 t .^ 2 w 1 . 2 . b . exp. b w cat zeros Float32, 75 , w, zeros Float32, 75 , dims 1 end function wavetype if wtype \"Random\" wavelet get wav elseif wtype \"Ricker\" wavelet Ricker end return wavelet end \"\"\" generate seismograms rec1, rec2, srcloc Generate seismograms for two receivers from multiple source locations. Arguments `rec1` The first receiver location. `rec2` The second receiver location. `srcloc` An array of source locations. Returns `wav1` A matrix of delayed waveforms for the first receiver. `wav2` A matrix of delayed waveforms for the second receiver. Description This function computes the travel times from each source location to two receivers, generates delayed waveforms based on these travel times, and stacks the waveforms into matrices for each receiver. \"\"\" function generate seismograms rec1, rec2, srcloc tm1 map 1 length srcloc do i get traveltime rec1, srcloc i end tm2 map 1 length srcloc do i get traveltime rec2, srcloc i end wavel wavetype wav1 map 1 length tm1 do h delaywav wavel, tm1 h end wav2 map 1 length tm2 do h delaywav wavel, tm2 h end wav1 stack wav1, dims 2 wav2 stack wav2, dims 2 return wav1, wav2 end nt 1999 tgrid xcorr range 100, stop 100, length nt tgrid range 0, stop 100, length nt md\"\"\" Plots \"\"\" function seis heatmap tgrid, r, title, ytitle, xtitle m maximum abs, r plot heatmap y tgrid, z r, colorscale \"seismic\", zmin m, zmax m , Layout title title, yaxis autorange \"reversed\", height 350, width 600, yaxis attr title ytitle , xaxis attr title xtitle end function plot line tgrid, tr title \"\", names fill \" \", length tr fig PlutoPlotly.Plot Layout height 300, width 600, title title, xaxis attr title \"cross correlation lag s \" , yaxis attr title \"amplitude\" , font attr size 10 , legend attr yanchor \"bottom\", y 0.75, xanchor \"left\", x 0.0 opacities 1, 0.5 widths 1, 0.5 for T, width, opacity, name in zip tr, opacities, widths, names add trace fig, PlutoPlotly.scatter x tgrid, y T, width width, opacity opacity, mode \"lines\", name name, showlegend true end PlutoPlotly.plot fig end md\" UI\" function receiver input pos Vector return combine do Child inputs md\"\"\" pos 1 Child pos 1 , Slider 20 1 20,default 5,show value true pos 2 Child pos 2 , Slider 20 1 20,default 0,show value true \"\"\", md\"\"\" pos 3 Child pos 3 , Slider 20 1 20,default 5,show value true pos 4 Child pos 4 , Slider 20 1 20,default 0,show value true \"\"\" md\"\"\" Receiver Positions inputs \"\"\" end end bind pos confirm receiver input \"R1 x pos \", \"R1 y pos \", \"R2 x pos \", \"R2 y pos \" begin rec1 pos 1 , pos 2 rec2 pos 3 , pos 4 end let Th range 0, 2pi, length 100 plot rad2deg. Th , get traveltime rec1, source distance . cos th , sin th get traveltime rec2, source distance. cos th , sin th for th in Th , Layout title \"Stationary phase\", xaxis attr title \"source backazimuth deg \" , yaxis attr title \"traveltime difference\" end traveltime between receivers get traveltime rec1, rec2 true virtual response delaywav wavetype , traveltime between receivers seis1, seis2 generate seismograms rec1, rec2, srcloc let seis heatmap tgrid, randobs seis1, 200 , \"Noise at receiver 1\", \"time s \", \"Noise source index\" end let seis heatmap tgrid, randobs seis2, 200 , \"Noise at receiver 2\", \"time s \", \"Noise source index\" end begin cross map 1 size seis1, 2 do i xcorr seis1 , i , seis2 , i , padmode longest end cross stack cross, dims 2 end begin gren mean cross, dims 2 plot line tgrid xcorr, gren , 1 , cat reverse true virtual response , true virtual response, dims 1 , names \"Averaged cross correlation\", \"True virtual source response\" , title \"Comparision\" end let seis heatmap tgrid xcorr, randobs cross, 1000 , \"Cross correlated noise\", \"time lag s \", \"Source Index\" end function plot point x1, x2 layout Layout xaxis range rad, rad , yaxis range rad, rad , width 600, height 400, title \"Experiment setup\", xaxis attr title \"distance\" , yaxis attr title \"distance\" fig Plot layout add trace fig, scatter x x1, y x2, mode \"markers\", showlegend false, marker attr size 5, color \"red\" add trace fig, scatter x rec1 1 , y rec1 2 , mode \"markers\", name \"Receiver 1\", marker attr size 15, color \"blue\", symbol \"triangle down\" add trace fig, scatter x rec2 1 , y rec2 2 , mode \"markers\", name \"Receiver 2\", marker attr size 15, color \"green\", symbol \"triangle down\" return PlutoPlotly.plot fig end plot point xs, ys "},{"url":"misc/time-reversal/","title":"time-reversal","tags":[],"text":" A Pluto.jl notebook v0.19.46 using Markdown using InteractiveUtils begin using Plots using SpecialFunctions using LinearAlgebra using AbstractFFTs using FFTW end md\"\"\" Source imaging in homogeneous media. We have recorded seismograms at a bunch of receivers. And now we would like to backpropagate these seismograms to the source location to form an image. Applications include earthquake source characterization, seismic migration, imaging a brain tumour.. r is the distance to the receiver k is the wavenumber H denotes Hankel function f is the frequency G 0 0.25\\rho i H^2 0 kr where k 2\\pi fv 0^ 1 \"\"\" experimental parameters begin adjust medium parameters here v0 2500. background velocity in m s rho0 2000. background density in kg m3 xgrid range 1000, stop 1000, step 10 zgrid range 0, stop 2000, step 10 zr 0 depth of the receiver nr 20 number of receivers time grid tgrid range 0, stop 2, step 0.01 freqs 10., 12., 15., 20., freqs range 1, stop 10, length 20 freqs rfftfreq length tgrid , inv step tgrid fpeak 2. rlocs zr, x for x in range xgrid 1 , stop xgrid end , length nr allocate observed and modelled data vectors dobs zeros Complex Float64 , length freqs , nr dmod zeros Complex Float64 , length freqs , nr allocate memory for image simage zeros Complex Float64 ,length zgrid , length xgrid end plot time reversal begin heatmap xgrid, zgrid, real simage , yflip true, ylabel \"depth\", xlabel \"distance\", title \"source image\" scatter sloc true... end begin sloc is the source location rloc is the receiver location f is the frequency to be modelled 2D homogeneous Green's functions function G0 f, sloc, rloc k 2 pi f v0 r sqrt sum abs2. sloc . rloc data 0.25 rho0 im hankelh2 0, k r return data end function G0all f, sloc, rlocs return G0 f, sloc, rloc for rloc in rlocs end end function forw d, sloc use this to model data for every test point for i, f in enumerate freqs , j, rloc in enumerate rlocs if f ≠ 0 d i,j G0 f, sloc, rloc exp abs2 f fpeak 1e 2 else d i,j 0.0 end end return d end generate observed data begin sloc true 1500., 500 forw dobs, sloc true end get image of the source for iz,z in enumerate zgrid , ix,x in enumerate xgrid forw dmod, z,x simage iz, ix dot dobs, dmod end "},{"url":"normal-modes/normal-modes/","title":"Normal Modes 1D","tags":["normalmodes"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Normal Modes 1D\" layout \"layout.jlhtml\" tags \"normalmodes\" description \"This notebook attempts to explain the free oscillations of the Earth using a Sturm–Liouville eigenvalue violin string problem.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using PlutoUI using Pluto using PlutoTest using PlutoTeachingTools using Symbolics using SymbolicUtils using Plots using LinearAlgebra using FFTW using Roots using PlotThemes theme dark end ChooseDisplayMode TableOfContents md\"\"\" Wave Mode Duality In this notebook, our goal is to understand the free oscillations of the Earth using the \"violin string\" problem. The transverse displacement of the string is denoted using u , which can be expanded as ```math u x,t \\Sigma n a n u n x,t , ``` with constants a n and free oscillations or normal modes u n . The source free elastic wave equation can be written in terms of a coupled first order system. ```math \\partial t \\sigma \\mu\\partial x \\dot u 0 ``` ```math \\rho \\partial t \\dot u \\partial x\\sigma 0. ``` We use the method of separation of variables to arrive at a Sturm–Liouville eigenvalue problem. We solve this eigenvalue problem to obtain the normal mode solutions using Chebyshev pseudo spectral method. After summing the normal mode solutions at each time step, we obtain \"propagating waves\" from the sources, similar to using the Runge Kutta time extrapolation method to solve the first order system. There are two different ways of representing displacements normal mode summation, and propagating waves. Similarly, there are two methods we use to solve for surface waves in seismology one where we extrapolate in depth using a shooting method to match the boundary conditions or alternatively, solve an eigenvalue problem. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" We begin with a solution of the form. \"\"\" md\"\"\" The differential equation above is in Sturm–Liouville form. If the medium is homogeneous with constant velocity `c`, the solution is given by. \"\"\" md\"\"\" Observations \"\"\" PlutoUI.LocalResource \".. assets images normal modes1.jpg\" md\"\"\" image source https www.gwrinstruments.com low frequency seismology monitoring.html Spectra of normal modes below `1 mHz` were measured using a Superconducting Gravimeter SG . Normal modes from 3 major earthquakes are compared Blue Japan 11 Mar. 2011, Mw 9.0 , Red Chile 27 Feb. 2010, Mw 8.8 , and Black Sumatra 26 Dec. 2004, Mw 9.3 . Data sets are 60 hours long starting 4 hours after the onset of each event and were recorded by SG C021 at Membach, Belgium. \"\"\" md\"\"\" Normal Modes of 1D Earth \"\"\" bind n layers PlutoUI.combine do Child md\"\"\" Number of layers Child NumberField 1 1 5 \"\"\" end md\"\"\" Records We can measure eigenfrequencies and infer the velocity of the medium. \"\"\" md\"\"\" Simulation \"\"\" md\"\"\" Definition of spatial grid Spatial grid is defined using Chebyshev collocation points. \"\"\" md\"\"\" Interpolation of wave speeds Layer wise wave speeds are interpolated to the spatial grid points by assuming that the wave speeds are invariant within the layer. \"\"\" info \"Integer multiples of the first Eigen frequencies.\" md\"\"\" Definition of matrix operator and Eigen decomposition The matrix operator that we are interested in is c^2\\frac \\partial^2 \\partial x^2 . The spatial derivative is computed using the Chebyshev spectral method. We do the Eigen value decomposition of this matrix operator after applying the boundary condition. \"\"\" md\"It has been proven that all the eigen values of the second order Chebyshev spectral differentiation matrix are real, distinct, and negative Gottleib and Lustman . We shall now plot them.\" md\"\"\" Modeling the source as a delta function We model the source as a delta function placed at its grid location. \"\"\" md\"\"\" Normal mode summation to obtain displacement field The displacement field is given by u x,t U x,\\omega cos \\omega t \\Sigma nU n x,\\omega n cos \\omega nt Here, \\omega n are the eigen frequencies that we have computed and U n x,\\omega n are the corresponding eigen functions. The eigen functions also need to be scaled by the position of the source and the source time function. \"\"\" md\" Appendix\" syms x Real t Real ω Real U Real, Real Real c Real μ Real ρ Real u x, t U x, ω cos ω t u x, t begin Dx Differential x Dt Differential t end L u, ρ, μ ρ Dt Dt u Dx μ Dx u Uex1 expand derivatives L u x, t , ρ, μ Ueq simplify Uex1 cos ω t ~ 0 Usol x, c sin x c ω Usol x, c substitute Ueq.lhs, U x, ω Usol x, c | expand derivatives | x substitute x, c^2 μ ρ | simplify md\"\"\" Velocity Interpolation Function to interpolate layer wise velocity input to all the grid points. Velocity is assumed to be constant at all the grid points of a particular layer \"\"\" begin function get wavespeed medium,xgrid,n layers Getting the array of UI velocities and boundaries c ui zeros n layers for i 1 n layers c ui i medium i end if n layers 1 b ui zeros n layers 1 for i 1 n layers 1 b ui i medium n layers i end end Creating the velocity vector c rev zeros medium.nx xgrid rev reverse xgrid if n layers 1 start index 1 for i 1 n layers 1 end index argmin abs. xgrid rev . b ui i c rev start index end index . c ui i start index end index 1 end c rev start index medium.nx . c ui n layers else c rev . c ui end c reverse c rev return c end nothing end md\"\"\" Chebyshev Methods Function to designate the Chebyshev collocation points \"\"\" function get Chebyshev grid medium nx medium.nx return cos. pi . collect 0 nx 1 . nx 1 end md\"Here, we shall form the Chebyshev differential matrix explicitly, instead of using `FFTW` library.\" This function returns the Chebyshev spectral differentiation matrix. courtesy Sanket function Chebyshev Diff Matrix z , N c ones N 1 c 1 2 c N 1 2 D zeros N 1, N 1 for i in 1 N 1 for j in 1 N 1 if i 1 && i j D i, j 2 1 ^ j 1 1 z j elseif i N 1 && i j D i, j 2 1 ^ i j 2 1 z j elseif i 1 && i N 1 if i j D i, j 1 z i 2 1 z i ^2 else D i, j c i c j 1 ^ i j 2 z i z j end end end end D 1, 1 2 N^2 1 6 D N 1, N 1 1 D 1, 1 D 1, N 1 1 ^ N 2 D N 1, 1 D 1, N 1 return D end md\"\"\" A simple test to check the differential operator `D`. \"\"\" md\"\"\" Function to return the operator matrix on which Eigen value decomposition needs to be performed for the Strum Louville formulation. The Eigen value equation is \\frac \\mu \\rho \\frac \\partial^2 U x,\\omega \\partial x^2 \\omega^2U x,\\omega c^2\\frac \\partial^2 U x,\\omega \\partial x^2 \\omega^2U x,\\omega Therefore, the matrix operator is c^2\\frac \\partial^2 \\partial x^2 . \"\"\" return operator, and it eigen factorization function get op medium, cvec, D L diagm cvec .^ 2 D D boundary conditions L 1, . 0 L end, . 0 LE eigen L, permute false, scale false return L, LE end md\"\"\" Source Function to model the source as a delta function. \"\"\" function get source pa, medium s zeros medium.nx s pa.isx 1.0 return s end md\"\"\" Normal mode Solution Function to get the eigen frequencies and eigen vectors for summation of normal modes. Number of modes to be used in the summation is specified by the user. \"\"\" function get eigen LE, pa eigen frequencies sqrt. 1 . LE.values end pa.nω end 2 eigen vectors LE.vectors , end pa.nω end 2 return eigen vectors, eigen frequencies end warn \"Notice that the eigenvectors are not orthogonal to each other, as the operator matrix is not symmetric.\" md\"\"\" Here, we do summation of the normal modes to obtain the total displacement field u x,t U x,\\omega cos \\omega t . The Eigen functions are U x,\\omega eigen vectors of the operator matrix . The amplitude of each eigen function depends on the position of the source and the source time function. The operation `E' s` gives us the amplitude of each eigen function E is the matrix of eigen vectors . \"\"\" return the displacement field after normal mode summation for each t in tgrid EV eigen vectors EF eigen frequencies s source function normal mode summation EV, EF, s, tgrid nt length tgrid nx size EV, 1 nω size EV, 2 C zeros 1, nω buffer up map tgrid do t update buffer for iω, ω in enumerate EF C 1, iω cos t ω end return EV . C EV' s end return permutedims hcat up... , 2, 1 end md\"\"\" UI Function to define the medium parameters i.e velocities of each layer and the boundaries of the layers. \"\"\" begin function medium input n layers return PlutoUI.combine do Child inputs1 md\"\"\" c string i km s Child string c,i , Slider range 1, 4, step 0.2 , default 1.8, show value true \"\"\" for i in 1 n layers inputs2 md\"\"\" nx Child \"nx\", Select 64, 128, 256, 512, 1024 , default 256 \"\"\", boundary md\"\"\" bx string i,i 1 km Child string bx,i,i 1 , Slider range 1, stop 1, length 11 , default 0.0, show value true \"\"\" for i in 1 n layers 1 md\"\"\" Medium Parameters Wavespeeds Slide to adjust the seismic velocities ∈ 1, 4 km s. inputs1 Boundary Choose the position ∈ 1, 1 km of the boundary between the media in the increasing order of distance from the left. If it is homeogenous 1 D Earth, then there is no boundary boundary Number of Chebyshev Collocation Points inputs2 \"\"\" end end nothing end bind medium confirm medium input n layers 1 xgrid get Chebyshev grid medium scatter xgrid, 0 , ylim 1, 1 , title \"Chebyshev Collocation Points\", size 600, 200 cvec get wavespeed medium, xgrid, n layers 1 plot xgrid, cvec, w 2, title \"Wavespeed\", label nothing, size 600, 200 D Chebyshev Diff Matrix xgrid, medium.nx 1 test 3 . cos. 3.0 . xgrid ≈ D sin. 3.0 . xgrid Lop, LE get op medium, cvec, D md\"\"\" Function to define the source and receiver locations and the number of normal modes used in the summation. \"\"\" function other input return PlutoUI.combine do Child source md\"\"\" Child \"isx\", Slider 1 medium.nx, default div medium.nx, 3 2 , show value false \"\"\", receiver md\"\"\" Child \"irx\", Slider 1 medium.nx, default div medium.nx,4 , show value false \"\"\", eigen md\"\"\" Child \"nω\", NumberField 1 100, default 40 \"\"\", md\"\"\" Modeling Parameters Source Position Slide to adjust the source position ∈ 1, 1 km. source Receiver Position Slide to adjust the receiver position ∈ 1, 1 km. receiver Modes Number of normal modes used in the summation. eigen \"\"\" end end bind pa confirm other input eigen vectors, eigen frequencies get eigen LE, pa eigen frequencies heatmap eigen vectors scatter eigen frequencies, label \"Eigen Frequencies\" heatmap eigen vectors' eigen vectors source get source pa, medium begin plot source, label nothing plot eigen vectors eigen vectors' source, label nothing, size 600, 200 end begin nt 1000 dt 0.01 tgrid range 0, step dt, length nt up normal mode summation eigen vectors, eigen frequencies, source, tgrid nothing end length tgrid heatmap up, xlabel \"x position\", ylabel \"time\", title \"Displacement\", aspect ratio 1, c seismic, size 300, 600 md\"\"\" Plots Function to show the animation of displacements in the medium at different times. This helps to visualize the propagation of waves through the medium. \"\"\" begin function plot up up,xgrid,pa,medium,n layers ylim maximum abs. up , maximum abs. up gif for it in 1 2 100 plot xgrid, up it, , ylim ylim, label nothing, title \"Displacement of 1D Earth it it \", ylabel \"Amplitude\", w 2 vline xgrid pa.isx , label \"source\", w 2 vline xgrid pa.irx , label \"receiver\", w 2 for i 1 n layers 1 vline xgrid argmin abs. xgrid . medium n layers i , label \"boundary\", w 2 end end end nothing end plot up up,xgrid,pa,medium,n layers 1 md\"\"\" Function to plot the time series and spectrum at the receiver location. \"\"\" function plot record p1 plot tgrid, up , pa.irx , title \"Recorded Time Series\", xlabel \"Time s \", ylabel \"Amplitude\", label nothing p2 plot rfftfreq nt, inv dt , abs. rfft up , pa.irx , w 2, xlabel \"Frequency Hz \", label nothing, title \"Recorded Spectra\", ylabel \"Amplitude\" vline p2, eigen frequencies . 2 . pi, label \"Eigen Frequencies\" plot p1, p2, layout 2, 1 end plot record md\"\"\" Additional Reading Weideman, J. A. C., and L. N. Trefethen. “The Eigenvalues of Second Order Spectral Differentiation Matrices.” SIAM Journal on Numerical Analysis, vol. 25, no. 6, 1988, pp. 1279–98. pdf https www.jstor.org stable 2157485?seq 3 metadata info tab contents Prof. John K Hunter Notes from UC Davis https www.math.ucdavis.edu ~hunter m280 09 ch4.pdf \"\"\" "},{"url":"normal-modes/specnm/","title":"PREM Earth Free Oscillations","tags":["normalmodes"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"PREM Earth Free Oscillations\" tags \"normalmodes\" layout \"layout.jlhtml\" description \"Free oscillations of spherically symmetric bodies\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using CondaPkg CondaPkg.add \"pytest\" CondaPkg.add \"sympy\" CondaPkg.add \"flake8\" CondaPkg.add \"Cython\" CondaPkg.add \"mpi4py\" CondaPkg.add \"petsc\" CondaPkg.add \"petsc4py\" CondaPkg.add \"slepc4py\" CondaPkg.add pip \"specnm\", version \" https gitlab.com JohKem1 specnm archive main specnm main.zip\" end using PythonCall, PlutoPlotly using PlutoUI, FFTW, StatsBase PlutoUI.TableOfContents include definitions true md\"\"\" 🌍 Exploring Free Oscillations In this notebook, we will explore free oscillations of spherically symmetric bodies , which describe how a planet vibrates after a large disturbance e.g., an earthquake . The numerical tool `specnm` allows us to compute gravito elastic normal modes by solving the radial ordinary differential equations ODEs using a spectral element discretization . `specnm` A spectral element approach to computing normal modes, J Kemper, M van Driel, F Munch, A Khan, D Giardini, Geophysical Journal International, Volume 229, Issue 2, May 2022, Pages 915–932. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\" Real Data\" md\"\"\" Start time after earthquake min bind starttime cut Slider range 1, 10 24 60, length 1000 , show value true, default 12 60 \"\"\" md\"\"\" End time after earthquake min bind endtime cut Slider range starttime cut, 10 24 60, length 1000 , show value true, default 5 24 60 \"\"\" md\" Specnm\" md\" Appendix\" CondaPkg.add pip \"obspy\" obspy pyimport \"obspy\" begin Import ObsPy modules correctly obspy pyimport \"obspy.core\" fdsn pyimport \"obspy.clients.fdsn\" end client fdsn.Client \"IRIS\" specnm pyimport \"specnm\" md\" Select Earth Model\" model fname \".. specnm models prem ani\" ray specnm.rayleigh model fname, fmax 0.1 ray out ray.rayleigh problem attenuation mode \"elastic\", fmax 0.005 begin ray angular orders pyconvert Array, ray out \"angular orders\" ray frequencies pyconvert Array, ray out \"frequencies\" 1000.0 in mHz end ray overtones let angular orders pyconvert Vector Int , ray out \"angular orders\" Get unique values and their counts l countmap countmap angular orders Dictionary of l count l uniq collect keys l countmap Unique angular orders l count collect values l countmap Their counts Compute overtones Compute overtones overtones vcat lu 1 ? collect 0 lc 1 collect 2 lc 1 for lu, lc in zip l uniq, l count Convert to a single vector ray overtones collect reduce vcat, overtones end lov specnm.love model fname, fmax 0.1 lov out lov.love problem attenuation mode \"full\", fmax 0.005 begin lov angular orders pyconvert Array, lov out \"angular orders\" lov frequencies pyconvert Array, lov out \"frequencies\" 1000.0 in mHz end lov overtones let angular orders pyconvert Vector Int , lov out \"angular orders\" Get unique values and their counts l countmap countmap angular orders Dictionary of l count l uniq collect keys l countmap Unique angular orders l count collect values l countmap Their counts Compute overtones overtones vcat lu 1 ? collect 0 lc 1 collect 1 lc for lu, lc in zip l uniq, l count Convert to a single vector lov overtones collect reduce vcat, overtones end bind cls selected Select cls ray, cls out ray out, angular orders ray angular orders, frequencies ray frequencies, overtones ray overtones \"Spheroidal\", cls lov, cls out lov out, angular orders lov angular orders, frequencies lov frequencies, overtones lov overtones \"Toroidal\" cls selected.angular orders 31 function read model filename String Read all lines from the file lines readlines filename Extract numeric data, skipping header and comment lines data for line in lines Skip lines that contain non numeric text words split line if length words 0 && all w tryparse Float64, w nothing, words push data, parse. Float64, words end end Convert list to matrix data matrix hcat data... Extract relevant columns radius data matrix 1, Column 1 Radius m rho data matrix 2, Column 2 Density kg m³ vp data matrix 3, Column 3 P wave velocity m s vs data matrix 4, Column 4 S wave velocity m s Convert radius to depth Earth's radius is ~6371 km depth 6371000 . radius . 1000 Convert meters to kilometers return depth, rho, vp, vs end md\" Get Earthquakes\" begin starttime obspy.UTCDateTime \"2000 01 01\" endtime obspy.UTCDateTime \"2024 12 31\" min magnitude 7.5 end Fetch events from IRIS catalog client.get events starttime starttime, endtime endtime, minmagnitude min magnitude Store earthquake details in a structured format earthquake list \"Mw event.magnitudes 0 .mag at event.origins 0 .time \", event.origins 0 .time, event.origins 0 .latitude, event.origins 0 .longitude, event.origins 0 .depth 1000, event.magnitudes 0 .mag for event in catalog earthquakes event.origins 0 .time, event.origins 0 .latitude, event.origins 0 .longitude, event.magnitudes 0 .mag for event in catalog bind clicked eq let p PlutoPlot Plot scattergeo lon pyconvert. Float64, e 3 for e in earthquakes , lat pyconvert. Float64, e 2 for e in earthquakes , text pyconvert. String, string \"M\", e 4 , \" at \", e 1 for e in earthquakes , mode \"markers\", marker attr size 6, color \"red\" , Layout title \"Earthquakes click to select \" add plotly listener p,\"plotly click\", \" e console.log e let dt e.points 0 PLOT.value dt.lat, dt.lon PLOT.dispatchEvent new CustomEvent 'input' \" p end Extract details of the selected earthquake filtered using lat lon selected event index findall e pyconvert Float32, e 2 ≈ clicked eq 1 && pyconvert Float32, e 3 ≈ clicked eq 2 , earthquakes 1 begin Find details of the selected earthquake selected details earthquake list selected event index eq time selected details 2 eq lat selected details 3 eq lon selected details 4 end md\" Get Stations\" begin Fetch GSN stations that recorded this earthquake network \"IU\" IU Global Seismographic Network GSN station list client.get stations network network, latitude eq lat, longitude eq lon, maxradius 180 end Extract station metadata stations s.code, s.latitude, s.longitude, s.elevation for net in station list for s in net.stations Create a dropdown for selecting a station if stations exist station names length stations 0 ? s 1 for s in stations \"No stations found\" bind clicked station let p PlutoPlot Plot scattergeo lon pyconvert. Float32, e 3 for e in stations , lat pyconvert. Float32, e 2 for e in stations , text pyconvert. String, string e for e in station names , mode \"markers\", marker attr size 6, symbol \"triangle down\", color \"blue\" , Layout title \"GSN Stations click to select \" add plotly listener p,\"plotly click\", \" e console.log e let dt e.points 0 PLOT.value dt.lat, dt.lon PLOT.dispatchEvent new CustomEvent 'input' \" p end Extract details of the selected earthquake filtered using lat lon selected station index findall e pyconvert Float32, e 2 ≈ clicked station 1 && pyconvert Float32, e 3 ≈ clicked station 2 , stations 1 selected station stations selected station index inventory client.get stations network \"IU\", station selected station 1 , level \"channel\" available channels c.code for net in inventory for sta in net.stations for c in sta.channels begin freqmin 0.2 inv 1000 Lower cutoff frequency Hz freqmax 5.0 inv 1000 Upper cutoff frequency Hz end begin starttime data eq time Roughly start half a day after earthquake time endtime data starttime data 10 24 3600 10 hours of data st client.get waveforms \"IU\", Network IU, IC, II selected station 1 , Station code \" \", Any location \"LHE\", Vertical component, attach response true, starttime data, endtime data trace st 0 trace.filter \"bandpass\", freqmin freqmin, freqmax freqmax, corners 4, zerophase true data pyconvert Array, trace.normalize .detrend .data sampling rate pyconvert Float32, trace.stats.sampling rate end istarttime cut round Int, starttime cut 60 sampling rate iendtime cut round Int, endtime cut 60 sampling rate begin data cut data istarttime cut iendtime cut Compute FFT n length data cut freqs rfftfreq n, 1 sampling rate Convert frequency to mHz as normal modes are in mHz freqs mHz freqs . 1000 ifmax findfirst x x freqmax 1000.0, freqs mHz ifmin findfirst x x freqmin 1000.0, freqs mHz freqs mHz freqs mHz ifmin ifmax freqs freqs 1 ifmax spectrum abs. rfft data cut ifmin ifmax end plot data cut let Create spectrum plot spectrum plot scatter x freqs mHz freqs mHz . 0 , y spectrum freqs mHz . 0 , mode \"lines\", line attr color \"blue\" , name \"\", Add vertical lines at each mode frequency for f, l, n in zip cls selected frequencies , cls selected angular orders , cls selected overtones push spectrum plot, scatter x f, f , Vertical line at frequency f y 0, maximum spectrum , Span full range of l mode \"lines\", name \" l,n \", line attr color \"gray\", width 0.5 , showlegend false end Interactive Plotly figure plot spectrum plot, Layout title \"Normal Mode Spectrum\", xaxis title \"Frequency mHz \", yaxis title \"Amplitude\", end md\" Plots\" pyconvert Array, ray out \"frequencies\" 1000.0 function spectrum plot cls, cls out plot title true, plot efs true, exclude slichter false, plot wavenumber false, plot phasevelocity false, init mode nothing oplotcolors \" e31a1c\", \" 33a02c\", \" ff7f00\", \" 1f78b4\" addt 1 Int exclude slichter Int cls.sph type 1 ls cls out \"angular orders\" if plot wavenumber xlabel \"wave number k in km\" xs pyconvert Array, cls out \"wave numbers\" . cls out \"radius\" end 1000.0 else xlabel \"angular degree l\" xs pyconvert Array, cls out \"angular orders\" end if plot phasevelocity ylabel \"phase velocity in km s\" fcp pyconvert Array, cls out \"phase velocities\" 1000.0 else ylabel \"frequency in mHz\" fcp pyconvert Array, cls out \"frequencies\" 1000.0 end return Plot scatter x xs, y fcp, mode \"markers\", marker size 4, marker color \"black\" , Layout xaxis attr title xlabel , yaxis attr title ylabel , title \"Type cls.mode , Modelname cls.modelname \" end bind clicked mode let p PlutoPlot spectrum plot cls selected cls , cls selected cls out add plotly listener p,\"plotly click\", \" e console.log e let dt e.points 0 PLOT.value dt.x, dt.y PLOT.dispatchEvent new CustomEvent 'input' \" p end PlutoUI.ExperimentalLayout.hbox plot Earth model model fname , eigenfunction plot cls selected, clicked mode clicked mode \"\"\" Plot eigenfunctions \"\"\" function eigenfunction plot cls selected, clicked mode cls cls selected cls cls out cls selected cls out eigenfunctions pyconvert Matrix, cls out \"eigenfunctions\" xs pyconvert Array, cls out \"angular orders\" fcp pyconvert Array, cls out \"frequencies\" 1000.0 in mHz if pyconvert String, cls.mode \"spheroidal\" if pyconvert Int, cls.sph type 3 plabels \"U\", \"V\", \"P\" efs eigenfunctions , 1 3 end , eigenfunctions , 2 3 end , eigenfunctions , 3 3 end else plabels \"U\", \"V\" efs eigenfunctions , 1 2 end , eigenfunctions , 2 2 end end elseif pyconvert String, cls.mode \"radial\" plabels \"U\" efs eigenfunctions elseif pyconvert String, cls.mode \"toroidal\" plabels \"W\" efs eigenfunctions else error \"Not implemented for type cls.mode \" end rad grid pyconvert Array, cls.r 1000.00 depth grid pyconvert Float64, cls.radius 1000.00 . depth grid 1.0 . rad grid . pyconvert Float64, cls.radius 1000.00 dataid findfirst x isapprox x... , clicked mode, atol 1e 3 , collect zip pyconvert Array, cls out \"angular orders\" , pyconvert Array, cls out \"frequencies\" . 1000.0 traces map efs, plabels do e, label scatter x e dataid, , y depth grid, name label end l xs dataid n cls selected overtones dataid plot traces, Layout title \"Eigen function f mHz round fcp dataid , digits 3 br period min round inv fcp dataid 1000.0 60.0, digits 3 br sub n sub S sub l sub \", width 300, height 550, yaxis attr range 7000, 100 , title \"depth in km\" plot scatter x f dataid, , y cls.r 1000.0, mode \"lines\", line color oplotcolors e , name plabels e , end \"\"\" Plot vp, vs and rho as a function of depth \"\"\" function plot Earth model model fname depth, rho, vp, vs read model model fname Create traces for each variable trace rho scatter x rho, y depth, mode \"lines\", name \"Density kg m³ \", line attr color \"red\" trace vp scatter x vp, y depth, mode \"lines\", name \"P Wave Velocity m s \", line attr color \"blue\" trace vs scatter x vs, y depth, mode \"lines\", name \"S Wave Velocity m s \", line attr color \"green\" Create figure with reversed depth axis fig plot trace rho, trace vp, trace vs , Layout title \"Earth Model\", xaxis title \"Property Value\", yaxis title \"depth in km\", yaxis attr range 7000, 100 , Depth increases downward legend attr x 0.9, y 1 , width 400, height 550, return fig end "},{"url":"normal-modes/spherical_harmonics/","title":"Spherical Harmonics","tags":["normalmodes"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Spherical Harmonics\" tags \"normalmodes\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using PlutoUI, PlutoPlotly, SpecialFunctions, LinearAlgebra, Printf, AssociatedLegendrePolynomials, LaTeXStrings, Bessels end using ForwardDiff TableOfContents md\"\"\" Visualization of Spherical Harmonics Spherical harmonics are fundamental mathematical functions used to describe wave phenomena on a sphere. They appear in seismology while modeling Earth's free oscillations. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Adjust Spherical Harmonic & Radial Function Parameters Use the sliders below to change the properties of the spherical harmonics and radial function. Degree l Controls the complexity of the spherical harmonic function. Order m Determines the azimuthal variation allowed range l \\leq m \\leq l . Radial Frequency ω Affects the oscillations of the radial function. bind l value Slider 0 1 20, default 3, show value true Degree bind m value Slider l value 1 l value, default 0, show value true Order bind ω value Slider range 0, 0.1, length 1000 , default 0.05, show value true Radial Frequency \"\"\" bind mode Select \"R\", \"S\", \"T\" c 5.0 in km s md\" Appendix\" md\" Surface Spherical Harmonics \" function Y lm l, m, θ, φ P lm λlm l, abs m , cos θ return P lm exp im m φ end function Y lm l, m, thetaphi return Y lm l, m, thetaphi 1 , thetaphi 2 end function spherical harmonics l, m, θ, φ if abs m l return zero θ end Y Y lm l, m, θ, φ return Y Return the real part for visualization end md\" Vector Spherical Harmonics\" function spherical harmonic gradient l Int, m Int, θ, φ if abs m l return zero θ , zero θ Edge case where |m| l end Y Y lm l, m, θ, φ dY ForwardDiff.gradient x real Y lm l, m, x , θ,φ im ForwardDiff.gradient x imag Y lm l, m, x , θ,φ return dY end spherical harmonic gradient l value, m value, 1.2, 0.1 function vector spherical harmonics l, m, θ, φ, mode type if abs m l return zero θ end Y Y lm l, m, θ, φ dY spherical harmonic gradient l, m, θ, φ s inv sqrt l l 1 if mode type \"R\" return Y, 0, 0 Purely outward motion gravity like elseif mode type \"S\" return s. 0, dY 1 , dY 2 sin θ Tangential movement elseif mode type \"T\" return s. 0, dY 2 sin θ , dY 1 Rotational motion else return 0, 0, 0 end end md\" Grids\" begin θ range range 0, π, length 50 Latitude φ range range 0, 2π, length 100 Longitude θ grid first. Iterators.product θ range, φ range φ grid last. Iterators.product θ range, φ range end Compute spherical harmonics Ylm grid real spherical harmonics l value, m value, θ, φ for θ, φ in zip θ grid, φ grid begin Compute selected VSH function in spherical coordinates U spherical vector spherical harmonics l value, m value, θ, φ, mode for θ, φ in zip θ grid, φ grid U r u 1 for u in U spherical Radial component U θ u 2 for u in U spherical Theta component U φ u 3 for u in U spherical Phi component Ux U r . sin. θ grid . cos. φ grid . U θ . cos. θ grid . cos. φ grid . U φ . sin. φ grid Uy U r . sin. θ grid . sin. φ grid U θ . cos. θ grid . sin. φ grid U φ . cos. φ grid Uz U r . cos. θ grid U θ . sin. θ grid U φ . 0 end begin Convert spherical to Cartesian coordinates X sin. θ grid . cos. φ grid . Ylm grid Y sin. θ grid . sin. φ grid . Ylm grid Z cos. θ grid . Ylm grid end begin plot cone x vec X , y vec Y , z vec Z , u real vec Ux , v real vec Uy , w real vec Uz , colorscale \"Reds\", showscale false, sizeref mode \"R\" ? 1.0 0.15 , name \"Vector Field\" , Layout title \" mode br l l value, m m value\", scene attr xaxis attr title \"X\" , yaxis attr title \"Y\" , zaxis attr title \"Z\" , aspectmode \"cube\" end radius max 6000 in km radius grid range 0., radius max, length 1000 R Bessels.sphericalbesselj. l value, ω value . radius grid . c begin PlutoUI.ExperimentalLayout.hbox plot surface x X, y Y, z Z, surfacecolor Ylm grid, colorscale \"Seismic\", showscale true , Layout width 500, title \"Spherical Surface Harmonic br l l value, m m value\" , plot scatter x R, y radius grid, mode \"lines\", line attr color \"blue\", width 3 , name \"Radial Function\" , Layout width 200, yaxis attr title \"radius km \" ,title \"Radial Wave Function br period round 2 pi ω value 60, digits 2 min\" end "},{"url":"numerical-modeling/shear-horizontal-pseudo-spectral2D/","title":"Pseudo-spectral Method -- Seismic Wave Equation","tags":[],"text":" A Pluto.jl notebook v0.19.46 frontmatter title \"Pseudo spectral Method Seismic Wave Equation\" description \"Lets get a serious numerical simulation done with shear horizonal waves.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using FFTW using LinearAlgebra using LaTeXStrings import DrWatson strdict using Plots using PlutoUI using Statistics using ProgressLogging end md\"\"\" Pseudo spectral time domain method for solving Shear Horizontal SH waves. Pseudo spectral methods are used in scientific computing for the solution of partial differential equations. The advantage of these methods is that the evaluation of spatial derivative operators is considerably faster as we use algorithms such as the Fast Fourier transform https en.wikipedia.org wiki Fast Fourier transform . The purpose of this notebook is to introduce these methods for solving the seismic wave equation, specifically, a 2 D SH stress velocity system. As discussed in the class, the particle velocity and stress fields are staggered in time and we use a simple explicit time stepping approach. We shall assume a 2 D periodic domain and define methods to compute FFT, spatial derivative and iFFT. More efficient pseudo spectral implementations especially using GPUs and multiple CPU threads are in the following packages Fourier Flows https fourierflows.github.io FourierFlowsDocumentation stable , Geophysical Flows https github.com FourierFlows GeophysicalFlows.jl . Importantly, equations are oftentimes time stepped forward in Fourier space, which is faster, however, we avoid that in this notebook to facilitate storage of snapshots at arbit values of the time. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Assignment II Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" We shall first consider the equation of motion and simplify it to derive the 2 D SH system ```math \\rho \\ddot u \\mathbf \\nabla \\cdot \\mathbf \\sigma f . \\ ``` Lets assume that the \\ 1 particles are constrained to move only along y direction, i.e., u x u z 0 ```math \\rho \\ddot u y \\partial x \\sigma yx \\partial z \\sigma yz f y , ```\\ 2 stresses don't change along y direction to result in ```math \\partial y \\sigma \\cdot 0. ``` The constitutive equations are ```math \\sigma yx 2\\mu\\epsilon yx \\mu\\partial x u x, ``` ```math \\sigma yz 2\\mu\\epsilon yz \\mu\\partial z u y. ``` \"\"\" md\"\"\" Let us set up the parameters of the simulation. We define a 2 D spatial grid of extents x∈ 40,40 and z∈ 40,40 . Let the density ρ and shear modulus μ be equal to 1 at all the grid points. Let us also add a density perturbation i.e a high density region in the bottom portion of the grid. We then apply an initial impulsive velocity v y that has a 2 D asymmetric gaussian profile. In order to study the propagation of the wave front, we need to choose a time step that satisfies the Courant condition. Here, we have chosen the Courant number to be 0.2 . \"\"\" begin domain extends zgrid range 40, stop 40, length 512 xgrid range 40, stop 40, length 512 Numerics nx, nz length xgrid , length zgrid nout 10 plotting frequency Derived numerics dx, dz step xgrid , step zgrid cell sizes lets calculate the min distance from the center to the edge of the domain r min xgrid end xgrid 1 , zgrid end zgrid 1 0.5 nothing end begin Physics Medium parameters μ ones nz, nx shear modulus ρ ones nz, nx density lets add density perturbation ρ 1 50, . 2.0 nothing end begin initial conditions on vy vy0 zeros nz, nx vy0 . exp x 0.0 ^2 11 z 0.0 ^2 1 for z in zgrid, x in xgrid nothing end begin choose time stepping dt to satisfy Courant condition courant number 0.2 dt courant number step xgrid minimum inv. sqrt. μ . ρ nothing end md\"\"\" We now define methods to compute a 2 D Fourier transform ```math \\hat u \\mathbf k , t \\frac 1 2\\pi \\sum \\mathbf x u \\mathbf x , t \\, e^ i \\mathbf k \\cdot \\mathbf x \\ , ``` The derivative property of Fourier Transform First order differentiation of a function along the x dimension is equivalent to multiplying its Fourier Transform by \\imath k x in the wavenumber domain.\\ ```math \\partial xu \\mathbf x , t \\leftrightarrow ik x \\hat u \\mathbf k , t . ``` In the following cell, the derivatives are calculated using the functions `Dx ` and `Dz `. Simply put, these functions compute the Fourier transform, apply the derivative property, and take the inverse Fourier Transform to generate the spatial derivative. \"\"\" begin F plan rfft zeros nz, nx , 1, 2 kx reshape collect fftfreq nx, inv step xgrid , 1, 2 pi kz reshape collect rfftfreq nz, inv step zgrid , , 1 2 pi storage zero F zeros nz, nx fp strdict F kx kz storage function Dx dPdx, P, fp mul fp \"storage\" , fp \"F\" , P broadcast , fp \"storage\" , fp \"storage\" , fp \"kx\" rmul fp \"storage\" , im ldiv dPdx, fp \"F\" , fp \"storage\" end Dx dP, P Dx dP, P, fp Dx P dPdx zero P Dx dPdx, P, fp dPdx function Dz dPdz, P, fp mul storage, fp \"F\" , P broadcast , fp \"storage\" , fp \"storage\" , fp \"kz\" rmul fp \"storage\" , im ldiv dPdz, fp \"F\" , fp \"storage\" end Dz dP, P Dz dP, P, fp Dz P dPdz zero P Dz dPdz, P, fp dPdz nothing end md\"\"\" We now know how to calculate the derivatives using functions `Dx` and `Dz`. Let's now discretize the time dimension and formulate an explicit time stepping leap frog scheme and alternatively update the velocity and stress fields. We will start with the velocity field ```math \\rho \\dot v y \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 , ``` where the finite difference approximation for the time derivative for timestep dt is ```math \\frac \\rho v y it v y it 1 dt \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 , ``` ```math v y it v y it 1 \\frac dt \\rho \\left \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 \\right , ``` ```math v y it v y it 1 \\frac dt \\rho \\mathrm Dx \\sigma yx it \\tfrac 1 2 \\mathrm Dz \\sigma yz it \\tfrac 1 2 . ``` Similarly, for updating the stresses, ```math \\dot \\sigma 21 \\mu\\frac dv y dx , ``` ```math \\dot \\sigma 23 \\mu\\frac dv y dz , ``` we can write ```math \\sigma 21 it \\tfrac 1 2 \\sigma 21 it \\tfrac 1 2 \\mu\\mathrm Dx v y dt, ``` ```math \\sigma 23 it \\tfrac 1 2 \\sigma 23 it \\tfrac 1 2 \\mu\\mathrm Dz v y dt. ``` Notice that the temporal grid of stress and velocity are staggered. Finally, let's write a function now that leaps by a given number of steps. \"\"\" begin number of timesteps function propagate nt, vyinit vy copy vyinit preserve initial velocities Time loop snaps store dvydx zeros nz, nx dvydz zeros nz, nx σyx zeros nz, nx dσyxdx zeros nz, nx σyz zeros nz, nx dσyzdz zeros nz, nx progress for it 1 nt Dx dvydx, vy Dz dvydz, vy . σyx σyx μ dvydx dt . σyz σyz μ dvydz dt Dx dσyxdx, σyx Dz dσyzdz, σyz . vy vy inv ρ dσyxdx dσyzdz dt t t dt keep account of time Storage for visualisation if mod it, nout 0 push snaps store, copy vy end end return snaps store end nothing end begin ntsteps Int floor r mean sqrt. μ . ρ dt snaps store propagate ntsteps, vy0 nothing end begin x randn nz, nx y randn nz, nx dot Dx x , y , dot y, Dx x dot Dz x , y , dot y, Dz x end md\"\"\" Let's look at the results by visualizing the propagation of the wavefront and the displacements as a function of time at observer locations of your choice. \"\"\" md\"\"\" Observer 1 \"\"\" md\"\"\" Observer 2 \"\"\" bind tsnap PlutoUI.combine do Child md\"\"\" Snapshot Number Child Slider 1 length snaps store , default length snaps store ,show value true \"\"\" end md\"\"\" Appendix \"\"\" myheat x, t \"\" heatmap xgrid, zgrid, x, c grays, aspect ratio 1, title t, ylim 50, 50 myheat vy0, \"Initial \\ v y\\ \" Lets check the derivative operators plot myheat Dx vy0 , \"Dx\" , myheat Dz vy0 , \"Dz\" , size 800, 300 , begin Function to get the positions of the observer function position input return PlutoUI.combine do Child inputs md\"\"\" x Child string x, \"pos\" , Slider grid, default 10,show value true \"\"\" for x, grid in zip \"x\", \"z\" , xgrid, zgrid md\"\"\" inputs \"\"\" end end nothing end bind obs1 confirm position input bind obs2 confirm position input begin myheat snaps store tsnap 1 , L\"Particle Velocity v y \" scatter obs1 xpos , obs1 zpos , label \"Observer 1\", legendfontsize 6, c \"cyan\" scatter obs2 xpos , obs2 zpos , label \"Observer 2\", legendfontsize 6, c \"orange\" end begin Function to get the velocity profiles function get velocity profile snaps, observer index x 1 1 nx index x index x xgrid. observer xpos 1 index z 1 1 nz index z index z zgrid. observer zpos 1 n times length snaps velocity profile zeros n times for i in 1 n times tmp snaps i velocity profile i tmp index z, index x end return velocity profile end nothing end begin vel prof obs1 get velocity profile snaps store, obs1 vel prof obs2 get velocity profile snaps store, obs2 nothing end begin plot 1 1 length snaps store , vel prof obs1, c \"cyan\", label \"Observer 1\", xlabel \"Time step\", ylabel \"Particle velocity\" plot 1 1 length snaps store , vel prof obs2, c \"orange\", label \"Observer 2\" vline tsnap, c \"magenta\", label \"\", linestyle dash end "},{"url":"planewaves/anisotropy/","title":"Seismic Anisotropy","tags":["planewaves"],"text":" A Pluto.jl notebook v0.19.46 frontmatter title \"Seismic Anisotropy\" layout \"layout.jlhtml\" tags \"planewaves\" description \"This notebook helps us visualize non circular wavefronts in a homogenoeus Earth medium due to the presence of anisotropy.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using PlutoUI using PlutoTeachingTools using Symbolics using SymbolicUtils using Tullio using Plots using TensorOperations using LinearAlgebra using Einsum using Unitful using PlotThemes theme dark end ChooseDisplayMode TableOfContents md\"\"\" Anisotropy It is important to consider deviations from isotropy when imaging the Earth. Although there could be up to 21 independent linear elastic constants, we attach the term anisotropy to a situation where we use more than two elastic constants to describe the medium. Lattice preferred anisotropy LPO homogeneous material, but there is preferred crystal orientation, e.g., olivine. Shape preferred anisotropy SPO a stack of rock layers with different isotropic properties cause seismic velocities to differ in different directions, or preferred orientation of cracks in the medium. It is often difficult to distinguish the effects of anisotropy and those of medium heterogeneity. The presence of anisotropy results in non circular wavefronts, even though the elastic constants are homogeneous. We can visualize wavefronts after projecting them along different planes by interacting with the plot below. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" warn \"The rest of the notebook reacts to the choice made above.\" aside tip md\" Mantle anisotropy Mapping anisotropy in the upper mantle helps identify the preferential orientation of olivine crystals, and therefore helps investigate plate motions.\" md\"\"\" For the transverse anisotropy option, if selected above, adjust the five independent elastic constants to interact with the wavefronts. A GPa bind Ap Slider range 50, stop 300, length 100 , default 272, show value true C GPa bind Cp Slider range 50, stop 300, length 100 , default 160, show value true L GPa bind Lp Slider range 50, stop 300, length 100 , default 60, show value true N GPa bind Np Slider range 50, stop 300, length 100 , default 50, show value true F GPa bind Fp Slider range 50, stop 300, length 100 , default 60, show value true \"\"\" aside tip md\" Shear wave splitting As the two quasi shear waves travel with different speeds in the case of an anisotropic medium, it leads to shear wave splitting. Which means, the two orthogonal components of the shear wave reach at slightly different times.\" md\"\"\" Transverse Anisotropy Voigt Notation A transversely anisotropic material can be characterized by five independent elastic constants. The Voigt matrix is a six dimensional symmetric matrix denoted using `C`. We follow the Love convention, where the elastic constants are represented using the following symbols. \"\"\" md\"\"\" LocalResource \".. assets images rock strata.jpg\", width 300 Example of SPO transverse anisotropy because of layered rock materials. \"\"\" variables A Real N Real F Real C Real L Real md\"In the case of transverse anisotropy, with rock layers oriented along in the xy plane, the Love constants can be used from the Voigt matrix as follows. In this case, the axis of symmetry is along z .\" Ctrans A, A 2N, F, 0, 0, 0 A 2N, A, F, 0, 0, 0 F, F, C, 0, 0, 0 0, 0, 0, L, 0, 0 0, 0, 0, 0, L, 0 0, 0, 0, 0, 0, N aside tip md\"For layered rocks, the seismic waves travel faster in the direction parallel to the layers, as opposed to the perpendicular direction. This is because the waves can choose to travel in the fast layers in the former case.\" md\"As an example of LPO, we now construct the Voigt matrix for olivine, where the constants are in u\\\"GPa\\\" .\" Colivine 192, 66, 60, 0, 0, 0 66, 160, 56, 0, 0, 0 60, 56, 272, 0, 0, 0 0, 0, 0, 60, 0, 0 0, 0, 0, 0, 62, 0 0, 0, 0, 0, 0, 49 md\"\"\" For an isotropic medium, there are only two independent elastic constants \\lambda and \\mu . In this case, the Voigt matrix can be derived using the following substitutions. \"\"\" variables λ Real μ Real Ciso map Ctrans do x substitute x, A λ 2μ, C λ 2 μ, N μ, F λ, L μ end md\"\"\" Elastic tensor `cijkl` The Voigt matrix is not a tensor and no longer preserves the mathematical properties of the elastic tensor. Given the elements of the Voigt matrix, we can construct the tensor `cijkl`, for both isotropic and transverse anisotropy cases, using the following method. \"\"\" function get cijkl C C i isequal i, j 1 isequal i, j 9 i j , k isequal k, l 1 isequal k, l 9 k l for i in 1 3, j in 1 3, k in 1 3, l in 1 3 end ciso get cijkl Ciso for isotropic ciso ,1, ,1 ctrans get cijkl Ctrans for transverse anisotropy colivine get cijkl Colivine for anisotropy md\"\"\" Select medium type bind cmedium Select colivine \"olivine\", ctrans \"transverse anisotropic z axis symmetry \", ciso \"isotropic\" \"\"\" md\"Let's take a moment to realize the power of our notation using `Symbolics` and `Einsum` packages. We shall now write down something that we were familiar in the isotropic world the stress strain relation.\" variables e 1 3, 1 3 strain tensor einsum σiso i, j ciso i, j, k, l e k, l md\"\"\" Doesn't it look easy? If you were confused about the Voigt matrix above, we can simply understand it by writing the stress strain relation in the transversely anisotropic medium. \"\"\" einsum σtrans i, j ctrans i, j, k, l e k, l einsum σolivine i, j colivine i, j, k, l e k, l variables ρ Real ω Real t Real md\"\"\" Planewaves in Anisotropic Media It is important to realize that we are going to work with homogeneous media, where all the elastic constants in `cikjl` don't vary with spatial coordinates. We shall now analyze plane wave solutions. \"\"\" variables u 1 3 vector displacement field x 1 3 g 1 3 p Real variables x 1 3 position vector ~ x, y, z variables g 1 3 amplitude vector we already used A for one of the elastic constants variables s 1 3 unit slowness vector use shat instead? variables p slowness magnitude variables v velocity inverse of slowness syms ı imaginary number D Differential x 1 , Differential x 2 , Differential x 3 Dt Differential t utrail1 exp ı ω t p dot s, x utrail Symbolics.scalarize g . utrail1 einsum uddot i cmedium i, j, k, l D j D l u k einsum uddot trail1 i cmedium i, j, k, l expand derivatives D j D l utrail k einsum uddot trail2 i expand derivatives Dt Dt utrail i ρ md\"The equation of motion is satisfied only when the following two expressions are equal to each other.\" ga simplify. uddot trail1 . utrail1 . ω^2 . ı^2 p^2 gb simplify. uddot trail2 . utrail1 . ω^2 . ı^2 v^2 md\"\"\" Christoffel Matrix `M` Now we would like to work towards the construction of a transformation matrix `M` such that `ga M g`. Notice that `gb` is already in the direction of the amplitude vector, so once we construct `M`, all we need to solve is an eigenvalue problem ```math M g ρv^2 g, ``` where the eigenvalues will give us the phase velocities. Note that `M` depends on the direction of the slowness vector `s`, therefore leading to anisotropy. As `M` is symmetric, we have three solutions for general anisotropic case a single quasi P wave qP and two quasi S waves qS . \"\"\" M1 map ga do x simplify substitute x, g 2 0, g 3 0 g 1 end M2 map ga do x simplify substitute x, g 1 0, g 3 0 g 2 end M3 map ga do x simplify substitute x, g 2 0, g 1 0 g 3 end M M1 M2 M3 concat all the columns to get the Christoffel matrix md\"\"\" We shall now analyze plane waves traveling along the cartesian axis individually. Towards that end, we will make necessary substitutions for the slowness vector. The Chistoffel matrices for plane waves traveling in `x 1 `, `x 2 `, and `x 3 ` directions are given by the following expressions respectively. \"\"\" aside correct md\"For an isotropic medium, note that the Christoffel matrices didn't change with the direction of the slowness vector. Obviously. Its eigenvalues correspond to P, SV and SH waves.\" map M do x simplify substitute x, s 1 1, s 2 0, s 3 0 end map M do x simplify substitute x, s 1 0, s 2 1, s 3 0 end map M do x simplify substitute x, s 1 0, s 2 0, s 3 1 end md\"\"\" References Jules Thomas Browaeys, Sébastien Chevrot, Decomposition of the elastic tensor and geophysical applications, Geophysical Journal International, Volume 159, Issue 2, November 2004, Pages 667–678, https doi.org 10.1111 j.1365 246X.2004.02415.x \"\"\" md\" Appendix\" begin planes to be analyzed struct xy end struct yz end struct zx end end syms θ azimuth begin substitute the components of the slowness vector given θ and the plane ssubs xy s 1 sin θ , s 2 cos θ , s 3 0 ssubs yz s 1 0, s 2 sin θ , s 3 cos θ ssubs zx s 1 cos θ , s 2 0, s 3 sin θ end ρp 4u\"g cm^3\" fix density return phase velocities qP, qS1, qS2 for each θ function get phase velocity θgrid, M V broadcast θgrid do θ E eigen map M do m m θ end return broadcast E.values do e u\"km s\" sqrt e u\"GPa\" ρp end end return hcat V... end substitute a given array of expressions with UI elastic constants function subsp X map X do x substitute X, A Ap, L Lp, C Cp, F Fp, N Np, λ Ap 2Np, μ Lp end end return a function of azimuth θ that generates the Christoffel matrix function get Christoffel matrix M, plane mp map M do x simplify subsp substitute x, ssubs plane end mpfn map mp do x build function x, θ, expression Val false end return mpfn end generate the functions and store, for further plotting begin Mxy get Christoffel matrix M, xy Myz get Christoffel matrix M, yz Mzx get Christoffel matrix M, zx end θgrid range 0, stop 2π, length 50 need an azimuth grid to slice wavefronts along each plane md\" Plots\" begin userplot PolarPS recipe function f h PolarPS w 2 lims 0, 10 maximum 10 km, so that we can talk about tmax 1 s proj polar axis nothing yguidefontsize 10 frame nothing series begin label \"qS₂\" θgrid, reshape h.args 1 , 3, 1, end series begin label \"qS₁\" linestyle dot θgrid, reshape h.args 1 , 3, 2, end series begin label \"qP\" θgrid, reshape h.args 1 , 3, 3, end end end function plot wavefronts gif for t in range 0, stop 1, length 50 p1 polarps t . get phase velocity θgrid, Mxy , title \"xy projection\" p2 polarps t . get phase velocity θgrid, Myz , title \"yz projection\" p3 polarps t . get phase velocity θgrid, Mzx , title \"zx projection\" plot p1, p2, p3, layout 1, 3 end end plot wavefronts md\"\"\" TODO vis. particle motion `g` for quasiP and quasiS phases vis. for group velocity vs. phase velocity planes waves incident on a horizontal interface \"\"\" "},{"url":"planewaves/boundary-conditions/","title":"Boundary Conditions","tags":["planewaves"],"text":" A Pluto.jl notebook v0.19.46 frontmatter layout \"layout.jlhtml\" title \"Boundary Conditions\" tags \"planewaves\" description \"Boundary conditions at an interface between two different media\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using PlutoUI using PlutoTeachingTools using Symbolics using SymbolicUtils using LinearAlgebra end TableOfContents md\"\"\" Boundary Conditions These conditions determine the relationship between the displacements and tractions across an interface between two media. Here, we consider different interfaces, whose unit normal vector is denoted using `n`. For a given location on the interface, we use `σ¹` to denote the stress tensor just above the interface and `σ²` to denote the stress tensor just below the interface. Similarly, we use `u¹` and `u²` to denote displacements above and below the interface, respectively. In seismology, we often encounter three types of interfaces. Solid Solid Welded Interface Solid Liquid Solid Vaccum Free Interface Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" variables u¹ 1 3 u² 1 3 displacement vectors variables σ¹ 1 3,1 3 σ² 1 3,1 3 stress tensors md\"Select `n` for the rest of the notebook bind n Select 1,0, 0 , 0, 1, 0 , 1 sqrt 2 , 1 sqrt 2 , 0 , 0, 0, 1 , default 0,0,1 \" md\"\"\" Solid Solid Consider a welded interface between two media, where none of the springs connecting particles of one medium to another medium are \"broken\". \"\"\" md\"\"\" Kinematic conditions A welded interface means that all components of the displacement field are continuous across the boundary. \"\"\" collect u¹ ~ collect u² md\"\"\" Dynamic conditions These are derived considering a Gaussian pillbox intersecting the interface with negligible volume. It can be shown that this pillbox can have zero acceleration only when the traction on the interface is continuous across the interface. \"\"\" collect σ¹ n ~ collect σ² n md\"\"\" Solid Fluid Unlike the welded interface, some of the springs are \"broken\". This means that particles can slide tangentially to the interface, and fluid particles cannot apply shear forces on the solid particles. Assume medium with index `1` to be fluid. \"\"\" md\"\"\" Kinematic conditions The normal components of the displacement field are continuous, while the rest of the components can be discontinuous due to sliding. \"\"\" dot u¹, n ~ dot u², n md\"\"\" Dynamic conditions The components of the traction tangential to the interface are zero, whereas the normal components of the traction are continuous. \"\"\" dot collect σ¹ n , n ~ dot collect σ² n , n collect σ² n dot collect σ² n , n n ~ 0 vector rejection dot n, collect σ² n dot collect σ² n , n n md\"\"\" Solid Vacuum The vacuum has no particles to apply forces on the solid particles. The solid particle displacement is unconstrained. Taking medium with index `2` to be solid, dynamic conditions require the traction vector corresponding to interface to be zero. \"\"\" md\"\"\" Dynamic conditions \"\"\" collect σ² n ~ 0 "},{"url":"planewaves/intrinsic-attenuation/","title":"Seismic Attenuation","tags":["planewaves"],"text":" A Pluto.jl notebook v0.20.8 frontmatter title \"Seismic Attenuation\" tags \"planewaves\" layout \"layout.jlhtml\" description \"This notebook helps us visualize these effects of attenuation on propagating seismic waves.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using SymbolicUtils using PlutoUI using PlutoTeachingTools using PlutoPlotly using FFTW end TableOfContents md\"\"\" Intrinsic Attenuation As opposed to adiabatic wave propagation, the wave motion in the earth is spatially attenuated. In other words, for anelastic earth, the integral of kinetic energy and the strain energy is no longer held constant due to internal friction and conversion to heat. In general, the dimensionless quantity Q that summarizes this intrinsic attenuation is dependent on the frequency of the propagating waves. Over the range of frequencies observed in seismology, it has been observed that observations suggest that Q is effectively constant, and the earth is only mildly anelastic i.e., Q\\gg1 . As a result, the high frequencies are attenuated more than the low frequencies a traveling pulse in the earth gradually loses its high frequencies causing changes in pulse shapes with distance from the source. This notebook helps visualize these effects considering a plane wave with an impulsive shape propagating in the x direction. Attenuation is observed to be strongest in the upper mantle and inner core. Attenuation decreases rapidly with depth, with a high attenuation in the curst that is attributed to the effects of cracks and fluids. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" bind medium Radio \"elastic\" \"elastic\", \"anelastic1\" \"anelastic non dipersive \", \"anelastic2\" \"anelastic dispersive \" , default \"anelastic1\" md\"Depending on the type of the medium selected above, the planewave solution is given below.\" md\"\"\" Towards plotting the plane wave solution, we shall first choose the frequency wave. frequency Hz bind fp Slider range 1, stop 5, length 10 , default 2, show value true bind tplot Clock 0.1 \"\"\" md\"\"\" In the case of anelastic earth, input the quality factor Q to interact with the monochromatic plane wave plotted above. Notice that for a given Q, the high frequencies travel far from x 0 without, compared to the low frequencies. Q bind Qp Slider range 5, stop 50, length 20 , default 5, show value true \"\"\" md\"\"\" We can synthesize the pulse in the time domain by summing all the Fourier components in order to notice the change in the pulse shape as we increase the x distance from the source. distance to the receiver bind xr Slider range 30, stop 100, length 25 , show value true \"\"\" md\"\"\" Quality Factor Q Assuming Q\\gg1 , we can write ```math \\frac 1 Q \\omega \\frac 1 \\pi \\frac \\Delta A A . ``` Here, \\Delta A is the gradual spatial decay in the amplitude of the propagating wave as it travels a distance of one wavelength ```math \\Delta A \\frac d A d x \\lambda \\frac d A d x \\frac 2\\pi c \\omega . ``` This results in an exponentially decaying solution ```math A x A 0\\,\\exp\\left \\frac \\omega x 2 c Q \\right . ``` \"\"\" md\"\"\" Dispersion Attenuation causes a small amount of velocity dispersion. Otherwise, attenuation of high frequencies will cause pulse broadening and violates causality. An important result from Aki & Richards ch. 5 is that the velocity c is given by the expression below. \"\"\" md\"\"\" Attenuating Planewave \"\"\" syms x z ω Q A₀ t π syms ı Complex Real syms c Real amplitude of either P or S waves md\"\"\" Appendix \"\"\" reference wave speed is assumed to be 2 km s cp 2 assume a time grid tgrid range 100, stop 100, length 2048 . xr cp get the corresponding frequency grid freqgrid rfftfreq length tgrid , inv step tgrid syms c₀ Real ω₀ Real function A medium, A₀ if medium \"elastic\" return A₀ elseif medium \"anelastic1\" return A₀ exp ω x 2 c Q elseif medium \"anelastic2\" return A₀ exp ω x 2 c Q exp ı ω x log ω ω₀ π c₀ Q end end planewave A medium, A₀ exp ı ω t x c planewave c dispersive ω, Q, c₀, ω₀ c₀ 1 1 π Q log ω ω₀ not used atm c ~ c dispersive ω, Q, c₀, ω₀ substitute before plotting function subs ex, om nothing substitute ex, ı im, π pi, A₀ 1, Q Qp, c₀ cp, c cp, ω om, ω₀ 2 pi 10 end scalar field at the receiver in the frequency domain Ureceiver map freqgrid do f if iszero f instability at zero frequency return complex 1.0, 0.0 else return Complex Float64 substitute subs planewave, 2 pi f , x xr, t xr cp end end do an fft to get the time series ureceiver fftshift irfft Ureceiver, length tgrid let fig Plot Layout title \"Recorded pulse at xr km\", xaxis attr range 50, 100 , title \"time s \" , yaxis attr title \"amplitude\", range 0, 0.2e 1 add trace fig, scatter x tgrid, y ureceiver plot fig end plot planewave fn build function subs planewave, fp 2 pi , x, z, t, expression Val false function plot planewave u, t1 0 we need to discretize space before plotting xgrid range 100, stop 100, length 100 zgrid xgrid up0 real plot planewave fn x, z, 0 for z in zgrid, x in xgrid clim maximum abs. up0 , maximum abs. up0 up real plot planewave fn x, z, tplot for z in zgrid, x in xgrid fig Plot Layout width 325, height 300 add trace fig, heatmap x xgrid, y zgrid, z up, colorscale seismic, zmin clim 1 , zmax clim 2 plot fig end plot planewave planewave "},{"url":"planewaves/reflection-P-SV-free-surface/","title":"P-SV Free-surface Reflection","tags":["planewaves"],"text":" A Pluto.jl notebook v0.20.5 frontmatter title \"P SV Free surface Reflection\" layout \"layout.jlhtml\" tags \"planewaves\" description \"In this notebook, we shall investigate the interaction of plane P waves with Earth's free surface. \" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using PlutoPlotly using SymbolicUtils using LinearAlgebra using Latexify using LaTeXStrings using PlutoUI using PlutoTeachingTools end ChooseDisplayMode TableOfContents md\"\"\" P SV Free surface Reflection In this notebook, we will delve into the analysis of the reflection coefficients of P and S waves at a free surface, which is a solid vacuum boundary. By assuming a free surface at \\ z 0 \\ , we will apply stress free boundary conditions to derive the expressions for the reflection coefficients of both P and S waves. This analysis is crucial for understanding the behavior of seismic waves as they interact with the Earth's surface. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" bind tplot Clock 0.1 \"\"\" Markdown.MD Markdown.Admonition \"observe\", \"Observations\", md\"\"\" The angle of reflection of the S wave is always less than that of the P reflected wave. This is because the vertical slowness of the S reflected wave η β is always greater than that of the P reflected wave. The wavenumber of the S reflected wave is higher than that of the P wave. The wavenumber of the S reflected wave increases as β becomes smaller compared to α . When β is very small, the amplitude of the S reflected wave is negligible. A negative reflection coefficient indicates a phase change of the reflected wave by π. The P reflection coefficient and S reflection coefficient follow the conservation of energy. The P reflection coefficient is maximum when the S reflection coefficient is minimum. \"\"\" md\"Spatial coordinates, time, and angular frequency.\" syms x Real z Real ω Real t Real syms ı Complex Real imaginary unit, going to substitute with im later md\"Differential operators.\" begin Dx Differential x Dz Differential z end md\"In 2D, a harmonic plane wave with an frequency `ω`, amplitude `A`, horizontal slowness `p` and vertical slowness `η` is defined below.\" plane p, η, A A exp ı ω t p x η z md\"The horizontal slowness i.e., the ray parameter is denoted using p .\" md\"The vertical component of the slowness vector in the first and second layer are denoted using \\eta and \\eta t . These plane waves satisfy the scalar wave equation only if the dispersion relation ```math p^2 η^2 \\frac 1 β^2 ``` is satisfied.\" syms A A₁ A₂ syms p Real syms η₁ η₂ md\"\"\" Potentials Incident P wave, Reflected P wave and Reflected SV wave For the P SV system on a free surface, all the waves are traveling in the same medium. The velocity of the P wave is denoted by α and the velocity of the S wave is denoted by β . The plane waves representing potentials share the same horizontal slowness p . Now, we create an incident wave using the `plane` function with parameters `p`, `η₁`, and `A`, representing the horizontal slowness, verticle slowness, and amplitude, respectively. Then, two reflected waves, `reflect1` and `reflect2`, are also defined using the `plane` function. The first reflected wave, `reflect1`, uses the parameters `p`, ` η₁`, and `A₁`, indicating a reflection with opposite vertical slowness and a different amplitude. Similarly, the second reflected wave, `reflect2`, is defined with `p`, ` η₂`, and `A₂`, representing another reflection with a different vertical slowness and amplitude. This setup models the behavior of P and S incident and reflected waves at a free surface. \"\"\" incident plane p, η₁, A reflect1 plane p, η₁, A₁ reflect2 plane p, η₂, A₂ md\"\"\" Particle Displacements We now write expressions for particle displacements given plane wave potentials. Depending on whether the incident wave is P or S, these expressions change. \"\"\" md\"\"\" Free surface Condition At the free surface i.e. z 0 , kinematic boundary condition does not exist. We have two dynamic boundary conditions σ zz 0 and σ xz 0 and two unknowns A 1 , A 2 to estimate when assuming A 1 . \"\"\" syms λ Real μ Real md\" Example\" md\"\"\" We shall begin defining a function that computes the ray parameter, given the angle of incidence θ . \"\"\" syms θ Real md\"We now compute the vertical component of the slowness vector for both the reflected waves using the dispersion relation.\" md\"\"\" We can finally update the expressions of reflection coefficients using input parameters and plot them. \"\"\" md\" Appendix\" md\"\"\" Lets print the expression of the wavefield, plotted in the previous example. \"\"\" warning box md\"\"\" The sign of the vertical slowness in the transmitted field above is chosen to prevent the exponential growth of the wavefield away from the boundary. \"\"\" default plotly template plotly dark θgrid range 0, stop pi 2, length 100 need for reflectance plots md\"\"\" It is evident that the reflection coefficients depend on the velocities of the P and S waves. By selecting whether the incident wave is a P or S wave, the reflection coefficients will vary accordingly. α km sec bind αin NumberField range 2.0, stop 6.0, step 0.1 , default 3.9 β km sec bind βin NumberField range 2.0, stop 6.0, step 0.1 , default 2.0 ρ gm cm³ bind ρin NumberField range 2.0, stop 6.0, step 0.1 , default 2.9 Incident Wavefield bind incident waves Select \"P\", \"S\" , default \"P\" with Angle of incidence ∈ 0, π 2 bind θp Slider θgrid, default 1.4 and Angular frequency bind ωp Slider range 0.1, stop 2, length 10 , show value true, default 0.3 \"\"\" begin if incident waves \"P\" UxInc expand derivatives. Dx. incident UzInc expand derivatives. Dz. incident else UxInc expand derivatives. Dz. incident UzInc expand derivatives. Dz. incident end end σzz incident expand derivatives. λ . Dx. UxInc . λ . Dz. UzInc expand derivatives. 2 . μ . Dz. UzInc σxz incident expand derivatives. μ . Dx. UzInc . μ . Dz. UxInc begin if incident waves \"P\" UxRef1 expand derivatives. Dx. reflect1 UzRef1 expand derivatives. Dz. reflect1 else UxRef1 expand derivatives. Dz. reflect1 UzRef1 expand derivatives. Dx. reflect1 end end σzz reflect1 expand derivatives. λ . Dx. UxRef1 . λ . Dz. UzRef1 expand derivatives. 2 . μ . Dz. UzRef1 σxz reflect1 expand derivatives. μ . Dx. UzRef1 . μ . Dz. UxRef1 begin if incident waves \"P\" UxRef2 expand derivatives. Dz. reflect2 UzRef2 expand derivatives. Dx. reflect2 else UxRef2 expand derivatives. Dx. reflect2 UzRef2 expand derivatives. Dz. reflect2 end end σzz reflect2 expand derivatives. λ . Dx. UxRef2 . λ . Dz. UzRef2 expand derivatives. 2 . μ . Dz. UzRef2 σzz z0 substitute. σzz incident . σzz reflect1 . σzz reflect2, z 0 .~ 0 σzz simplify substitute σzz z0, Dict A 1, t 0, x 0 σxz reflect2 expand derivatives. μ . Dx. UzRef2 . μ . Dz. UxRef2 σxz z0 substitute. σxz incident . σxz reflect1 . σxz reflect2, z 0 .~ 0 σxz simplify substitute σxz z0, Dict A 1, t 0, x 0 sol simplify. Symbolics.symbolic linear solve σzz, σxz , A₁, A₂ begin reflected waves1 incident waves reflected waves2 filter x x ≠ incident waves, \"P\", \"S\" 1 end md\"\"\" bind plot waves MultiCheckBox \"i\" \"Incident incident waves \", \"r1\" \"Reflected reflected waves1 \", \"r2\" \"Reflected reflected waves2 \" , default \"i\", \"r1\", \"r2\" \"\"\" rp θ incident waves \"P\" ? sin θ αin sin θ βin ηz1 θ incident waves \"P\" ? sqrt inv αin ^2 rp θ ^2 0im sqrt inv βin ^2 rp θ ^2 0im ηz1 45 ηz2 θ incident waves \"S\" ? sqrt inv αin ^2 rp θ ^2 0im sqrt inv βin ^2 rp θ ^2 0im ηz2 45 begin Avec broadcast sol 1 , sol 2 do x θ simplify substitute x, η₁ ηz1 θ , η₂ ηz2 θ , p rp θ , λ ρin αin^2 2 βin^2 , μ βin^2 ρin end if incident waves \"S\" Avec reverse Avec end end u incident ex substitute plane rp θp , ηz1 θp , 1.0 , ω ωp, ı im u reflected1 ex substitute plane rp θp , ηz1 θp , Avec 1 θp , ω ωp, ı im u reflected2 ex substitute plane rp θp , isequal imag ηz2 θp , 0.0 ? ηz2 θp ηz2 θp , Avec 2 θp , ω ωp, ı im md\" Plots\" function plot reflectivity A, θgrid, title \"\" degθ rad2deg. θgrid fig Plot Layout title title, polar attr angularaxis direction \"clockwise\", sector 0, 90 , radialaxis range 2, 2 , add trace fig, scatterpolar r abs. A. θgrid , theta degθ, mode \"lines\", name \"Abs\" add trace fig, scatterpolar r real. A. θgrid , theta degθ, mode \"lines\", name \"Real\" add trace fig, scatterpolar r imag. A. θgrid , theta degθ, mode \"lines\", name \"Imag\" add trace fig, barpolar r 3.5, , theta rad2deg θp , width 2 , name \"Animation\", marker color \" E4FF87\" , marker line color \"black\", marker line width 1, opacity 0.5 , relayout fig, height 300, width 350, PlutoPlotly.plot fig end TwoColumn md\"\"\" plot reflectivity Avec 1 , θgrid, \"P Reflection Coefficient\" \"\"\", md\"\"\" plot reflectivity Avec 2 , θgrid, \"S Reflection Coefficient\" \"\"\" function plot planewave ui, ur1, ur2, t1 0 we need to discretize space before plotting xgrid range 200, stop 200, length 200 zgrid bottom range 0, stop 200, length 100 zgrid top range 200, stop 0, length 100 substitute imaginary unit ui, ur1, ur2 map ui, ur1, ur2 do ⋅ substitute ⋅, ı im end build functions reflected and incident uip, ur1p, ur2p map ui, ur1, ur2 do ⋅ fn build function ⋅, x, z, t, expression Val false real fn x, z, t1 for z in zgrid top, x in xgrid end utp let fn build function ut, x, z, t, expression Val false real fn x, z, t1 for z in zgrid top, x in xgrid end \"r2\" ∉ plot waves && fill ur2p, 0.0 \"i\" ∉ plot waves && fill uip, 0.0 \"r1\" ∉ plot waves && fill ur1p, 0.0 U cat ur1p uip ur2p, dims 1 cmax max maximum abs, U , maximum abs, U fig Plot Layout yaxis attr scaleanchor \"x\" , width 350, height 350, uirevison 1, dragmode \"drawopenpath\", newshape line color \"black\", title \"P SV Wavefield\", shapes line xref \"x\", yref \"y\", x0 200, y0 0, x1 200, y1 0, line attr color \"yellow\", width 3, , , , config PlotConfig displayModeBar false add trace fig, PlutoPlotly.heatmap z U, x xgrid, y vcat zgrid top, zgrid bottom , colorscale \"seismic\", zmin cmax, zmax cmax, add trace fig, scatter x 100 , y 20 , text \"Free surface\" , mode \"text\", showlegend false, textfont attr color \"yellow\", size 15, family \"Arail\", add trace fig, scatter x 150, 150 , y 150, 150 , text \" β₁,ρ₁ \", \" β₂,ρ₂ \" , mode \"text\", showlegend false, textfont attr color \"yellow\", size 15, family \"Arail\", plot fig end plot planewave u incident ex, u reflected1 ex, u reflected2 ex, mod tplot, 10 "},{"url":"planewaves/reflection-transmission-SH/","title":"Reflected and Transmitted SH Waves","tags":["planewaves"],"text":" A Pluto.jl notebook v0.20.5 frontmatter title \"Reflected and Transmitted SH Waves\" tags \"planewaves\" layout \"layout.jlhtml\" description \"In this notebook, we shall investigate the behavior of waves that love to hop between two geological layers like kids in a bouncy castle.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using PlutoPlotly using SymbolicUtils using LinearAlgebra using Latexify using LaTeXStrings using PlutoUI using PlutoTeachingTools end TableOfContents md\"\"\" SH Reflection & Transmission Coefficients In this notebook, we analyze the amplitudes of reflected and transmitted plane waves at the interface between two geological layers. Assuming a horizontal interface at z 0 , we use boundary conditions to derive expressions for the reflected and transmitted amplitudes. For simplicity, we focus on shear horizontal SH waves. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" bind tplot Clock 0.1 \"\"\" md\"Spatial coordinates, time, and angular frequency.\" syms x Real z Real ω Real t Real syms ı Complex Real imaginary unit, going to substitute with im later md\"Differential operators.\" begin Dx Differential x Dz Differential z end md\"In 2D, a harmonic plane wave with an frequency `ω`, amplitude `A`, horizontal slowness `p` and vertical slowness `η` is defined below.\" plane p, η, A A exp ı ω t p x η z md\"The horizontal slowness i.e., the ray parameter is denoted using p .\" md\"The vertical component of the slowness vector in the first and second layer are denoted using \\eta and \\eta t . These plane waves satisfy the scalar wave equation only if the dispersion relation ```math p^2 η^2 \\frac 1 β^2 ``` is satisfied.\" syms A Aₜ Aᵣ syms p Real syms η ηₜ md\"\"\" Setup The key steps involved in this analysis are 1. Defining the Plane Waves We define the mathematical expressions for the incident, reflected, and transmitted SH waves using their amplitudes, horizontal slowness `p`, and vertical slowness `η`. 2. Applying Boundary Conditions We impose the kinematic boundary condition continuity of displacement and the dynamic boundary condition continuity of traction at the interface to derive equations relating the amplitudes of the waves. 3. Solving for Coefficients We solve the derived equations to obtain the reflection and transmission coefficients, which describe the amplitudes of the reflected and transmitted waves relative to the incident wave. This analysis helps in understanding how SH waves interact with geological layers, which is crucial for interpreting seismic data and exploring subsurface structures. \"\"\" md\"\"\" Continuity in Displacement Kinematic Boundary Conditions For two solids welded in contact, the kinematic boundary condition is that all three components of the displacement have to be continuous across the boundary. We begin with expressions of the incident, transmitted and reflected plane waves. Note that all these plane waves share the same horizontal slowness p . \"\"\" u incident plane p, η, A u reflected plane p, η, Aᵣ u transmitted plane p, ηₜ, Aₜ md\"As the displacement is continuous across the boundary, we shall now substitute z 0 in the plane waves defined above, and impose a condition that the displacement due to the incident and the reflected waves in the first layer should be equal to the displacement due to the transmitted wave.\" u z0 substitute u incident u reflected u transmitted, z 0 ~ 0 md\"Lets assume the amplitude of the incident planewave to be 1 for simplicity. In other words, A r and A t now denote the amplitude relative to the incident wave.\" eq displacement simplify Symbolics.symbolic linear solve u z0, A ~ 1 u z0 md\"\"\" Continuity in Traction Dynamic Boundary Conditions Apparently, a continuity in displacement is not sufficient for us to uniquely determine both Aₜ and Aᵣ, given A. We should also employ the dynamic boundary condition, i.e., a constraint that traction on the surface z 0 is continuous. Specifically, here the component `σyz` of the stress tensor has to be continuous. \"\"\" variables μ₁ Real μ₂ Real σyz incident expand derivatives. μ₁ . Dz. u incident σyz transmitted expand derivatives. μ₂ . Dz. u transmitted σyz reflected expand derivatives. μ₁ . Dz. u reflected md\"Similar to the displacement case, we now impose the continuity in `σyz`.\" σyz z0 substitute. σyz incident . σyz reflected . σyz transmitted, z 0 .~ 0 eq traction η μ₁ simplify Symbolics.symbolic linear solve σyz z0, A ~ η μ₁ Markdown.MD Markdown.Admonition \"danger\", \"Note\", md\"\"\" The remaining element σyx doesn't have to be continuous as it doesn't determine the traction on the interface z 0 . \"\"\" md\"\"\" Finally, we can solve for the reflection and transmission amplitudes, A r and A t , for the 2 D SH problem. \"\"\" SHAₜ, SHAᵣ simplify. Symbolics.symbolic linear solve eq displacement, eq traction , Aₜ, Aᵣ plane p, ηₜ, SHAₜ plane p, η, SHAₜ md\" MOHO Example\" md\"\"\" We shall begin defining a function that computes the ray parameter, given the the angle of incidence θ . \"\"\" syms θ Real md\"We can then compute the vertical component of the slowness vector using the dispersion relation.\" md\"Similarly, the vertical component of the slowness vector in the second layer can be computed.\" md\"We can finally, update the expression of `SHAᵣ` and `SHAₜ` using the MOHO parameters and plot them\" md\" Appendix\" md\"\"\" Lets print the expression of the wavefield, plotted in the previous example. \"\"\" warning box md\"\"\" The sign of the vertical slowness in the transmitted field above is chosen to prevent the exponential growth of the wavefield away from the boundary. \"\"\" default plotly template plotly dark θgrid range 0, stop pi 2, length 100 need for reflectance plots md\"\"\" It is evident that the reflection and transmission coefficients are dependent on the wave velocity and density values of the layers. In this section, we will choose these parameters to analyze waves. By default, we take the PREM Preliminary Earth Reference Model shear wave velocity and density values at the MOHO. This example is discussed in Chapter 6 of \"Introduction to Seismology\" by Peter Shearer. β₁ km sec bind β₁MOHO NumberField range 2.0, stop 6.0, step 0.1 , default 3.9 β₂ km sec bind β₂MOHO NumberField range 2.0, stop 6.0, step 0.1 , default 4.49 ρ₁ gm cm³ bind ρ₁MOHO NumberField range 2.0, stop 6.0, step 0.1 , default 2.9 ρ₂ gm cm³ bind ρ₂MOHO NumberField range 2.0, stop 6.0, step 0.1 , default 3.38 bind plot waves MultiCheckBox \"Incident\", \"Reflected\", \"Transmitted\" , default \"Incident\", \"Reflected\", \"Transmitted\" Angle of incidence ∈ 0, π 2 bind θp Slider θgrid, default 1.4 Angular frequency bind ωp Slider range 0.1, stop 2, length 10 , default 0.3 \"\"\" pMOHO θ sin θ β₁MOHO ηMOHO θ sqrt inv β₁MOHO ^2 pMOHO θ ^2 0im ηₜMOHO θ sqrt inv β₂MOHO ^2 pMOHO θ ^2 0im SHAₜ ex, SHAᵣ ex broadcast SHAₜ, SHAᵣ do x θ simplify substitute x, η ηMOHO θ , ηₜ ηₜMOHO θ , μ₁ β₁MOHO^2 ρ₁MOHO, μ₂ β₂MOHO^2 ρ₂MOHO end u incident ex substitute plane pMOHO θp , ηMOHO θp , 1.0 , ω ωp, ı im u reflected ex substitute plane pMOHO θp , ηMOHO θp , SHAᵣ ex θp , ω ωp, ı im u transmitted ex substitute plane pMOHO θp , isequal imag ηₜMOHO θp , 0.0 ? ηₜMOHO θp ηₜMOHO θp , SHAₜ ex θp , ω ωp, ı im md\" Plots\" function plot reflectivity A, θgrid, title \"\" degθ rad2deg. θgrid fig Plot Layout title title, polar attr angularaxis direction \"clockwise\", sector 0, 90 , radialaxis range 2, 2 , add trace fig, scatterpolar r abs. A. θgrid , theta degθ, mode \"lines\", name \"Abs\" add trace fig, scatterpolar r real. A. θgrid , theta degθ, mode \"lines\", name \"Real\" add trace fig, scatterpolar r imag. A. θgrid , theta degθ, mode \"lines\", name \"Imag\" add trace fig, barpolar r 3.5, , theta rad2deg θp , width 2 , name \"Animation\", marker color \" E4FF87\" , marker line color \"black\", marker line width 1, opacity 0.5 , relayout fig, height 300, width 350, PlutoPlotly.plot fig end TwoColumn md\"\"\" plot reflectivity SHAᵣ ex, θgrid, \"Reflection Coefficient\" \"\"\", md\"\"\" plot reflectivity SHAₜ ex, θgrid, \"Transmission Coefficient\" \"\"\" function plot planewave ui, ur, ut, t1 0 we need to discretize space before plotting xgrid range 200, stop 200, length 200 zgrid bottom range 0, stop 200, length 100 zgrid top range 200, stop 0, length 100 substitute imaginary unit ui, ur, ut map ui, ur, ut do ⋅ substitute ⋅, ı im end build functions reflected and incident uip, urp map ui, ur do ⋅ fn build function ⋅, x, z, t, expression Val false real fn x, z, t1 for z in zgrid top, x in xgrid end utp let fn build function ut, x, z, t, expression Val false real fn x, z, t1 for z in zgrid bottom, x in xgrid end \"Transmitted\" ∉ plot waves && fill utp, 0.0 \"Incident\" ∉ plot waves && fill uip, 0.0 \"Reflected\" ∉ plot waves && fill urp, 0.0 U cat urp uip, utp, dims 1 cmax max maximum abs, U , maximum abs, U fig Plot Layout yaxis autorange \"reversed\", yaxis attr scaleanchor \"x\" , width 350, height 350, uirevison 1, dragmode \"drawopenpath\", newshape line color \"black\", title \"SH Wavefield\", shapes line xref \"x\", yref \"y\", x0 200, y0 0, x1 200, y1 0, line attr color \"yellow\", width 3, , , , config PlotConfig displayModeBar false add trace fig, PlutoPlotly.heatmap z U, x xgrid, y vcat zgrid top, zgrid bottom , colorscale \"seismic\", zmin cmax, zmax cmax, add trace fig, scatter x 100 , y 20 , text \"Boundary\" , mode \"text\", showlegend false, textfont attr color \"yellow\", size 15, family \"Arail\", add trace fig, scatter x 150, 150 , y 150, 150 , text L\" β₁,ρ₁ \", L\" β₂,ρ₂ \" , mode \"text\", showlegend false, textfont attr color \"yellow\", size 15, family \"Arail\", plot fig end TwoColumn md\"\"\" plot planewave u incident ex, u reflected ex, u transmitted ex, mod tplot, 10 \"\"\", Markdown.MD Markdown.Admonition \"observe\", \"Observations\", md\"\"\" The angle of incidence is greater than the critical angle. The amplitude of the inhomogeneous waves exponentially decays as they move away from the boundary. There is a phase change in the reflected waves. The exponential decay is a function of the angular frequency. \"\"\" md\"\"\" TODO Phase Vs. Angle Plots \"\"\" "},{"url":"pointsource/Lamb_problem/","title":"Lamb's Problem","tags":["pointsource"],"text":" A Pluto.jl notebook v0.19.46 frontmatter title \"Lamb's Problem\" layout \"layout.jlhtml\" tags \"pointsource\" description \"Superposition of planewaves\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end using QuadGK, Bessels, PlutoPlotly, FFTW, Symbolics, SpecialFunctions, PlutoUI, ProgressLogging using Groebner, Nemo, Statistics TableOfContents md\"\"\" Lamb's Problem — Reflectivity Method Lamb's Problem is a classical problem in seismology and geophysics that involves understanding the response of an elastic half space to a point source, such as an earthquake or an explosion. The notebook leverages `QuadGK` package to perform numerical integration. The Reflectivity Method is a powerful technique used in seismology to model the propagation of seismic waves in layered media. It involves calculating the reflection and transmission coefficients of seismic waves at each interface between different layers. By superimposing these plane waves, the method can simulate the wavefield generated by a point source in a stratified medium. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\" Conical Wave\" function get vertical wavenumber c, p c2 abs2 c ξ if inv c2 abs2 p sqrt inv c2 abs2 p else im sqrt abs2 p inv c2 end return ξ end begin function conical wave p, ωgrid, x, y, z, c, h r sqrt. abs2. x abs2. y ξ get vertical wavenumber c, p return Bessels.besselj0. ωgrid . p . r . exp. im . ωgrid . ξ . h . z . p ξ end function conical wave p, ωgrid, x, y, z, c1, c2, h r sqrt. abs2. x abs2. y ξ get vertical wavenumber c1, p η get vertical wavenumber c2, p return Bessels.besselj0. ωgrid . p . r . exp. im . ωgrid . ξ . h . η . z . p ξ end end md\" Medium\" media α₁ 5.0, α₂ 7.0, β₁ 3.0, β₂ 5.0, ρ₁ 3.0, ρ₂ 7.0 md\" Derive Reflection Coefficients\" variables ω Real ξ₁ ν₁ ξ₂ ν₂ x Real y Real z Real p r Real λ₁ Real μ₁ Real λ₂ Real μ₂ Real t Real syms α₁ β₁ ρ₁ α₂ β₂ ρ₂ variables Aₚ Aₛ Bₚ Bₛ variables ı plane wave p, η, A A exp ı ω t p x η z incident potential plane wave p, ξ₁, 1.0 reflected P potential plane wave p, ξ₁, Aₚ reflected S potential plane wave p, ν₁, Aₛ transmitted P potential plane wave p, ξ₂, Bₚ transmitted S potential plane wave p, ν₂, Bₛ begin Dx Differential x Dz Differential z end begin uxInc expand derivatives. Dx incident potential uzInc expand derivatives. Dz incident potential end begin uxRefP expand derivatives. Dx. reflected P potential uzRefP expand derivatives. Dz. reflected P potential uxRefS expand derivatives. Dz. reflected S potential uzRefS expand derivatives. Dx. reflected S potential end begin uxTransP expand derivatives. Dx. transmitted P potential uzTransP expand derivatives. Dz. transmitted P potential uxTransS expand derivatives. Dz. transmitted S potential uzTransS expand derivatives. Dx. transmitted S potential end σzz1 expand derivatives λ₁ . Dx. uxInc uxRefP uxRefS . λ₁ 2 μ₁ . Dz. uzInc uzRefP uzRefS σzz2 expand derivatives λ₂ . Dx. uxTransP uxTransS . λ₂ 2 μ₂ . Dz. uzTransP uzTransS σxz1 expand derivatives. μ₁ . Dx. uzInc uzRefP uzRefS . μ₁ . Dz. uxInc uxRefP uxRefS σxz2 expand derivatives. μ₂ . Dx. uzTransP uzTransS . μ₂ . Dz. uxTransP uxTransS Ux constraint uxInc uxRefP uxRefS uxTransP uxTransS Uz constraint uzInc uzRefP uzRefS uzTransP uzTransS Ux z0 simplify substitute Ux constraint, z 0 ω ı exp ı ω t p x Uz z0 simplify substitute Uz constraint, z 0 ω ı exp ı ω t p x σzz constraint σzz1 σzz2 σzz z0 simplify substitute σzz constraint, z 0, ı^2 1 ω^2 exp ı ω t p x σxz constraint σxz1 σxz2 σxz z0 simplify substitute σxz constraint, ı^2 1, z 0 ω^2 exp ı ω t p x function subs ex, media α₁, α₂, β₁, β₂, ρ₁, ρ₂ media ex simplify substitute ex, ı^2 1, λ₁ ρ₁ α₁^2 2 β₁^2 , μ₁ β₁^2 ρ₁, λ₂ ρ₂ α₂^2 2 β₂^2 , μ₂ β₂^2 ρ₂, ξ₁^2 1 α₁^2 p^2 , ξ₂^2 1 α₂^2 p^2 , ν₁^2 1 β₁^2 p^2 , ν₂^2 1 β₂^2 p^2 ex simplify substitute ex, α₁ α₁, α₂ α₂, β₁ β₁, β₂ β₂, ρ₁ ρ₁, ρ₂ ρ₂ return ex end function get A f, p1, media α₁, α₂, β₁, β₂, ρ₁, ρ₂ media ξ₁p get vertical wavenumber α₁, p1 ξ₂p get vertical wavenumber α₂, p1 ν₁p get vertical wavenumber β₁, p1 ν₂p get vertical wavenumber β₂, p1 return Complex Float64 f p1, ξ₁p, ξ₂p, ν₁p, ν₂p ex simplify substitute ex, p end function solve linear AB media constraints σzz z0, σxz z0, Ux z0, Uz z0 Avec Symbolics.symbolic linear solve constraints, Aₚ, Bₚ, Aₛ, Bₛ Avec Symbolics.symbolic solve constraints, Aₚ, Bₚ, Aₛ, Bₛ Avec subs Dict string key subs Avec 1 key , media for key in keys Avec 1 end begin Avec solve linear AB media Afunctions vec Dict string key build function Avec key , p, ξ₁, ξ₂, ν₁, ν₂, expression Val false for key in keys Avec end md\" Sommerfeld Integral\" struct Direct end struct Preflect end struct Sreflect end md\"\"\"Select the term bind plot phase confirm Select Direct \"Direct\", Preflect \"Reflected P\", Sreflect \"Reflected S\" \"\"\" begin function get phase Direct, p, param, media, h return conical wave p, param.Ω, param.X, param.Y, param.Z, media.α₁ 1e 3, 0.0 end function get phase Preflect, p, param, media, h A get A Afunctions vec \"Aₚ\" , p, media return A conical wave p, param.Ω, param.X, param.Y, param.Z, media.α₁ 1e 3, h end function get phase Sreflect, p, param, media, h A get A Afunctions vec \"Aₛ\" , p, media return A conical wave p, param.Ω, param.X, param.Y, param.Z, media.α₁ 1e 3, media.β₁ 1e 3, h end end function get wavefield param, H1, media, phase U im param.Ω . param.W . quadgk 0, 3 do p return get phase phase, p, param, media, H1 end 1 return U end md\" Seismograms\" seismograms param let Nt 1024 freq snapshot 1.0 tgrid range 0, 200, length Nt ωgrid collect rfftfreq Nt, inv step tgrid 2 pi f0 freq snapshot ω0 2 pi f0 xgrid collect range 100, 500, length 10 ΩX collect Iterators.product ωgrid, xgrid Ω vec first. ΩX X vec last. ΩX Y fill 0.0, length X Z fill 0, length X W . exp 0.1 Ω ω0 ^2 Nt, Ω, X, Y, Z, W, xgrid, tgrid, ωgrid, ω0, f0 end time conical wave 0.0, seismograms param.Ω, seismograms param.X, seismograms param.Y, seismograms param.Z, media.α₁ 1e 3, 0.0 H1 100.0 seismograms irfft reshape get wavefield seismograms param, H1, media, plot phase , length seismograms param.ωgrid , , seismograms param.Nt, 1 let U seismograms Umaxclip maximum abs, U 0.01 plot heatmap y seismograms param.tgrid, x seismograms param.xgrid, z U, zmin Umaxclip, zmax Umaxclip, colorscale seismic, , Layout title \"Seismograms\", width 300, yaxis autorange \"reversed\", xaxis attr title \"distance to receiver\" , yaxis attr title \"time s \" end md\" Snapshot\" snapshot param let N 101 freq snapshot 1.0 zgrid range 5, stop 99, length N xgrid range 200, stop 200, length N ZX collect Iterators.product zgrid, xgrid Z vec first. ZX X vec last. ZX Y fill 0.0, length X Ω fill 2 pi freq snapshot, length X W fill 1.0, length X X, Y, Z, Ω, W, N, xgrid, zgrid end snapshot reshape get wavefield snapshot param, H1, media, plot phase , snapshot param.N, snapshot param.N plot contour x snapshot param.xgrid, y snapshot param.zgrid, z log. abs. snapshot , Layout title \"Radiation\", yaxis autorange \"reversed\", height 300, width 650 md\" Appendix\" md\"\"\" To Do Use in place functions while performing numerical integration for speedup Better snapshots time dependent to visualize generation of e.g., headwaves Plot displacement field, instead of potentials Add free surface to get Rayleigh waves? Response from a stack of layers... \"\"\" md\"\"\" References Fuchs, K., and Gerhard Müller. \"Computation of synthetic seismograms with the reflectivity method and comparison with observations.\" Geophysical Journal International 23.4 1971 417 433. \"\"\" "},{"url":"pointsource/lame-theorem/","title":"Lamé's Theorem","tags":["pointsource"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Lamé's Theorem\" layout \"layout.jlhtml\" tags \"pointsource\" description \"Are you in the near field with P and S wave radiation? Don't worry, the response at your station has a higher order discontinuity than in the far field.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using SpecialFunctions using SymbolicUtils using LinearAlgebra using PlutoTeachingTools using PlutoPlotly using PlutoTest using Latexify using PlutoUI using StatsBase using Distributions using Meshes end ChooseDisplayMode TableOfContents md\"\"\" Lamé's Theorem The elastic wave equation turns into simpler equations for potentials in the case of an unbounded, isotropic and homogeneous medium. This interactive notebook delves into the fundamental concepts of near field and far field elastic wave radiation that emerge from seismic sources. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"Theorem\", TwoColumnWideLeft md\"\"\" If the displacement field \\bf u \\bf u \\bf x , t satisfies, \\rho\\ddot \\bf u \\bf f \\lambda 2\\mu \\nabla \\nabla\\cdot\\bf u \\mu\\nabla \\times \\nabla \\times \\bf u , then ∃ potentials \\phi and \\psi for \\bf u with properties \\bf u \\nabla\\phi \\nabla \\times \\psi \\nabla\\cdot\\psi 0 \\rho\\ddot \\phi f 1 \\lambda 2\\mu \\nabla^2\\phi \\rho\\ddot \\psi \\mathbf f 2 \\mu \\nabla^2\\psi \"\"\", md\"\"\" Helmholtz potentials the body force and initial values of \\bf u and \\dot \\bf u satisfy \\bf f ∇f 1 ∇ × \\bf f 2 , \\nabla\\cdot\\bf f 2 0 \\bf u \\bf x , 0 ∇ u 1 ∇ × \\bf u 2 \\bf \\dot u \\bf x , 0 ∇ \\dot u 1 ∇ × \\bf \\dot u 2 \\nabla\\cdot\\bf f 2 0 , \\nabla\\cdot\\bf u 2 0 , \\nabla\\cdot\\bf \\dot u 2 0 \"\"\" md\"The wavefield's analytical expression which dynamically adjusts based on the chosen parameters above is\" md\"\"\" Notation To begin, we will introduce the variables that will be utilized throughout this notebook, and we will construct spatial and temporal differential operators. \"\"\" syms x Real y Real z Real spatial coordinates 𝐱 x, y, z spatial coordinate vector syms t Real ω Real time and angular frequency syms α β ρ P and S wave velocities, mass density r sqrt sum 𝐱 .^ 2 distance from the origin, where the source is placed begin Dx Differential x Dy Differential y Dz Differential z Dt Differential t Dr Differential r end ∇ Dx, Dy, Dz md\"\"\" P Radiation We shall now study P far field radiation due to body force, e.g., an impulsive force in the x direction. We now recall that one of the components of the displacement field is \\nabla \\phi , \\phi is the P potential. \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" The curl of the P component of the displacement field is zero only when \\frac 1 r^2 terms can be ignored, i.e., far away from the source. \"\"\" md\"\"\" Now, let's check if this component of the displacement field is like \"P waves\" with particle motion along the radial direction. When the source is at the origin, 𝐱 is a vector in the direction from the source. \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"Longitudinal Waves\", md\"\"\" The far field P displacement field at any given location 𝐱 has a direction parallel to the direction from the source. \"\"\" md\"\"\" S Radiation We shall now study S far field radiation due to body force. \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"\", md\"\"\" The divergence of the S component of the displacement field is zero only when \\frac 1 r^2 terms can be ignored, i.e., far away from the source. \"\"\" Markdown.MD Markdown.Admonition \"warning\", \"Transverse Waves\", md\"\"\" The far field S displacement field at any given location 𝐱 has a direction perpendicular to the direction from the source. \"\"\" function curl v vx v 1 vy v 2 vz v 3 curl field Dy vz Dz vy , Dz vx Dx vz , Dx vy Dy vx return Symbolics.simplify. expand derivatives. curl field end function divergence v vx v 1 vy v 2 vz v 3 div field Dx vx Dz vz Dy vy return Symbolics.simplify. expand derivatives. div field end md\"\"\" Understanding Nearfield Radiation We shall now look at the derivative w.r.t. the radial distance r of the monochromatic potential field. \"\"\" ϕ 1 r sin ω t r α Dx ϕ | expand derivatives md\"\"\" Notice that the far field term contains a time derivative of the forcing term. Lets plot the time series. \"\"\" md\"\"\" Appendix \"\"\" default plotly template plotly dark md\"Need some structs for multiple dispatch\" begin struct X end struct Y end struct Z end struct Pfar end struct Sfar end struct Near end struct Gaussian end struct Monochromatic end SourceType Union Gaussian,Monochromatic end begin derivative X, ex expand derivatives Dx ex derivative Y, ex expand derivatives Dy ex derivative Z, ex expand derivatives Dz ex end md\"\"\" Displacement Field The displacement due to, for example, a body force X 0 t applied in the x 1 direction at the origin is composed of 3 terms the first term is the near field term which is composed of both P and S wave motions, the second term is the P wave far field term and the third term is the S wave far field term. The i th component of the field is given by ```math u i \\mathbf x ,t \\frac 1 4\\pi\\rho \\left \\frac \\partial^2 \\partial x i \\partial x 1 \\frac 1 r \\right \\int r \\alpha ^ r \\beta \\tau X 0 t \\tau \\,d\\tau \\frac 1 4\\pi\\rho\\alpha^2r \\left \\frac \\partial r \\partial x i \\frac \\partial r \\partial x 1 \\right X 0\\left t \\frac r \\alpha \\right ``` ```math \\frac 1 4\\pi\\rho\\beta^2r \\left \\delta i1 \\frac \\partial r \\partial x i \\frac \\partial r \\partial x 1 \\right X 0\\left t \\frac r \\beta \\right , ``` where, \\rho is the density of the medium, \\alpha is the P wave velocity, \\beta is the S wave velocity, r is the distance between the source and receiver, \\tau is the convolution variable for time and \\delta i1 is the Kronecker Delta function. \"\"\" begin compute distance r, given receiver at xr, yr, zr and source at xs, ys, zs rad xr, yr, zr, xs, ys, zs sqrt xr xs ^2 yr ys ^2 zr zs ^2 invrad xr, yr, zr, xs, ys, zs inv rad xr, yr, zr, xs, ys, zs derivative of r w.r.t. x drad X, xr, yr, zr, xs, ys, zs, xr xs rad xr, yr, zr, xs, ys, zs, derivative of r w.r.t. y drad Y, xr, yr, zr, xs, ys, zs, yr ys rad xr, yr, zr, xs, ys, zs, derivative of r w.r.t. z drad Z, xr, yr, zr, xs, ys, zs, zr zs rad xr, yr, zr, xs, ys, zs, far field P wave function get displacement Nothing, Pfar, xr, yr, zr, xs, ys, zs, rc Union X,Y,Z , sc Union X,Y,Z , ρ, strength 1.0 return drad rc, xr, yr, zr, xs, ys, zs, drad sc, xr, yr, zr, xs, ys, zs, invrad xr, yr, zr, xs, ys, zs, strength inv 4 pi ρ α α end far field S wave function get displacement Nothing, Sfar, xr, yr, zr, xs, ys, zs, rc Union X,Y,Z , sc Union X,Y,Z , ρ, strength 1.0 return isequal rc, sc drad rc, xr, yr, zr, xs, ys, zs, drad sc, xr, yr, zr, xs, ys, zs, invrad xr, yr, zr, xs, ys, zs, strength inv 4.0 pi ρ β β end dc is derivative component of Pfar and Sfar useful for moment tensor solutions get displacement dc Union X,Y,Z , ps Union Pfar,Sfar , xr, yr, zr, xs, ys, zs, rc, sc, ρ, c, strength get displacement nothing, ps, xr, yr, zr, xs, ys, zs, rc, sc, ρ, c, strength drad dc, xr, yr, zr, xs, ys, zs, near field function get displacement Nothing, Near, xr, yr, zr, xs, ys, zs, rc Union X,Y,Z , sc Union X,Y,Z , ρ, strength 1.0 return derivative rc, derivative sc, invrad xr, yr, zr, xs, ys, zs strength inv 4 pi ρ end end md\"\"\" Forcing We consider two types of sources in this notebook 1 monochromatic source 2 Gaussian pulse. \"\"\" begin σ2 5 control std for Gaussian source f Gaussian, t exp t^2 σ2 work with retarded time later f Monochromatic, t sin ω t f1 Monochromatic, t cos ω t function f st Gaussian, Near, t, xr, yr, zr, xs, ys, zs computes retarded times for P and S internally, using α and β tp rad xr, yr, zr, xs, ys, zs α ts rad xr, yr, zr, xs, ys, zs β return 0.5 sqrt σ2 pi erf t tp sqrt σ2 erf t tp sqrt σ2 0.5 σ2 f st, t tp f st, t ts end function f st Monochromatic, Near, t, xr, yr, zr, xs, ys, zs computes retarded times for P and S internally, using α and β tp rad xr, yr, zr, xs, ys, zs α ts rad xr, yr, zr, xs, ys, zs β return f st, t tp tp ω f1 st, t tp f st, t ts ts ω f1 st, t ts inv ω inv ω end function f st SourceType, Pfar, t, xr, yr, zr, xs, ys, zs tp rad xr, yr, zr, xs, ys, zs α f st, t tp end function f st SourceType, Sfar, t, xr, yr, zr, xs, ys, zs ts rad xr, yr, zr, xs, ys, zs β f st, t ts end include the sourcing in g function get displacement sourcetype, dc, ps Union Pfar,Sfar,Near , xr, yr, zr, xs, ys, zs, rc Union X,Y,Z , sc Union X,Y,Z , ρ, strength return get displacement dc, ps, xr, yr, zr, xs, ys, zs, rc, sc, ρ, strength f sourcetype, ps, t, xr, yr, zr, xs, ys, zs end end upx get displacement nothing, Pfar , x, y, z, 0, 0, 0, X , Y , ρ, 1.0 upy get displacement nothing, Pfar , x, y, z, 0, 0, 0, Y , Y , ρ, 1.0 upz get displacement nothing, Pfar , x, y, z, 0, 0, 0, Z , Y , ρ, 1.0 up upx, upy, upz curl up cross 𝐱, up pradiation sqrt sum abs2. upx, upy, upz usx get displacement nothing, Sfar , x, y, z, 0, 0, 0, X , X , ρ, 1.0 Dx usx | expand derivatives usy get displacement nothing, Sfar , x, y, z, 0, 0, 0, Y , X , ρ, 1.0 usz get displacement nothing, Sfar , x, y, z, 0, 0, 0, Z , X , ρ, 1.0 sradiation sqrt sum abs2. usx, usy, usz us usx, usy, usz divergence us | Symbolics.simplify dot 𝐱, us | Symbolics.simplify substitute dot 𝐱, us , sqrt x^2 y^2 z^2 ^2 x^2 y^2 z^2 | Symbolics.simplify md\" Seismogram\" md\" UI\" md\"Some constants which are not in the main UI\" α1 4 in km s β1 2 in km s ρ1 5e12 kg km3 md\" Discretize\" md\"Before plotting, we should discretize the space time and ensure a small length to render 3D plots faster, especially when making changes.\" begin distances are in km Don't choose an odd number of grid points here, due to nan values at 0,0,0 xgrid range 100, stop 100, length 26 zgrid xgrid ygrid xgrid end ThreeColumn md\"\"\" bind sample receiver Button \"Sample a receiver\" within radius \"\"\", md\"\"\" bind rmax plot Slider round. range 0, stop maximum abs, xgrid , length 100 , digits 2 , show value true, default maximum xgrid 2 and plot \"\"\", md\"\"\" bind plot seismogram field type MultiCheckBox Pfar \"P\", Sfar \"S\", Near \"Near\" , default Pfar , Sfar , Near , select all true \"\"\" begin sample receiver rx plot rand Uniform rmax plot, rmax plot ry plot rand Uniform rmax plot, rmax plot rz plot rand Uniform rmax plot, rmax plot end rz plot plot seismogram field type begin Xgrid3D first. Iterators.product xgrid, ygrid, zgrid Ygrid3D map x x 2 , Iterators.product xgrid, ygrid, zgrid Zgrid3D last. Iterators.product xgrid, ygrid, zgrid xgrid2 range 100, stop 100, length 100 Xgrid2D first. Iterators.product xgrid2, xgrid2 Zgrid2D last. Iterators.product xgrid2, xgrid2 end vertices boundary Meshes.Box Meshes.Point 1, 1, 1 , Meshes.Point 1,1,1 begin define a cube in R^3 points cube Meshes.Point3. coordinates. vertices boundary Meshes.Box Meshes.Point 1, 1, 1 , Meshes.Point 1,1,1 connec cube connect. 1,4,3,2 , 5,6,7,8 , 1,2,6,5 , 3,4,8,7 , 1,5,8,4 , 2,3,7,6 sphmesh refine refine SimpleMesh points cube, connec cube , CatmullClark , CatmullClark sphpts broadcast coordinates ∘ centroid, collect elements sphmesh n3 length sphpts end sphpts 1 1 tgrid range 0, stop 100.0 inv α1 , length 10 md\"\"\" Customize Radiation Visualization Adjust the visualization by modifying these parameters Choose the component of the displacement field with bind plot rc Select X \"X\", Y \"Y\", Z \"Z\" , select the force density component using bind plot sc Select X \"X\", Y \"Y\", Z \"Z\" , set the forcing source type via bind plot source type Select Monochromatic \"Monochromatic\", Gaussian \"Gaussian\" , default Gaussian , pick the field type with bind plot field type Select Pfar \"P\", Sfar \"S\", Near \"Near Field\" , adjust angular frequency for monochromatic sources with bind ω1 Slider range 0.2, stop 1, length 9 , show value true, default 0.5 , and modify the time instance using bind t forw Slider 5 length tgrid , default 7, show value true . These controls allow you to explore different radiation patterns below. \"\"\" wavefield get displacement plot source type, nothing, plot field type, x, y, z, 0, 0, 0, plot rc, plot sc, ρ, 1e20 get displacement plot source type, nothing, Near , x, y, z, 0, 0, 0, X , plot sc, ρ, 1 | Symbolics.simplify function get seismogram tgrid, sourcetype, dc, xr, yr, zr, xs, ys, zs, sc Union X,Y,Z , strength, plot seismogram field type ex map X , Y , Z do rc mapreduce , plot seismogram field type do ps get displacement sourcetype, nothing, ps, x, y, z, xs, ys, zs, rc, sc, ρ, strength end end return map ex do exp map tgrid do t1 substitute exp, t t1,ρ ρ1,α α1,β β1, ω ω1, x xr, y yr, z zr end end end md\"\"\" Customize Radiation Visualization Adjust the visualization by modifying these parameters Choose the forcing source type via bind plot source type2 Select Monochromatic \"Monochromatic\", Gaussian \"Gaussian\" , adjust angular frequency for monochromatic sources with bind ω2 Slider range 0.2, stop 1, length 9 , show value true, default 0.5 , and modify the time instance using bind t forw2 Slider 5 length tgrid , default 7, show value true . These controls allow you to explore the differences between near field and far field terms. \"\"\" example field expand derivatives Dr f plot source type2, t r α r md\"\"\" Notice that `example field`, has two terms one that decays as \\frac 1 r^2 near field term and the far field term that decays as \\frac 1 r . ...at a distance of r 100 , the far field term is stronger by a factor of round ω2 α1 100 , digits 3 , which is 2π × number of wavelengths between the source and the receiver . Weak enough? Let's plot the near field and far field terms separately after building the necessary functions. \"\"\" tgrid seismogram range 50.0 inv β1 , stop 300.0 inv β1 , length 1000 seismogram get seismogram tgrid seismogram, plot source type, nothing, rx plot, ry plot, rz plot, 0, 0, 0, plot sc, 1e20, plot seismogram field type choosing ry 1, rz 1 to avoid source location 0,0,0 md\"These functions build and discretize a given expression over spatial and temporal grids. Arguments `ex` A symbolic expression representing the function to be discretized. Returns A 3D array representing the discretized field of the provided expression over spatial and temporal grids. P and S wave velocities and angular frequency will be substituted before discretizing.\" function build and discretize3D ex test plot build function ex, x, y, z, t, α, β, ρ, ω, expression Val false field map tgrid do t1 map Xgrid3D, Ygrid3D, Zgrid3D do x, y, z test plot x, y, z, t1, α1, β1, ρ1, ω1 ω1 is used for 3D end end return field end function build and discretize2D ex fix y 0 test plot build function ex, x, y, z, t, α, β, ρ, ω, expression Val false field map tgrid do t1 map Xgrid2D, Zgrid2D do x, z test plot x, 0.0, z, t1, α1, β1, ρ1, ω2 ω2 is used for 2D end end return field end md\" Plots\" md\"This is a function that creates a 3D volume plot after discretizing the wavefield expression at a given time instance global variable `t forw`.\" cone plot let r div maximum xgrid , 2 c plot field type Pfar ? α1 β1 t r c sphpts1 r sphpts seismograms map sphpts1 do sphpt get seismogram t , Monochromatic , nothing, sphpt 1 , sphpt 2 , sphpt 3 , 0, 0, 0, plot sc, 1e20, plot field type end u map seismograms do s s 1 1 end v map seismograms do s s 2 1 end w map seismograms do s s 3 1 end x getindex. sphpts1, 1 y getindex. sphpts1, 2 z getindex. sphpts1, 3 x, y, z, u, v, w end plot cone x cone plot.x, y cone plot.y, z cone plot.z, u cone plot.u, v cone plot.v, w cone plot.w, sizeref 2, showscale false, colorscale colors.Blues 8, , Layout scene attr domain x 0, 1 , camera eye attr x 1.57, y 1.36, z 0.58 function add field fig, field, t forw colorbar axis lims are chosen keeping all the time steps in mind, so that the attenuation can be observed cmax maximum map field do f return maximum abs, f end 0.1 select time instance values field t forw add trace fig, PlutoPlotly.volume x Xgrid3D , y Ygrid3D , z Zgrid3D , value values , isomin cmax, isomax cmax, colorscale \"RdBu\", opacity 0.1, needs to be small to see through all surfaces surface count 30, needs to be a large number for good volume rendering caps attr x show false, y show false, z show false, x fill 1 , opacityscale \"extremes\" end function plot ex wavefronts3D ex, title \"Elastic wave Radiation\" field build and discretize3D ex layout Layout uirevision 1, scene attr xaxis attr nticks 3, range 100, 100 , yaxis attr nticks 3, range 100, 100 , zaxis attr nticks 3, range 100, 100 , , width 650, margin attr r 20, l 10, b 10, t 10 , title attr text title, y 0.9, x 0.15, fig Plot layout add field fig, field, t forw N 10 add trace fig, scatter3d x rx plot , y ry plot , z rz plot , mode \"markers text\", marker color \"black\", marker size 3, text \"receiver\" add trace fig, scatter3d x 0 , y 0 , z 0 , mode \"markers text\", marker color \"black\", marker size 3, text \"source\" return fig end plot plot ex wavefronts3D wavefield function plot ex wavefronts2D nearex, farex nearfield build and discretize2D nearex farfield build and discretize2D farex cmax near maximum map nearfield do f return maximum abs, f end 0.006 cmax far maximum map farfield do f return maximum abs, f end 0.1 fig Plot Layout yaxis autorange \"reversed\", height 300, width 650, title attr font size 12, , font attr size 10 , yaxis attr scaleanchor \"x\" , Subplots horizontal spacing 0.3, rows 1, cols 2, subplot titles \"Near Field\" \"Far Field\" add trace fig, heatmap x xgrid2, y xgrid2, z nearfield t forw2 , zmin cmax far, zmax cmax far, colorscale \"seismic\", showscale true, colorbar x 0.35 , row 1, col 1 add trace fig, heatmap x xgrid2, y xgrid2, z farfield t forw2 , zmin cmax far, zmax cmax far, colorscale \"seismic\", showscale true, colorbar x 1.0 , row 1, col 2 return PlutoPlotly.plot fig end plot ex wavefronts2D first arguments example field , last arguments example field function plot seismogram seismogram fig PlutoPlotly.Plot Layout height 200, width 500, title \"Displacement at x, y, z round rx plot, digits 3 , round ry plot, digits 3 , round rz plot, digits 3 \", show legend true, font attr size 10 tgrid tgrid seismogram add trace fig,PlutoPlotly.scatter x tgrid,y seismogram 1 ,line width 2,mode \"lines\",line color \"red\",name \"X\" add trace fig,PlutoPlotly.scatter x tgrid,y seismogram 2 ,line width 2,mode \"lines\",line color \"blue\",name \"Y\" add trace fig,PlutoPlotly.scatter x tgrid,y seismogram 3 ,line width 2,mode \"lines\",line color \"yellow\",name \"Z\" PlutoPlotly.plot fig end plot seismogram seismogram md\"\"\" Inhomogeneous wave equation We can now define the wave operator of a scalar wave equation in three dimensions. \"\"\" L ϕ, α Dt Dt ϕ α^2 Dx Dx ϕ Dy Dy ϕ Dz Dz ϕ print the scalar wave equation latexify L u, α ~ δ x δ y δ z f t md\"\"\" Spherical waves We will now consider a monochromatic source sin function of space and time with amplitude A and parameters \\omega and K . \"\"\" Dt sin ω t | expand derivatives sphwav build function ϕ, r, t, α, ω, expression Val false gif Ppotential plot ex wavefronts3D ϕ, \"ϕ\" md\"\"\" Similarly, along y and z . \"\"\" bind body forces confirm PlutoUI.combine do Child components \"x\", \"y\", \"z\" s2 md\"\"\" \"x\" Child NumberField range 1, step 0.1, stop 1 , default 1 \"y\" Child NumberField range 1, step 0.1, stop 1 , default 0 \"z\" Child NumberField range 1, step 0.1, stop 1 , default 0 \"\"\" for is in 1 2 md\"\"\" Input Body Force Until now, we have considered a spherically symmetric field ϕ as P potential. According to Lame's theorem, the P potential should be generated using a curl free component of the forcing field. We refer the reader to Eq. 4.23 Aki Richards for a detailed derivation. Here we will just write down the final expressions. s2 1 \"\"\" end "},{"url":"pointsource/seismic-sources/","title":"Seismic Source Theory","tags":["pointsource"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Seismic Source Theory\" tags \"pointsource\" layout \"layout.jlhtml\" description \"Representation of the displacement field due to slip across fault planes in the source region.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using PlutoUI using PlutoTeachingTools using Symbolics using SymbolicUtils using LinearAlgebra using Einsum using PlutoHooks using PlutoPlotly using TikzPictures end ChooseDisplayMode TableOfContents md\"\"\" Seismic Source Theory This notebook provides a simple demonstration of the representation theorem and its use in seismic source theory. For internal sources, it derives expressions for seismic moment density tensor in the case of an isotropic elastic media, where a displacement discontinuity is assumed across two adjacent surfaces internal to a volume. | Fault Orientation | Slip | Measured Displacement| | | | | | bind fault input Radio \"1\", \"2\", \"3\" , default \"1\" | bind slip input Radio \"1\", \"2\", \"3\" , default \"2\" | bind measurement input Radio \"1\", \"2\", \"3\" , default \"1\" \"\"\" md\"The displacement field in the second state is given by integrating the moment tensor density over the source region, which constitutes of geologic faults or underground volume explosions.\" md\"\"\" Setting Up Two States \"\"\" variables x 1 3 md\" Displacement Fields Declaring symbols for vector displacement fields in the temporal frequency domain. \" variables u 1 3 v 1 3 md\" Body Force Densities Body force densities in both the states. For internal seismic sources, we assume that the body forces are absent in the case of the second state.\" variables f 1 3 h 1 3 md\" c ijkl The elastic constants for an isotropic medium are \\lambda and \\mu . These constants are identical for both the states, and their values at the source region affect the resultant displacement field.\" variables λ μ Ciso λ 2μ, λ, λ, 0, 0, 0 λ, λ 2μ, λ, 0, 0, 0 λ, λ, λ 2μ, 0, 0, 0 0, 0, 0, μ, 0, 0 0, 0, 0, 0, μ, 0 0, 0, 0, 0, 0, μ function get cijkl C C i isequal i, j 1 isequal i, j 9 i j , k isequal k, l 1 isequal k, l 9 k l for i in 1 3, j in 1 3, k in 1 3, l in 1 3 end ciso get cijkl Ciso md\" Strain Tensors\" md\" Stress Tensors\" md\"\"\" Betti's Theorem \"\"\" syms ∭ f ∬ f volume and surface integrals Bv1 dot u, h Bv2 dot v, f md\"\"\" Elastodynamic Green's Tensor We shall denote the spatial coordinate in the source region using \\xi . The ith component of the displacement field in the frequency domain, due to an impulsive force acting in the jth direction, is given by G ji \\xi, x . \"\"\" variables ξ 1 3 syms G₁₁ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₁₂ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₁₃ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₂₁ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₂₂ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₂₃ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₃₁ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₃₂ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ G₃₃ x₁, x₂, x₃, ξ₁, ξ₂, ξ₃ md\"These symbols look a bit clumsy, anyway, let us form the Green's tensor\" G G₁₁ x..., ξ... G₁₂ x..., ξ... G₁₃ x..., ξ... G₂₁ x..., ξ... G₂₂ x..., ξ... G₂₃ x..., ξ... G₃₁ x..., ξ... G₃₂ x..., ξ... G₃₃ x..., ξ... md\" Spatial Reciprocity Assuming homogeneous boundary conditions everywhere on S \\Sigma^ \\Sigma^ , we can show that\" G1 G₁₁ ξ..., x... G₂₁ ξ..., x... G₃₁ ξ..., x... G₁₂ ξ..., x... G₂₂ ξ..., x... G₃₂ ξ..., x... G₁₃ ξ..., x... G₂₃ ξ..., x... G₃₃ ξ..., x... G1 ~ G md\"\"\" Displacement Discontinuity \"\"\" variables v⁺ 1 3 v⁻ 1 3 md\" Appendix\" tikz ingredients \"tikz.jl\" ∇ Differential ξ 1 , Differential x 2 , Differential ξ 3 einsum eᵤ i, j 0.5 ∇ i u j ∇ j u i einsum σᵤ i, j ciso i, j, k, l eᵤ k, l einsum eᵥ i, j 0.5 ∇ i v j ∇ j v i einsum σᵥ i, j ciso i, j, k, l eᵥ k, l md\" UI\" fault normal map x isequal x, fault input , \"1\", \"2\", \"3\" Bs1 dot v, σᵤ fault normal | simplify Bs2 dot u, σᵥ fault normal | simplify ∭ Bv1 Bv2 ~ ∬ Bs1 Bs2 slip component map x isequal x, slip input , \"1\", \"2\", \"3\" measured component map x isequal x, measurement input , \"1\", \"2\", \"3\" iv comp findfirst measured component Bv1 sub substitute Bv1, u k G k, iv comp for k in 1 3 ... | expand derivatives Bs1 sub substitute Bs1, v k slip component k v⁺ k v⁻ k for k in 1 3 ..., u k G k, iv comp for k in 1 3 ... | expand derivatives v iv comp ~ ∬ Bs1 sub md\"\"\" Plots \"\"\" xyz Iterators.product X, Y, Z , X, Y, Z need an iterator for elements of moment tensor begin struct X end struct Y end struct Z end struct XY end struct YZ end struct XZ end end begin dcouple 0.5 half distance b w the elements of a force couple body force locations X dcouple, 0.0, 0.0 , dcouple, 0.0, 0.0 body force locations Y 0.0, dcouple, 0.0 , 0.0, dcouple, 0.0 body force locations Z 0.0, 0.0, dcouple , 0.0, 0.0, dcouple end collect forces just for plotting srclocs reshape cat body force locations eval x 2 for x in xyz ..., dims 1 , 1, 1, 9 2 function plot moment tensor normal ps Plot Layout scene attr xaxis range 5, 5 , yaxis range 5, 5 , zaxis range 5, 5 , xaxis title \"x m \", yaxis title \"y m \", zaxis title \"z m \", title \"Equivalent Force Distribution\" , margin attr l 0, r 0, b 0, t 0 , showlegend false, limits ps, x 5, 5 , y 5, 5 , z 5, 5 arrows ps, x vec getindex. srclocs, 1 , y vec getindex. srclocs, 2 , z vec getindex. srclocs, 3 , u vec getindex. srcstrength 1, 1, , 2 , v vec getindex. srcstrength 1, 2, , 2 , w vec getindex. srcstrength 1, 3, , 2 , line attr color black, width 0.05 , sizemode \"absolute\", sizeref 0.5, color black, Create points on the plane to form a grid x range 5, stop 5, length 50 y range 5, stop 5, length 50 xgrid first Iterators.product x, y ygrid last Iterators.product x, y Calculate z values for the plane using the plane equation z normal 1 . x1 . normal 2 . y1 . normal 3 for x1 in x for y1 in y Plot the plane add trace ps, surface x x, y y, z z add trace ps, cone x 1 , y 1 , z 1 , u 1 , v 1 , w 1 , sizeref 1, sizemode \"absolute\", , return plot ps end plot moment tensor 1, 1, 1 function plot volume u \" \", G false L1 L\"\"\" \\tikzset Pacman .pic \\shadedraw inner color gray,outer color gray 80 white,draw black,thick 1,1 node left, xshift 0.5cm, yshift 0.25cm 1 \\Sigma^ 5 2 arc 5 360 2 node above, xshift 0.5cm, yshift 0.7cm 4 \\Sigma^ cycle \\pic at 1,0 Pacman \\node at current bounding box 0.5cm, 1cm V \\node at current bounding box 2cm,1cm S \\node at current bounding box 0cm,2.5cm % u \"\"\" L2 L\"\"\" \\node label yellow 90 \\xi xi at 2,1 \\draw , yellow, thick node midway, above left x 2,1 to out 150,in 0 node midway, below, yshift 0.5cm G x, \\xi 0,0 \"\"\" if G return tikz.plot L1 L2 else return tikz.plot L1 end end function two state tikz TwoColumn md\"\"\" plot volume L\"\\mathrm State\\,I u, \\sigma u, f\", true \"\"\", md\"\"\" plot volume L\"\\mathrm State\\,II v, \\sigma v, h\", false \"\"\" end two state tikz "},{"url":"raytheory/eikonal-equation/","title":"eikonal-equation","tags":[],"text":" A Pluto.jl notebook v0.19.46 frontmatter using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using LinearAlgebra using PlutoUI using LaTeXStrings using PlutoTeachingTools using PlutoUI using Symbolics using SymbolicUtils using Einsum using PlutoPlotly using TikzPictures end ChooseDisplayMode TableOfContents variables A Real N Real F Real C Real L Real variables λ Real μ Real Ctrans A, A 2N, F, 0, 0, 0 A 2N, A, F, 0, 0, 0 F, F, C, 0, 0, 0 0, 0, 0, L, 0, 0 0, 0, 0, 0, L, 0 0, 0, 0, 0, 0, L Ciso map Ctrans do x substitute x, A λ 2μ, C λ 2 μ, N μ, F λ, L μ end variables u 1 3 vector displacement field x 1 3 g 1 3 p Real syms U₁ t U₂ t U₃ t syms x₁ x₂ x₃ syms f x₁, x₂, x₃ syms T x₁, x₂, x₃ f x... syms t U U₁ t , U₂ t , U₃ t U 2 syms ı ω variables e 1 3, 1 3 strain tensor function get cijkl C C i isequal i, j 1 isequal i, j 9 i j , k isequal k, l 1 isequal k, l 9 k l for i in 1 3, j in 1 3, k in 1 3, l in 1 3 end ciso get cijkl Ciso for isotropic einsum σiso i, j ciso i, j, k, l e k, l utrail1 exp ı ω t p dot s, x variables x 1 3 position vector ~ x, y, z D Differential x₁ , Differential x₂ , Differential x₃ D 1 u Dt Differential t einsum uddot i ciso i, j, k, l D j D l u k einsum uddot trail1 i ciso i, j, k, l D j D l T x₁, x₂, x₃ D 1 U 1 t T x 1 , x 2 , x 3 | expand derivatives U 1 x 1 Dt Dt f x 1 , x 2 , x 3 U k for k in 1 3 md\"\"\" Eikonal Equation Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" The stress tensor three dimensions is given by ```math \\sigma \\begin bmatrix \\sigma 11 & \\sigma 12 & \\sigma 13 \\\\ \\sigma 12 & \\sigma 22 & \\sigma 23 \\\\ \\sigma 13 & \\sigma 23 & \\sigma 33 \\\\ \\end bmatrix ``` | | | | | | | | | σ 11 bind σ11 Scrubbable 1 0.01 1, default 1 | σ 22 bind σ22 Scrubbable 1 0.1 1, default 0 | σ 33 bind σ33 Scrubbable 1 0.1 1, default 0.5 | | σ 12 bind σ12 Scrubbable 1 0.1 1, default 0.5 | σ 23 bind σ23 Scrubbable 1 0.1 1, default 0 | σ 13 bind σ13 Scrubbable 1 0.1 1, default 0 | which is symmetric. \"\"\" bind resample normal CounterButton \"Resample Imaginary Plane\" md\" UI and Plotting\" md\"\"\" Let us define the functions that we will be using in this notebook. \"\"\" σinput let σ11 σ12 σ13 σ12 σ22 σ23 σ13 σ23 σ33 end eigsigma eigen σinput nsample let resample normal n randn 3 n n . sqrt sum abs2, n end Tinput σinput nsample function plot3lines 1 v, color, name p1 scatter3d x 0, v 1 , y 0, 0 , z 0, 0 , mode \"lines\", name name, line attr color color , p2 scatter3d x 0, 0 , y 0, v 2 , z 0, 0 , mode \"lines\", name name, line attr color color , p3 scatter3d x 0, 0 , y 0, 0 , z 0, v 3 , mode \"lines\", name name, line attr color color , return p1, p2, p3 end function plot3lines 2 v1,v2,v3, color, name p1 scatter3d x 0, v1 1 , y 0, v1 2 , z 0, v1 3 , mode \"lines\", name name, line attr color color , p2 scatter3d x 0, v2 1 , y 0, v2 2 , z 0, v2 3 , mode \"lines\", name name, line attr color color , p3 scatter3d x 0, v3 1 , y 0, v3 2 , z 0, v3 3 , mode \"lines\", name name, line attr color color , return p1, p2, p3 end function stress plot p1 cone x 0 , y 0 , z 0 , u nsample 1 , v nsample 2 , w nsample 3 , name \"Surface Normal\", hoverinfo \"name\", showscale false, opacity 0.5, anchor \"tail\", color \"black\", colorscale colors.Blues 8, sizeref 0.5 p2 scatter3d x 0, nsample 1 , y 0, nsample 2 , z 0, nsample 3 , mode \"lines\", name \"Normal Vector\", line attr color \"gray\" , p3 plot3lines 1 Tinput, \"red\", \"Traction\" p4 plot3lines 2 collect eachcol eigsigma.vectors . eigsigma.values ..., \"blue\", \"Principal\" layout Layout scene camera eye attr x 0, y 0, z 0 , width 600, height 500, uirevision 1, scene attr xaxis attr nticks 10, range 1,1 , yaxis attr nticks 10, range 1,1 , zaxis attr nticks 10, range 1,1 , , return plot p1, p2, p3..., p4... , layout end stress plot md\"\"\" Appendix \"\"\" md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz 3dplot \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 105 30 \\tdplotsetrotatedcoords 00 30 0 \\begin scope tdplot rotated coords \\begin scope canvas is xy plane at z 0 \\fill gray,fill opacity 0.3 2, 3 rectangle 2,3 \\draw very thick 2,0 2,0 \\path 150 2 coordinate H 1.5,0 coordinate X \\pgflowlevelsynccm \\draw very thick, stealth,gray 0,0 30 1.5 \\end scope \\draw stealth H 1,0,0.2 node pos 1.3 H \\draw stealth X 0,1,0.2 node pos 1.3 X \\draw very thick, stealth 0,0,0 coordinate O 0,0,3 node right p \\end scope \\pgfmathsetmacro \\Radius 1.5 \\draw stealth O 2.5 \\Radius,0,0 node pos 1.15 spot 0 \\draw stealth O 0,3.5 \\Radius,0 node pos 1.15 spot 2 \\draw stealth O 0,0,2.5 \\Radius node pos 1.05 spot 1 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot plane normal TikzPicture L\"\"\" \\tdplotsetmaincoords 60 125 \\tikzset cube .style very thick,black , grid .style very thin,gray , axis .style ,blue,thick , %draw a grid in the x y plane \\foreach \\x in 0.5,0,...,2.5 \\foreach \\y in 0.5,0,...,2.5 \\draw grid \\x, 0.5 \\x,2.5 \\draw grid 0.5,\\y 2.5,\\y %draw the axes \\draw axis 0,0,0 3,0,0 node anchor west x 1 \\draw axis 0,0,0 0,3,0 node anchor west x 2 \\draw axis 0,0,0 0,0,3 node anchor west x 3 %draw the top and bottom of the cube \\draw cube 0,0,0 0,2,0 2,2,0 2,0,0 cycle \\draw cube 0,0,2 0,2,2 2,2,2 2,0,2 cycle %draw the edges of the cube \\draw cube 0,0,0 0,0,2 \\draw cube 0,2,0 0,2,2 \\draw cube 2,0,0 2,0,2 \\draw cube 2,2,0 2,2,2 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot scatter3d x x, y y, z z, mode \"lines\", name \"Plane\" , scatter3d x 0, normal vector 1 , y 0, normal vector 2 , z 0, normal vector 3 , mode \"lines markers\", name \"Normal Vector\", line attr color \"red\" plot scatter3d x x, y y, z z, mode \"lines\", name \"Plane\" TikzPicture L\"\"\" % Define the unit normal vector \\def\\nx 0.5 % x component of the normal vector \\def\\ny 0.5 % y component of the normal vector \\def\\nz 0.5 % z component of the normal vector % Define the plane equation ax by cz d \\def\\d 1 % Distance from the origin % Calculate the vertices of the small plane \\pgfmathsetmacro \\a 0.5 % Half the side length of the small plane % Calculate two vectors perpendicular to the normal vector using Gram Schmidt process \\pgfmathsetmacro \\ux \\ny \\pgfmathsetmacro \\uy \\nx \\pgfmathsetmacro \\uz 0 \\pgfmathsetmacro \\vx \\nx \\nz \\pgfmathsetmacro \\vy \\ny \\nz \\pgfmathsetmacro \\vz \\nx^2 \\ny^2 % Normalize the perpendicular vectors \\pgfmathsetmacro \\ulen sqrt \\ux \\ux \\uy \\uy \\uz \\uz \\pgfmathsetmacro \\vlen sqrt \\vx \\vx \\vy \\vy \\vz \\vz \\pgfmathsetmacro \\ux \\ux \\ulen \\pgfmathsetmacro \\uy \\uy \\ulen \\pgfmathsetmacro \\uz \\uz \\ulen \\pgfmathsetmacro \\vx \\vx \\vlen \\pgfmathsetmacro \\vy \\vy \\vlen \\pgfmathsetmacro \\vz \\vz \\vlen % Draw the coordinate axes \\draw 0,0,0 3,0,0 node anchor north east x \\draw 0,0,0 0,3,0 node anchor north west y \\draw 0,0,0 0,0,3 node anchor south z % Draw the small plane \\filldraw opacity 0.5 \\a \\ux , \\a \\uy , \\a \\uz \\a \\vx , \\a \\vy , \\a \\vz \\a \\ux , \\a \\uy , \\a \\uz \\a \\vx , \\a \\vy , \\a \\vz cycle % Draw the normal vector \\draw , thick, color red 0,0,0 \\nx,\\ny,\\nz \\node at \\nx,\\ny,\\nz anchor south west \\vec n \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" "},{"url":"raytheory/global-seismic-arrivals/","title":"Global Bodywave Arrivals","tags":["raytheory"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Global Bodywave Arrivals\" date \"2025 08 05\" tags \"raytheory\" description \"What is the arrival you are looking for?\" layout \"layout.jlhtml\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using PythonPlot pygui false end begin using CondaPkg CondaPkg.add pip \"obspy\" CondaPkg.add pip \"matplotlib\" end using PlutoUI using PythonCall PlutoUI.TableOfContents include definitions true md\"\"\" Global Bodywave Arrivals This notebook interactively visualizes global seismic bodywave arrivals using the TauP toolkit via Python in Julia. Users can select source depth and receiver distance to explore ray paths, phases, and travel times for various seismic waves. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Select Source Depth and Receiver Distance Receiver Distance ° bind receiver distance Slider 0.0 1.0 180.0, show value true, default 120 Source Depth km bind source depth Slider 0.0 10.0 700.0, show value true, default 20 \"\"\" md\" Appendix\" taup pyimport \"obspy.taup\" model taup.TauPyModel model \"iasp91\" arrivals model.get ray paths source depth, receiver distance phases arrival.name for arrival in arrivals bind selected phases MultiCheckBox phases, default phases 1 1 arrivals filtered model.get ray paths source depth, receiver distance, phase list selected phases let fig figure figsize 10, 10 arrivals filtered.plot rays plot type \"spherical\", fig fig, legend true, label arrivals false, plot all true, indicate wave type true fig.tight layout pad 15 fig end phases selected arrival.name for arrival in arrivals filtered traveltimes pyconvert Float64, arrival.time for arrival in arrivals filtered md\"\"\" Traveltime in seconds Dict pyconvert String, ph t for ph, t in zip phases selected, traveltimes \"\"\" md\"\"\" Credits https www.seis.sc.edu taup https www.seis.sc.edu taup https docs.obspy.org packages obspy.taup.html https docs.obspy.org packages obspy.taup.html \"\"\" "},{"url":"raytheory/ray-theory-eikonal-equation/","title":"Ray Theory and The Eikonal Equation","tags":["raytheory"],"text":" A Pluto.jl notebook v0.20.5 frontmatter title \"Ray Theory and The Eikonal Equation\" tags \"raytheory\" layout \"layout.jlhtml\" description \"This interactive notebook explores the Eikonal equation under the high frequency approximation and its applications in tracing seismic rays in heterogeneous Earth models.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using SymbolicUtils using LinearAlgebra using PlutoTeachingTools using PlutoPlotly using PlutoTest using Interpolations using Statistics using ProgressLogging using Latexify using PlutoUI using ImageFiltering using ForwardDiff using Einsum using Eikonal using DrWatson savename end TableOfContents ChooseDisplayMode md\"\"\" Ray Theory and The Eikonal Equation Seismic ray theory is a fundamental tool for understanding how high frequency seismic waves propagate through a smoothly varying Earth medium. It is essential for understanding the imaging of the Earth's interior using seismic data. This interactive notebook explores the Eikonal equation under the high frequency approximation and its applications in tracing seismic rays in heterogeneous Earth models. The derivation of the governing equations of ray theoretical methods and their numerical solutions are presented, with a focus on two dimensional scenarios that can be extended to 3D. An exciting feature of this notebook is that users can input any slowness function of and leverage Julia's automatic differentiation capability to compute the gradient of this function, which is crucial for ray tracing. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj, Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Enter the name of the slowness generating function bind slowness fn name confirm TextField default \"slowness prograde\" \"\"\" md\"\"\" Velocity increases linearly with depth. To use this function type `slowness linear` above. \"\"\" function slowness zlinear z, x return inv 2000.0 abs z 20.0 end function slowness gaussian z, x return inv 2000.0 4000.0 exp x 250 ^2 1e4 exp z 50 ^2 1e4 end function slowness custom z, x you can write a custom function, e.g., return inv 2000.0 abs z abs x end function slowness homogeneous z, x return inv 2000.0 end function slowness LVZ z, x velocity if z 30.0 2000.0 z 20.0 elseif 30.0 z 40.0 2000.0 else 2000.0 z 20.0 end return inv velocity end function slowness prograde z, x velocity if z 50.0 2000 z 10.0 elseif 50.0 z 60.0 6000.0 z 170.0 elseif z 60.0 3100.0 z 20.0 end return inv velocity end md\"\"\" Ansatz We shall assume a solution of the form \"\"\" syms U t syms ı md\"...with variables\" syms x Real z Real t Real ω Real y Real syms β x, z ρ x, z μ x, z syms T x, z A x, z travel time and amplitude A x,z ϕ A x, z exp ı ω t T x, z trail solution md\"...and the following operators.\" begin Dx Differential x Dz Differential z Dy Differential y Dt Differential t end D Dx, Dy, Dz L ϕ ρ x, z Dt Dt ϕ Dx μ x, z Dx ϕ Dz μ x, z Dz ϕ md\"Here, T denotes the travel time and A denotes the amplitude. Now, let's check the terms after substituting the solution \\phi into the scalar homogeneous wave equation.\" args Lϕ arguments simplify substitute simplify expand derivatives L ϕ , ı^2 1 md\"\"\" High frequency Approximation This approximation ignores the terms that are sufficiently small in the far field, i.e. when the high frequencies are considered. In this case, we shall divide the arguments obtained after substituting ϕ₂ in the 2 D wave equation with ω^2 , and ignore \\frac 1 ω^2 terms when \\omega is sufficiently large. \"\"\" map simplify, args Lϕ . ω^2 md\"\"\" This results in the 2D Eikonal equation. \"\"\" begin eik T Dx T x, z ^2 Dz T x, z ^2 1 β x, z ^2 eik T ~ 0 end md\"... and\" begin eikA A 2 dot Symbolics.gradient A x, z , x, z , Symbolics.gradient T x, z , x, z A x, z Dx Dx T x, z Dz Dz T x, z eikA A ~ 0 end tip md\"\"\" Note the similarity of the above Eikonal equation to the dispersion relation we derived using a plane wave solution of the homogeneous scalar wave equation. The magnitude of the wavenumber vector \\vec k should be equal to ω^2 α^2 , which also constrains the magnitude of the slowness vector \\vec s to 1 α^2 .\"\"\" tip md\"\"\"... when solving the Eikonal equation, we think of a local plane wave at x,z with corresponding slowness vector \\vec s x,z . Take a moment to realize that Dx T gives the x component of the slowness vector. \"\"\" md\"\"\" Wavefronts The function T x,y,z const. defines surfaces called wavefronts. For a medium with homogeneous elastic properties, these wavefronts are spherical. They can have arbitrary shapes in the presence of medium heterogeneities. \"\"\" md\"\"\" Raypath Tracing Lines perpendicular to the wavefronts i.e. T x,y,z const. surfaces are termed rays. In other words, rays are parallel to the gradient of the travel time function ∇T x,y,z . If \\hat s denoted the direction along \\nabla T , then ```math \\nabla T x,y,z \\vec s x,z |\\vec s x,z |\\hat s x,z , \\qquad\\qquad 1 ``` where |\\vec s | \\frac 1 α is the local slowness. We shall start this section by declaring the necessary symbols. \"\"\" begin syms s x Real, z Real Real slowness syms sx x Real, z Real Real slowness vector x component syms sz x Real, z Real Real ... end svec sx x, z , sz x, z slowness vector The Jacobian Matrix J Symbolics.jacobian svec, x, z md\"\"\" The journey along a ray begins at the source, where we choose the direction of the outgoing plane wavefronts \\hat s 0 . Denoting the source position with \\vec p 0 , we simply move along \\hat s 0 by an incremental length dl , and the updated position is given by ```math \\vec p 1 \\vec p 0 \\hat s 0 \\,dl. \\qquad\\qquad 2 ``` In order to trace the ray path further, we need to estimate the change in s as we moved from \\vec p 0 to \\vec p 1 . Note that the plane wave that we are riding gets transformed as it propagates in the medium due to changes in the slowness s |\\vec s | . In order to estimate this change, we shall first consider a Jacobian Matrix `J` J. Then, we will simplify the derivative of \\vec s with respect to the length along the ray path l , which is `dsdl` `J` \\hat s , using the Eikonal equation, to get `dsdl` \\nabla\\,s . Finally, the slowness vector at the new position \\vec p 1 is given by ```math \\vec s 1 \\vec s 0 \\nabla\\,s\\,dl. \\qquad\\qquad 3 ``` This notebook solves equations 2 and 3 numerically to trace the ray path in 2 D heterogeneous media. \"\"\" dsdl1 J svec . s x, z md\"\"\" Using equation 1 , we shall now substitute `sx` and `sz` in `dsdl` and simplify. \"\"\" dsdl2 broadcast dsdl1 do ⋅ simplify substitute ⋅, sx x, z Dx T x, z , sz x, z Dz T x, z end r1 acrule Dx Dx ~T Dx ~T ~B ~A 1 2 Dx Dx ~T Dx ~T ~B ~A r2 acrule ~B Dz Dx ~T Dz ~T ~A ~B 1 2 Dx Dz ~T Dz ~T ~A r3 acrule Dz Dz ~T Dz ~T ~B ~A 1 2 Dz Dz ~T Dz ~T ~B ~A r4 acrule ~B Dx Dz ~T Dx ~T ~A ~B 1 2 Dz Dx ~T Dx ~T ~A dsdl4 r1 r2 dsdl2 1 , r4 r3 dsdl2 2 dsdl3 r1 r2 dsdl2 1 , r4 r3 dsdl2 2 r5 acrule ~A Dx ~B ~A Dx ~C ~D ~A Dx ~B ~C ~D r6 acrule ~A Dz ~B ~A Dz ~C ~D ~A Dz ~B ~C ~D md\"\"\" We can now finally use the Eikonal equation to derive equation 3 . \"\"\" dsdl expand derivatives. substitute. dsdl4, Dx T x, z Dx T x, z Dz T x, z Dz T x, z s x, z s x, z tip md\"From this derivation, it is obvious that `dsdl` determines how the horizontal and vertical components of the slowness vector change along the raypath. For example, if Dx s x,z is zero in a layered Earth medium, the horizontal slowness remains constant \" test iszero dsdl . Symbolics.gradient s x, z , x, z md\"\"\" Amplitudes \"\"\" eikA A ~ 0 begin eikA arg A simplify expand derivatives substitute eikA A , Dx T x, z sx x, z , Dz T x, z sz x, z eikA arg A end md\"\"\" Lets assume a solution of the form `A x, z exp Ã x, z `. \"\"\" syms Ã x Real, z Real eikÃ1 expand derivatives substitute eikA arg A , A x, z exp Ã x, z eikÃ2 simplify eikÃ1 exp Ã x, z eikÃ sum arguments eikÃ2 1 2 2 s x, z ~ sum arguments eikÃ2 3 4 s x, z 2 md\"\"\" The LHS of the above equation corresponds to the projection of the gradient of A along the ray path. We can now integrate along the ray path to obtain the amplitude. \"\"\" syms ∫ₚₐₜₕ x exp ∫ₚₐₜₕ eikÃ.lhs md\"\"\" Intuition Divergence of the slowness field. \"\"\" md\"\"\" Appendix \"\"\" md\"\"\" UI \"\"\" function layered medium input n n is the number of layers return PlutoUI.combine do Child inputs md\"\"\" Layer string i Child string \"L\",i , Slider 1000 10000, default 1000 i 1000, show value true \"\"\" for i in 1 n md\"\"\" Layered Earth These sliders are only active if you input `slowness layered` below. Adjust the seismic velocities ∈ 1, 10 km s. inputs \"\"\" end end md\"\"\" Medium \"\"\" begin dx 0.5 choosing dx other than 1.0 needs adjustment for Eikonal package zgrid range 0.0, stop 150.0, step dx xgrid range 0.0, stop 500.0, step dx end function source input return PlutoUI.combine do Child dinput md\"\"\" θ∈ 1, 360 Child \"θ\", RangeSlider range 0, stop 360, step 5 left 0, right 60, show value true \"\"\" for i in 1 1 linput md\"\"\" x Child string x, \"pos\" , Slider grid, default 10, show value true \"\"\" for x, grid in zip \"x\", \"z\" , xgrid, zgrid md\"\"\" Source Parameters Adjust the position from which the ray originates. linput... The direction of the outgoing slowness vector. dinput... \"\"\" end end TwoColumn md\"\"\" bind lmedium confirm layered medium input 5 \"\"\", md\"\"\" bind source confirm source input \"\"\" begin layers getindex lmedium, k for k in Symbol. filter x occursin \"L\", x , string. keys lmedium convert the input velocity values to a slowness field zlayer collect range zgrid 1 , stop zgrid end , length length layers xlayer xgrid 1 , xgrid end slayer inv. collect layers slayer itp extrapolate interpolate zlayer, xlayer , hcat slayer, slayer , Gridded Interpolations.Linear , Flat end slowness layered z, x slayer itp z, x slowness z, x eval Symbol slowness fn name z, x slowness grid slowness z, x for z in zgrid, x in xgrid begin slowness x z, x ForwardDiff.derivative x slowness z, x , x slowness z z, x ForwardDiff.derivative z slowness z, x , z end md\" Trace\" pa slowness, slowness x, slowness z, xgrid, zgrid ds 1.0 function get raypaths N, ds, Xsource, initial slowness vectors, pa slowness, slowness x, slowness z, xgrid, zgrid pa Xrays map initial slowness vectors do slowness vector keep the direction of S init, but adjust the magnitude to match the slowness at the source slowness vector slowness vector . norm slowness vector . norm slowness Xsource 1 , Xsource 2 Xraysave Array Any missing, 2, N Xray deepcopy Xsource S deepcopy slowness vector for i 1 N Xs view Xraysave, , i copyto Xs, Xray equation 2 Xray 1 Xray 1 S 1 slowness Xray 1 , Xray 2 ds Xray 2 Xray 2 S 2 slowness Xray 1 , Xray 2 ds equation 3 S 1 S 1 ds slowness z Xray 1 , Xray 2 S 2 S 2 ds slowness x Xray 1 , Xray 2 exit, if the ray reaches the edge of the medium Xray 2 xgrid 1 && Xray 2 xgrid end && Xray 1 zgrid 1 && Xray 1 zgrid end && break end return Xraysave end return Xrays end raypaths get raypaths 500, ds, source.zpos, source.xpos , sind θ , cosd θ for θ in source.θ , pa md\"Now lets integrate slowness along the raypaths to get traveltimes.\" function get raytraveltimes N, Xrays, pa slowness, slowness x, slowness z, xgrid, zgrid pa traveltimes map Xrays do Xray Xray filter x any ismissing. x , eachslice Xray, dims 2 traveltime Array Any missing, N traveltime 1 0.0 for i 2 length Xray this is supposed to be constant, as we are moving a fixed length along the ray during ray tracing, but anyway... distance sqrt sum abs2. Xray i Xray i 1 traveltime i traveltime i 1 distance slowness Xray i 1 1 , Xray i 1 2 end return traveltime end end raytraveltimes get raytraveltimes 500, raypaths, pa begin findout if the ray intersects the surface z 0 , if yes, return the index along the ray Iz0 map raypaths, raytraveltimes do raypath, raytt Xray filter x any ismissing. x , eachslice raypath, dims 2 i findlast x x 1 1 , Xray end return traveltime, when ray intersects the surface rayXtraveltimes map raytraveltimes, Iz0 do raytt, i if i nothing return missing else return raytt i end end return distance to the point where ray intersects the surface rayX map raypaths, Iz0 do raypath, i if i nothing return missing else return raypath 2, i end end end md\" Eikonal\" begin fastsweep FastSweeping slowness grid init fastsweep, argmin abs. source.zpos . zgrid , argmin abs. source.xpos . xgrid sweep fastsweep, verbose false end TT grid fastsweep.t dx traveltime to each x,z function diff2 z u, dx u2 zero u for ix in 1 size u, 2 u2 2 end 1, ix . u 1 end 2, ix . 2u 2 end 1, ix . u 3 end, ix . dx^2 end return u2 end function diff2 x u, dx u2 zero u for iz in 1 size u, 1 u2 iz, 2 end 1 . u iz, 1 end 2 . 2u iz, 2 end 1 . u iz, 3 end . dx^2 end return u2 end div s grid diff2 x TT grid, dx diff2 z TT grid, dx md\" Amplitudes\" function get amplitudes raypaths amplitudes map raypaths do raypath amps Array Any missing, size raypath, 2 amp 0.0 initialize for i, p in enumerate eachslice raypath, dims 2 if any . ismissing. p ipz argmin abs. p 1 . zgrid ipx argmin abs. p 2 . xgrid amp amp 2.0 div s grid ipz, ipx slowness p 1 , p 2 amps i amp end end return exp. amps end return amplitudes end amplitudes get amplitudes raypaths md\"\"\" Plots \"\"\" begin source create a plot object `rayplot` that will be updated later rayplot Plot Layout showlegend false, yaxis autorange \"reversed\", height 250, width 700, title attr font size 12, , legend attr x 0.6, y 0.0, , font attr size 10 , yaxis attr scaleanchor \"x\" , Subplots horizontal spacing 0.3, rows 1, cols 1, subplot titles \"2 D x, z Ray Tracing\" \"\" add velocity model to `rayplot` add trace rayplot, heatmap x xgrid, y zgrid, z inv. slowness grid , colorscale \"Cividis\", colorbar title \"Velocity br m s \", colorbar x 1 , row 1, col 1 end update `rayplot` by adding a raypath that was just traced function update rayplot rayplot, raypaths map raypaths, amplitudes do raypath, amplitude add trace rayplot, scatter x raypath 2, , y raypath 1, , mode \"markers\", marker attr size 1, color log. amplitude , colorscale \"Blackbody\" , line attr color \"black\", width 1.5 , name savename source , , row 1, col 1 end return nothing end begin update rayplot rayplot, raypaths PlutoPlotly.plot rayplot end function plot tt contours plot contour x xgrid, y zgrid, z TT grid, showlabels true, colorscale \"Viridis\", contours attr coloring \"heatmap\", showlabels true, show labels on contours labelfont attr label font properties size 12, color \"white\", , Layout title \"First Arrival Traveltimes\", yaxis autorange \"reversed\", height 250, width 700, colorbar false, yaxis attr scaleanchor \"x\" , end plot tt contours function plot traveltimes trPlot Plot Layout showlegend false, margin 0.5, height 300, width 680, title attr font size 12, , xaxis attr range 0, maximum xgrid , legend attr x 0.6, y 0.0, , font attr size 10 , Subplots horizontal spacing 0.1, rows 1, cols 2, subplot titles \"First Arrival Traveltime\" \"Raytracing Traveltime\" , x title \"Distance\", y title \"Traveltime\", shared yaxes true add trace trPlot, scatter x xgrid, y TT grid 1, , mode \"markers\", marker attr size 2 , col 1, row 1 add trace trPlot, scatter x rayX, y rayXtraveltimes, mode \"markers lines\", marker attr size 5 , col 2, row 1 return plot trPlot end plot traveltimes md\" TODO\" md\"\"\" Amplitudes Prove Fermat Principle using Variational Calculus \"\"\" md\"\"\" Fermat's principle Consider two points A and B . We would like to show that the ray function minimizes the total travel time from A to B . In variational calculus, we are trying to find a function that minimizes a functional. The travel time is given by the integral ```math \\mathbb T \\int A^B s x \\,dl ``` Notice that this equation of \\mathbb T is nonlinear in the slowness field as the integration path depends on the velocity. In order to consider all other paths, let's consider some \\eta x that is an arbitrary path and scale it by a factor \\epsilon . \\epsilon\\eta x is the variation of s x . \\eta is twice differentiable. ```math \\bar s x s x \\epsilon\\eta x ``` ```math \\eta A \\eta B 0 ``` Now we are going to set the derivative of I w.r.t. to \\epsilon be zero. ```math \\frac d\\mathbb T d\\epsilon | \\epsilon 0 ``` ```math \\int A^B \\eta x ``` \"\"\" "},{"url":"raytheory/ray-tomography/","title":"Ray Tomography","tags":["raytheory"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Ray Tomography\" tags \"raytheory\" layout \"layout.jlhtml\" description \"This notebook focuses on the inverse formulation of 2 D first arrival travel times.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Pluto using PlutoPlotly using PlutoTest using PlutoTeachingTools using LinearAlgebra using Distances using StatsBase using PlutoUI using Distributions using TikzPictures using SparseArrays using Colors, ColorSchemes, GLMNet end using HDF5 ChooseDisplayMode TableOfContents md\"\"\" Ray Tomography Seismic tomography is a method used to create images of the Earth's subsurface using seismic waves generated by earthquakes or explosions. These waves, known as P , S , and surface waves, can be used to create tomographic models with varying resolutions, depending on factors such as the wavelength of the seismic waves, the distance of the wave source, and the source receiver geometry. The process of creating these models is treated as an inverse problem, and this notebook specifically focuses on analyzing 2 D inversions of first arrival travel times. By interacting with this notebook, users will be able to Visualize tomograms for various source receiver configurations Understand the concept of ill posedness and the need for regularization Learn about the principle of backpropagation And gain more insight into the field of seismic tomography Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" md\"\"\" Forward Problem In order to create an accurate image of the Earth's subsurface using seismic tomography, we need to first generate observed data. To do this, we will construct the forward operator G , which takes into account the model grid and the source receiver setup. The forward problem is represented by the equation G\\times\\,s , where s is the model slowness vector. In this process, we will generate true seismic velocity and slowness arrays based on user input. These arrays will then be used to generate synthetic observations. \"\"\" md\"\"\" Row Picture The row picture of G \\times s illustrates the relationship between the slowness vector and the traveltime errors. It shows that the raypaths rows of G that have the strongest correlation with the slowness vector will have a higher traveltime error when compared to the others. This is because when a raypath passes through all the perturbed pixels of the medium, it will experience a greater delay, leading to a higher traveltime residual. In other words, the higher the correlation of a raypath with slowness vector, the more it is affected by the perturbations in the medium and hence higher traveltime residual. \"\"\" md\" Column Picture The column picture of G \\times s gives insight into the tradeoff between different pixels in the model grid. When two pixels are illuminated by a similar set of raypaths, they appear as dependent columns in the matrix G . As a result, these dependent columns can be linearly combined to produce no effect on the observed travel times. This means that changes in the slowness in these dependent pixels will not have any effect on the calculated traveltimes, and thus the solution to the inverse problem is not unique. It is important to keep in mind the tradeoff between these pixels while solving the inverse problem, and regularization may be needed to obtain a unique solution. \" md\"\"\" Backpropagation Gradient is formed by backpropagation of traveltime residuals. \"\"\" md\"\"\" Column Picture The column picture of G^ \\text T \\times \\Delta d illustrates how the traveltime residuals are distributed across the model grid. It represents a weighted sum of the raypaths, where the weights are given by the traveltime residuals. This means that higher values in the model will be spread along the raypaths whose associated traveltimes do not match the observed traveltimes. \"\"\" md\"\"\" Row Picture The row picture of G^ \\text T \\times \\Delta d represents the correlation between the model pixels and the data residuals. It shows that the model pixels whose ray distribution corresponds with the data residuals are given a larger weight. In other words, pixels that are intersected by high residual rays are highlighted, or this means that the pixels in the model that are most responsible for the residuals in the data will be given more weight in the image. \"\"\" md\"\"\" Inverse Problem Here, we shall simply use the Moore Penrose pseudoinverse to map the observed travel times to slowness estimates. Note that the forward operator will now be generated again, based on the user input on spatial sampling of the seismic slowness, which is usually smaller compared to what we have used for generating the observed data above. \"\"\" λrange logrange 1e 5, 1e5, length 100 | collect md\"\"\" Choose the regularization parameter bind λ Slider λrange, show value true bind regenerate medium CounterButton \"Regenerate Medium\" \"\"\" md\"Finally, we will take the inverse of slowness and reshape it to produce the final 2 D seismic velocity model.\" md\"Check if the observations are satisfied by the estimated model.\" md\"\"\" As a sanity check, we will now test the operator `G` by computing travel times in a homogeneous medium analytically. This will make sure that raytracing is done correctly. \"\"\" get inverse operator using SVD damped least squares also returns the singular values for viz. commented for now function get inverse operator G U, S, V svd G Gi V Diagonal inv. S . 1e 1 U' return Gi, S end c Dict \"Backpropagate the data residual\" grad slowness, \"Estimate seismic velocity\" cest md\" Uncertainity\" md\" Scree plot https en.wikipedia.org wiki Scree plot ~ text In%20multivariate%20statistics%2C%20a%20scree,principal%20component%20analysis%20 PCA . \" md\"Slider to choose the row of the Hessian matrix.\" md\"\"\" We will now vis. rows of data and model resolution matrices. \"\"\" md\" Appendix\" define a for modelling and inversion md\"\"\" `get medium` generates a medium with a background velocity of 2000 m s, and a circular perturbation. It outputs the velocity matrix and the corresponding slowness vector. \"\"\" function get medium xgrid, zgrid, pert nothing nx length xgrid nz length zgrid ctrue 2000.0 ones nz 1, nx 1 if pert nothing check if perturbation is required Generate random ellipticity and orientation a pert.r rand Uniform 0.5, 2 b pert.r rand Uniform 0.5, 2 theta rand Uniform 0, 2π cos theta cos theta sin theta sin theta for iz in 1 nz 1, ix in 1 nx 1 x xgrid ix pert.x z zgrid iz pert.z Rotate coordinates x rot x cos theta z sin theta z rot x sin theta z cos theta Check if point is inside the ellipse if x rot a ^2 z rot b ^2 1 ctrue iz, ix 100 end end end strue vec inv. ctrue return ctrue, strue end md\"\"\" Methods for straight ray tracing \"\"\" warn \"The straight ray implementation in this notebook requires sources and receivers on the outer edge of the 2 D grid, i.e., arbitrary positions are not allowed.\" careful before changing these only place sources and receivers on the outer edge of the grid function get source receivers outer edge xgrid, zgrid, ns, nr srcz ns 1 ? sample zgrid range zgrid 2 , stop zgrid end 1 , length ns srcx fill xgrid 1 , ns recz nr 1 ? sample zgrid range zgrid 2 , stop zgrid end 1 , length nr recx fill xgrid end , nr return srcz, srcx, recx, recz end find intersect b w two segments returns nothing if segments are parallel segments do not intersect else returns the point of intersection including C and D i.e., h 0 or h 1 function find intersect A1, A2, B1, B2, C1, C2, D1, D2 E B A F D C D1 C1, D2 C2 P A2 B2, B1 A1 dFP D1 C1 A2 B2 B1 A1 D2 C2 if iszero dFP when parallel return nothing end h A1 C1 A2 B2 A2 C2 B1 A1 dFP if h h 1 0 | h ≈ 0 | h ≈ 1 h should be in 0, 1 or h 0 or h 1 return C1 h D1 C1 , C2 h D2 C2 else return nothing end end function find length in cell xmin, xmax, zmin, zmax, A1, A2, B1, B2 P1 find intersect A1, A2, B1, B2, xmin, zmin, xmin, zmax P2 find intersect A1, A2, B1, B2, xmin, zmin, xmax, zmin P3 find intersect A1, A2, B1, B2, xmin, zmax, xmax, zmax P4 find intersect A1, A2, B1, B2, xmax, zmin, xmax, zmax P filter x x nothing , P1, P2, P3, P4 P unique P if length P 2 remove sides that will be otherwise counted twice by adjacent cells if xmin, zmax ∈ P & xmax, zmax ∈ P return 0 elseif xmax, zmin ∈ P & xmax, zmax ∈ P return 0 else return maximum broadcast x sqrt sum abs2. x , diff P end else return 0 end end function get forw operator xgrid, zgrid, srcx, srcz, recx, recz nx length xgrid nz length zgrid ns length srcx nr length recx G zeros ns nr, nx 1 nz 1 for is in 1 ns, ir in 1 nr, iz in 1 nz 1, ix in 1 nx 1 G ir is 1 nr, iz ix 1 nz 1 find length in cell xgrid ix , xgrid ix 1 , zgrid iz , zgrid iz 1 , srcx is , srcz is , recx ir , recz ir end return G end \"\"\" Constructs a sparse matrix for horizontal differencing operator for an image of size rows, cols . \"\"\" function horizontal differencing operator rows, cols num pixels rows cols data Float64 row indices Int col indices Int for i in 1 rows, j in 1 cols 1 pixel i 1 cols j next pixel pixel 1 push data, 1.0 Difference from current pixel push data, 1.0 Difference to the next pixel append row indices, pixel, pixel append col indices, pixel, next pixel end return sparse row indices, col indices, data, num pixels, num pixels end \"\"\" Constructs a sparse matrix for vertical differencing operator for an image of size rows, cols . \"\"\" function vertical differencing operator rows, cols num pixels rows cols data Float64 row indices Int col indices Int for i in 1 rows 1, j in 1 cols pixel i 1 cols j next pixel pixel cols push data, 1.0 Difference from current pixel push data, 1.0 Difference to the next pixel append row indices, pixel, pixel append col indices, pixel, next pixel end return sparse row indices, col indices, data, num pixels, num pixels end md\"\"\" UI \"\"\" function perturbation input xgrid, zgrid nx length xgrid nz length zgrid return PlutoUI.combine do Child p md\"\"\" x Child \"x\", Slider xgrid, default xgrid div nx,2 , show value true and z Child \"z\", Slider zgrid, default zgrid div nz,2 , show value true \"\"\", r md\"\"\" Child \"r\", Slider range 10, stop 500, length 10 , default 330, show value true \"\"\", md\"\"\" Medium Parameters Circular perturbation at p with scale ∈ 10, 500 m r \"\"\" end end function resolution input return PlutoUI.combine do Child d md\"\"\" Resolution m of true Child \"ds\", Slider range 10,stop 200 , default 25, show value true and inverted Child \"ds inv\", Slider range 10,stop 200 , default 150, show value true media \"\"\", md\" d \" end end bind res confirm resolution input begin xgrid range 1000, stop 1000, length floor Int, 2000 res.ds zgrid range 1000, stop 1000, length floor Int, 2000 res.ds end bind pert confirm perturbation input xgrid, zgrid begin regenerate medium ctrue, strue get medium xgrid, zgrid, pert end begin xgrid inv range 1000, stop 1000, length floor Int, 2000 res.ds inv zgrid inv range 1000, stop 1000, length floor Int, 2000 res.ds inv end bind irowm Slider 1 length xgrid inv 1 length zgrid inv 1 , show value true, default div length xgrid inv length zgrid inv , 4 Dv vertical differencing operator length zgrid inv 1, length xgrid inv 1, Dh horizontal differencing operator length zgrid inv 1, length xgrid inv 1, λ3 inv tr Dh' Dh function acq input return PlutoUI.combine do Child d md\"\"\" Choose number of sources Child \"ns\", Slider 2 2 50, show value true, default 25 and receivers Child \"nr\", Slider 2 2 50, show value true, default 25 \"\"\", md\"\"\" Acquisition Setup d \"\"\" end end bind acq confirm acq input srcz, srcx, recx, recz get source receivers outer edge xgrid, zgrid, acq.ns, acq.nr Gtrue get forw operator xgrid, zgrid, srcx, srcz, recx, recz dobs Gtrue strue G get forw operator xgrid inv, zgrid inv, srcx, srcz, recx, recz plot heatmap z G , Layout xaxis title \"model vector index\", yaxis autorange \"reversed\", yaxis title \"data vector index\", width 450, title \"Forward Operator\" λ1 inv tr G' G H spdiagm ones size G, 2 λ2 inv tr H' H Gi pinv G compute Moore Penrose pseudoinverse sprior fill inv 2000. , size G, 2 function get tikhonov solution dobs return inv λ1 G' G λ2 λ H' H λ1 G' dobs λ2 λ H' sprior end sest1 get tikhonov solution dobs cest1 reshape inv. sest1 , length zgrid inv 1, length xgrid inv 1 function get first difference regularized solution dobs return inv λ1 G' G λ3 λ Dh' Dh λ3 λ Dv' Dv λ1 G' dobs end sest2 get first difference regularized solution dobs cest2 reshape inv. sest2 , length zgrid inv 1, length xgrid inv 1 plot scatter y dobs, name \"observed\" , scatter y G sest1, name \"predicted\" , Layout title \"Data Residual Observed Vs. Predicted Traveltimes \", xaxis title \" raypath\", yaxis title \"traveltime\" plot scatter y dobs, name \"observed\" , scatter y G sest2, name \"predicted\" , Layout title \"Data Residual Observed Vs. Predicted Traveltimes \", xaxis title \" raypath\", yaxis title \"traveltime\" function plot G scree s svd G plot s.S, Layout title \"Singular values of G\" end plot G scree plot heatmap z transpose G G , Layout yaxis autorange \"reversed\", title \"the Hessian matrix\", xaxis title \"model index\", yaxis title \"model index\", width 450 plot heatmap x xgrid inv, y zgrid inv, z reshape transpose G G irowm, , length zgrid inv 1, length xgrid inv 1 , Layout yaxis autorange \"reversed\", title \"row of the Hessian matrix\", width 450 plot heatmap x xgrid inv, y zgrid inv, z reshape Gi G irowm, , length zgrid inv 1, length xgrid inv 1 , Layout yaxis autorange \"reversed\", title \"Row of Model Resolution Matrix\", width 450 begin tt analytic vec sqrt sum abs2. srcx is recx ir , srcz is recz ir inv 2000 for ir in 1 acq.nr, is in 1 acq.ns tt G G inv. fill 2000, length zgrid inv 1 length xgrid inv 1 test tt analytic ≈ tt G end data residual tt G dobs grad slowness reshape G' data residual, length zgrid inv 1, length xgrid inv 1 bind irowd Slider 1 acq.nr acq.ns, show value true plot G Gi irowd, , Layout title \"Row of data resolution matrix\", xaxis title \"raypath index\" md\" Plots\" function plot models fig Plot Layout yaxis autorange \"reversed\", height 600, width 650, title attr font size 12, , font attr size 10 , yaxis attr scaleanchor \"x\" , Subplots shared xaxes true, shared yaxes true, horizontal spacing 0.3, rows 2, cols 2, subplot titles \"True Seismic Velocity\" \"Gradient\" \"Tikhonov Regularization\" \"First Order Difference Regularization\" add trace fig, heatmap x xgrid, y zgrid, z reshape ctrue, length zgrid 1, length xgrid 1 , colorscale \"jet\", colorbar attr x 0.35, y 0.75, len 0.25 , row 1, col 1 add trace fig, heatmap x xgrid inv, y zgrid inv, z grad slowness , colorscale \"jet\", colorbar attr x 1, y 0.75, len 0.25 , row 1, col 2 add trace fig, heatmap x xgrid inv, y zgrid inv, z cest1 , colorscale \"jet\", colorbar attr x 0.35, y 0.25, len 0.25 , zmin minimum ctrue , zmax maximum ctrue , row 2, col 1 add trace fig, heatmap x xgrid inv, y zgrid inv, z cest2 , colorscale \"jet\", colorbar attr x 1, y 0.25, len 0.25 , zmin minimum ctrue , zmax maximum ctrue , row 2, col 2 return PlutoPlotly.plot fig end plot models data residual colors get. Ref colorschemes seismic , data residual . minimum data residual . maximum data residual ray setup broadcast reshape 1 acq.nr, acq.nr, 1 , reshape 1 acq.ns, 1, acq.ns do ir, is scatter x srcx is , recx ir , y srcz is , recz ir , marker attr symbol \"asterisk\", \"triangle down\" , size 10, 10 , line attr color \"black\" , color data residual colors ir is 1 acq.nr , opacity 0.15, mode \"lines markers\", end function plot ray setup return plot vec ray setup , Layout yaxis autorange \"reversed\", font attr size 10 , showlegend false, width 450, title \"Ray Geometry br red ray paths have higher data residuals \", yaxis tickvals zgrid inv, xaxis tickvals xgrid inv, xaxis attr title \"x\", ticks \"outside\", tickwidth 1, tickcolor \"black\", ticklen 10, gridcolor \"gray\" , yaxis attr title \"z\", scaleanchor \"x\", ticks \"outside\", tickwidth 1, tickcolor \"black\", ticklen 10, gridcolor \"gray\" , xaxis zeroline false, yaxis zeroline false, end plot ray setup ╠═╡ h5open \"ray tomography assignment Jan2025.h5\", \"w\" do file write file, \"G\", G write file, \"d\", dobs write file, \"xgrid inv\", collect xgrid inv write file, \"zgrid inv\", collect zgrid inv write file, \"srcx\", srcx write file, \"srcz\", collect srcz write file, \"recx\", collect recx write file, \"recz\", collect recz end ╠═╡ md\" Tikz\" tikz default options raw\"\"\" background rectangle .style fill white , show background rectangle, \"\"\" tikz preamble raw\"\"\" \\usepackage tikz \\usepackage tikz \\usetikzlibrary fit, matrix, shapes.geometric \\tikzset % use tikzset, not tikzstyle cell .style rectangle, rounded corners 5pt, draw, \\tikzset % use tikzset, not tikzstyle cellv .style rectangle, rounded corners 5pt, draw, rotate 90, \\usepackage xifthen \\usetikzlibrary hobby \\usepackage pgfplots \\usepackage fontawesome \\usepackage bm,amsfonts,amsmath \\usetikzlibrary backgrounds,pgfplots.groupplots,snakes \\usepgfplotslibrary patchplots \\pgfplotsset try min ticks 2 \\usepackage pgfplotstable \\usetikzlibrary plotmarks,positioning,spy \\usetikzlibrary shapes.geometric, arrows, fadings \\usepgfplotslibrary groupplots, polar \\usepackage space grffile \\usetikzlibrary % decorations.pathreplacing,% decorations.pathmorphing% \\usetikzlibrary positioning,fit,backgrounds \\usetikzlibrary shapes,arrows \\usetikzlibrary decorations.markings \\usetikzlibrary patterns \\usetikzlibrary plotmarks \\usetikzlibrary fit \\usetikzlibrary intersections \\usepgfplotslibrary fillbetween \\pgfplotsset axis line style black 10 , every axis label .append style black 10 , every axis title .append style black 10 , every tick label .append style black 10 % need for pgfplots \\newcommand \\axisz 0cm \\newcommand \\axisx 0cm \\usetikzlibrary positioning \\usetikzlibrary shapes.geometric \\usetikzlibrary backgrounds \"\"\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot tikzrow t1, t2, tn, tv s1 \"\", s2 \"\" TikzPicture L\"\"\" \\matrix matrix of nodes, nodes in empty cells, minimum width 4cm, column sep 4pt, row sep 10pt, text height 2ex, text depth .25ex, minimum height 4ex, left delimiter , right delimiter , m | cell | % t1 \\\\ | cell | % t2 \\\\ | cell | \\cdots \\\\ | cell | % tn \\\\ \\matrix right of m, matrix of nodes, nodes in empty cells, %minimum width 4cm, column sep 4pt, row sep 10pt, text height 2ex, text depth .25ex, %minimum height 4cm, left delimiter , right delimiter , m2 | rotate 90 | % tv \\\\ \\node below of m2, node distance 5em, % s2 \\node below of m, node distance 6em, % s1 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot tikzrow \"raypath 1\", \"raypath 2\", \"raypath K\", \"slowness vector\", s1 \"K×N\", s2 \"N×1\" plot tikzrow \"model pixel 1\", \"model pixel 2\", \"model pixel N\", \"data residual\", s1 \"N×K\", s2 \"K×1\" t1, t2, t3, tv are texts s1 and s2 are labels with sizes plot tikzcol t1, t2, tn, tv s1 \"\", s2 \"\" TikzPicture L\"\"\" \\matrix matrix of nodes, nodes in empty cells, minimum width 4cm, minimum height 1cm, column sep 4pt, row sep 10pt, % text height 2ex, rotate 90, text depth .25ex, left delimiter , right delimiter , m | cellv | % t1 & | cellv | % t2 & | cellv | \\cdots & | cellv | % tn \\\\ \\matrix right of m, matrix of nodes, nodes in empty cells, %minimum width 4cm, column sep 4pt, row sep 10pt, text height 2ex, text depth .25ex, %minimum height 4cm, left delimiter , right delimiter , m2 | rotate 90 | % tv \\\\ \\node below of m2,node distance 5em, % s2 \\node below of m, node distance 7em, % s1 \"\"\", options tikz default options, preamble tikz preamble, width \"12cm\" plot tikzcol \"model pixel 1\", \"model pixel 2\", \"model pixel N\", \"slowness vector\", s1 \"K×N\", s2 \"N×1\" plot tikzcol \"raypath 1\", \"raypath 2\", \"raypath K\", \"data residual\", s1 \"N×K\", s2 \"K×1\" "},{"url":"surfacewaves/Love-wave-analytic1/","title":"Love Waves","tags":["surfacewaves"],"text":" A Pluto.jl notebook v0.20.13 frontmatter title \"Love Waves\" tags \"surfacewaves\" layout \"layout.jlhtml\" description \"Dive into the world of plane Love waves in a single homogeneous layer overlying a homogeneous half space, offering a simple yet fascinating exploration of the topic.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end using PlutoPlotly, PlutoUI, Roots, Symbolics, SymbolicUtils, FFTW, PlutoTeachingTools, Latexify, PlutoUI, Peaks ChooseDisplayMode TableOfContents md\"\"\" Love Waves This notebook studies the simplest case of plane Love waves in a single homogeneous layer overlying a homogeneous half space. This is an eigenvalue problem, where the boundary and the free surface conditions limit the allowable eigenvalues and eigenfunctions. In other words, for a given frequency, the horizontal slowness can only take special values. It can often happen that more than one value of the horizontal slowness contributes to the Love wave of a particular frequency. By interacting with this notebook, we can visualize the displacement wavefield for different modes notice the cut off frequency of the n th order higher mode. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" bind tt Clock 0.1 Markdown.MD Markdown.Admonition \"warning\", \"Observations\", md\"\"\" Use the frequency slider to visualize the seismograms corresponding to a wave packet with a finite frequency band around a given frequency \\omega 0 . Do you observe a sinusoidal oscillation of frequency \\omega 0 modulated by an envelope sinc function ? Perform stationary phase analysis for different time locations on the seismogram and notice the saddle points or points of stationary phase to determine the frequency of the wave packet that can be expected to dominate at a particular time. \"\"\" md\" \" syms β₁ Real β₂ Real μ₁ Real μ₂ Real ρ₁ Real ρ₂ Real syms H Real md\"\"\" Trail Wavefield We shall now consider a trail solution for the y component of the displacement field, denoted using `u`. This solution considers two planewaves with amplitudes A and B and slowness components p and \\eta . If the planewave if homogeneous \\eta is imaginary. Otherwise, if \\eta is real, we have either exponentially decaying or growing fields with depth with inhomogeneous waves travelling in the x direction. \"\"\" syms p Real η₂ Complex syms ı Complex Real imaginary unit, going to substitute with im later syms x Real z Real t Real ω Real trail soln p, η, A, B A exp ω η z B exp ω η z exp ı ω t p x md\"The wave operator corresponding to the top layer z∈ 0, H is denoted using `L1`.\" begin Dz Differential z Dx Differential x Dt Differential t end L1 u Dt Dt u μ₁ ρ₁ Dx Dx u Dz Dz u md\"We now write an expression for the wavefield in the top layer using the vertical component of the slowness vector \\eta 1 and amplitudes A 1 and B 1 .\" syms A₁ Real B₁ Real η₁ Complex u1 trail soln p, η₁, A₁, B₁ md\"Similarly, for the half space.\" syms A₂ Real B₂ Real u2 trail soln p, η₂, A₂, B₂ md\"\"\" We ignore the upcoming wave when \\eta 2 is imaginary, and avoid exponential growth with depth when \\eta 2 is real such that. \"\"\" B₂ ~ 0 md\"\"\" Free Surface Condition We shall now evaluate the traction corresponding to the free surface and set it to zero. \"\"\" σyz1 expand derivatives μ₁ . Dz u1 substitute σyz1, z 0 ~ 0 Symbolics.symbolic linear solve substitute σyz1, z 0 , B₁ | simplify A₁ ~ B₁ md\" Dynamic Boundary Condition We now impose continuity of \\sigma yz component of the stress tensor across the boundary at z H .\" σyz2 expand derivatives μ₂ . Dz u2 σyz1H substitute σyz1, z H σyz2H substitute σyz2, z H A₂ex1 substitute Symbolics.symbolic linear solve σyz1H ~ σyz2H, A₂ , B₁ A₁, B₂ 0 md\" Kinematic Boundary Condition Similarly, we impose the continuity of the displacement field across the boundary.\" u1H substitute u1, z H, B₁ A₁ u2H substitute u2, z H, B₂ 0 A₂ex2 Symbolics.symbolic linear solve u1H ~ u2H, A₂ md\"\"\" Graphical Solution This section reacts to the medium configuration selected above. In order to have a non trivial solution, we need the two expressions for A₂ should be equal to each other. We begin by simplifying these expressions, substitute the UI medium configuration and plot them in following three ranges. \"\"\" ex1 simplify A₂ex1 arguments A₂ex1 2 A₁ ex2 simplify A₂ex2 arguments A₂ex1 2 A₁ md\"Note that the goal here is to find zeros of the function `F` defined below, which outputs `ex1 ex2` for a given horizontal slowness `p`.\" md\"From the above plots, we can observe that there are no zeros in either 0,β₁ or β₂, ∞ . Therefore, we will now find the zeros of `F` in the interval β₁, β₂ . The `find zeros` function from the `Roots.jl` https github.com JuliaMath Roots.jl package can be used to search for all zeros in a specified interval in a derivative free fashion. We only consider the real part of `F` as the imaginary part is zero in β₁, β₂ . The zeros correspond to the eigenvalue phase velocities.\" md\" Dispersion Curves\" md\" Appendix\" tgrid range 0, stop 1000, length 1000 freqgrid rfftfreq length tgrid , inv step tgrid function get k c k inv. c . freqgrid 2 end . 2 . pi end function get group velocity k return step freqgrid 2 pi . diff k end a range for phase velocity typical shear velocity values in crust mantle cgrid range 1, stop 7, step 0.2 function getη p, β if abs2 p inv abs2 β return im sqrt inv abs2 β abs2 p else return sqrt abs2 p inv abs2 β end end md\"In order to plot the displacement wavefield, we will now build functions that output the particle displacement in the first and second layers for input x , z , t and p .\" md\" UI\" function medium input return PlutoUI.combine do Child inputs1 md\"\"\" H km Child \"Hp\", Slider range 10, 100, step 5 , default 35, show value true \"\"\", md\"\"\" β₁ km s Child \"β₁\", Slider cgrid, default 3.5, show value true \"\"\", md\"\"\" β₂ km s Child \"β₂\", Slider cgrid, default 4.5, show value true \"\"\", md\"\"\" ρ₁ gm cc Child \"ρ₁\", Slider range 1, 7, step 0.2 , default 2.6, show value true \"\"\", md\"\"\" ρ₂ gm cc Child \"ρ₂\", Slider range 1, 7, step 0.2 , default 3.4, show value true \"\"\" md\"\"\" Medium Choose the depth of the boundary between the top layer and the halfspace. Slide to adjust the seismic velocities ∈ 1, 7 km s and densities ∈ 1, 7 gm cc of the top layer and the halfspace. By default, the parameters corresponding to the curst and mantle will be chosen. inputs1 \"\"\" end end function freq rec input return PlutoUI.combine do Child inputs1 md\"\"\" receiver location km Child \"xrecpos\", Slider range 0, 3000, step 1 , default 2000, show value true \"\"\", md\"\"\" frequency band Hz Child \"freqs\", RangeSlider range first freqgrid , step step freqgrid , length length freqgrid , show value true \"\"\", inputs time md\"\"\" time s Child \"T\", Slider tgrid, default div maximum tgrid , 2 , show value true \"\"\", inputs2 md\"\"\" frequency Hz Child \"freq\", Slider range 0.0, 0.25, step 0.01 , default 0.08, show value true \"\"\", md\"\"\" Wavefield Animation inputs2 Seismogram inputs1 Stationary Phase Analysis inputs time \"\"\" end end TwoColumn md\"\"\" bind medium confirm medium input \"\"\", md\"\"\" bind freq rec confirm freq rec input \"\"\" crange1 range medium.β₁, stop medium.β₂, length 1000 crange2 range medium.β₁ 0.5, stop medium.β₁, length 100 crange3 range medium.β₂, stop medium.β₂ 0.5, length 100 substitute values of medium.Hp, medium.β₁, and medium.ρ₁ into the expression x, instead of μ, η. then return a function of horizontal slowness f p that can be plotted function subs βρ x output function true x substitute x, H medium.Hp, μ₁ medium.β₁ medium.β₁ medium.ρ₁, μ₂ medium.β₂ medium.β₂ medium.ρ₂ if output function return build function x, p, ω, η₁, η₂, expression Val false else x end end subs βρ ex1, output function true F subs βρ ex1 ex2 output function true Fmedium p F p, 2 pi freq rec.freq, getη p, medium.β₁ , getη p, medium.β₂ cn sort inv. find zeros real ∘ Fmedium, inv medium.β₁ , inv medium.β₂ need prettier labels for MultiCheckBox names cn map enumerate cn do i, c c string i, \" \", floor c, digits 2 end cn vec map freqgrid 2 end do f F1 p F p, 2 pi f, getη p, medium.β₁ , getη p, medium.β₂ cn sort inv. find zeros real ∘ F1, inv medium.β₁ , inv medium.β₂ end phase velocities map 1 4 do i map cn vec do c if length c i c i else missing end end end wavenumbers map phase velocities do c get k c end group velocities map wavenumbers do k get group velocity k end function subs u1 u output function true u substitute subs βρ u output function false , ı im, B₁ 1, A₁ 1, B₂ 0 if output function build function u, x, z, t, p, ω, η₁, η₂, expression Val false else u end end U1 subs u1 u1 function subs u2 u output function true A₂p subs u1 A₂ex1, output function false u substitute subs βρ u output function false , ı im, B₁ 1, A₁ 1, B₂ 0, A₂ A₂p if output function build function u, x, z, t, p, ω, η₁, η₂, expression Val false else u end end U2 subs u2 u2 function mode input return PlutoUI.combine do Child input md\"\"\" cₙ km s Child \"c\", MultiCheckBox names cn, select all true, default cn \"\"\", return md\"\"\" Phase velocity Eigenvalues Depending on the parameters chosen above, the estimated phase velocity eigenvalues cₙ are given below. Select them to plot the corresponding eigenfunction uₙ i.e., displacement wavefield of a particular mode. You may also select multiple eigenfunctions to plot their superposition. For example, for the crust mantle configuration, we can notice the first higher order mode for frequency 0.08 Hz. input \"\"\" end end bind modes confirm mode input md\" Plots\" function plot roots x1, x2, cgrid f1 subs βρ x1 f2 subs βρ x2 a f1 inv c , 2 pi freq rec.freq, getη inv c , medium.β₁ , getη inv c , medium.β₂ for c in cgrid b f2 inv c , 2 pi freq rec.freq, getη inv c , medium.β₁ , getη inv c , medium.β₂ for c in cgrid trace1 scatter x cgrid, y real. a , mode \"lines\", line color \"red\", name \"real ex1 \" trace2 scatter x cgrid, y imag. a , mode \"lines\", line color \"blue\", name \"imag ex1 \" trace3 scatter x cgrid, y real. b , mode \"lines\", line color \"red\", line dash \"dash\", name \"real ex2 \" trace4 scatter x cgrid, y imag. b , mode \"lines\", line color \"blue\", line dash \"dash\", name \"imag ex2 \" trace5 scatter x medium.β₁ , y 0 , mode \"markers\", marker size 8, marker color \"black\", marker symbol \"dot\", name \"β₁\" trace6 scatter x medium.β₂ , y 0 , mode \"markers\", marker size 8, marker color \"black\", marker symbol \"line ns open\", name \"β₂\" layout Layout title \"F c ex1 c ex2 c \", xaxis title \"phase velocity c \", margin attr l 50, r 50, b 50, t 50 , legend attr x 10, y 1.3 , width 700, height 400, xaxis range cgrid 1 , cgrid end plot trace1, trace2, trace3, trace4, trace5, trace6 , layout end plot roots ex1, ex2, crange1 plot roots ex1, ex2, crange2 plot roots ex1, ex2, crange3 begin we need to discretize space before plotting xgrid range 50, stop 250, length 100 zgrid1 range 0, stop medium.Hp, length 100 zgrid2 range medium.Hp, stop 200, length 100 grid xgrid, zgrid1, zgrid2 end function plot record x, z, U1 record mapreduce , freqgrid 2 end , phase velocities 1 do f, c return broadcast tgrid do t real U1 x, z, t, inv c , 2 pi f, getη inv c , medium.β₁ , getη inv c , medium.β₁ f ∈ freq rec.freqs end end fig Plot Layout uirevision 1, title \"Fundamental Mode Seismogram at freq rec.xrecpos km\", xaxis attr title \"Time s \" , yaxis attr title \"Amplitude\", range 500, 500 add trace fig, scatter x tgrid, y record, line color \"black\" add vline fig, freq rec.xrecpos medium.β₁, line color \"red\" add vline fig, freq rec.xrecpos medium.β₂, line color \"red\" add vline fig, freq rec.T, line color \"blue\" fillcolor \"LightSalmon\", opacity 0.5, layer \"below\", line width 0, plot fig end plot record freq rec.xrecpos, 0, U1 function plot Love waves t, medium, grid, U1, U2, modes xgrid, zgrid1, zgrid2 grid U1p mapreduce , modes.c do c return broadcast Iterators.product zgrid1, xgrid do z, x real U1 x, z, t, inv c , 2 pi freq rec.freq, getη inv c , medium.β₁ , getη inv c , medium.β₂ end end U2p mapreduce , modes.c do c return broadcast Iterators.product zgrid2, xgrid do z, x real U2 x, z, t, inv c , 2 pi freq rec.freq, getη inv c , medium.β₁ , getη inv c , medium.β₂ end end return U1p trace1 heatmap y zgrid1, x xgrid, zauto false, zmin 5, zmax 5, colorscale \"RdBu\", z U1p, showscale false trace2 heatmap y zgrid2, x xgrid, zauto false, zmin 5, zmax 5, colorscale \"RdBu\", z U2p, showscale false, layout Layout title \"Love wave Displacement\", xaxis title \"Distance x \", yaxis title \"Depth z \", width 600, height 500, yaxis scaleanchor \"x\", yaxis scaleratio 1, yaxis autorange \"reversed\", shapes Shape \"a\", type \"line\", x0 xgrid 1 , y0 medium.Hp, x1 xgrid end , y1 medium.Hp, line attr color \"black\", width 5 , Shape \"b\", type \"line\", x0 xgrid 1 , y0 0, x1 xgrid end , y1 0, line attr color \"black\", width 5, dash \"dot\" , annotations annotation for the first line attr text \"Boundary\", xref \"paper\", yref \"y\", x 0.1, y medium.Hp, font attr size 12 , showarrow false, borderpad 4, bgcolor \"white\", , annotation for the second line attr text \"Free Surface\", xref \"paper\", yref \"y\", x 0.1, y 0, font attr size 12 , showarrow false, borderpad 4, bgcolor \"white\", , legend attr x 0, y 0.3, traceorder \"reversed\" return plot trace1, trace2 , layout end plot Love waves tt, medium, grid, U1, U2, modes function plot dispersion curves phase velocities, group velocities, freqgrid fig Plot Layout height 600, title \"Dispersion Curves\", Subplots shared xaxes true, rows 2, cols 1, subplot titles \"Phase Velocity\" \"Group Velocity\" , x title \"Frequency Hz \" add trace fig, scatter x freqgrid 2 end , y phase velocities 1 , name \"Fundamental Mode\" , row 1, col 1 add trace fig, scatter x freqgrid 2 end , y phase velocities 2 , name \"First Higher order Mode\" , row 1, col 1 add trace fig, scatter x freqgrid 2 end , y phase velocities 3 , name \"Second Higher order Mode\" , row 1, col 1 add trace fig, scatter x freqgrid 2 end , y phase velocities 4 , name \"Second Higher order Mode\" , row 1, col 1 add trace fig, scatter x freqgrid 2 end , y group velocities 1 , name \"Fundamental Mode\" , row 2, col 1 add trace fig, scatter x freqgrid 2 end , y group velocities 2 , name \"First Higher order Mode\" , row 2, col 1 add trace fig, scatter x freqgrid 2 end , y group velocities 3 , name \"Second Higher order Mode\" , row 2, col 1 add trace fig, scatter x freqgrid 2 end , y group velocities 4 , name \"Second Higher order Mode\" , row 2, col 1 plot fig end plot dispersion curves phase velocities, group velocities, freqgrid function plot phase t fig Plot Layout title \"Stationary Phase Analysis\", yaxis attr title \"Phase kx ωt \" , xaxis attr title \"Frequency Hz \" t1 freq rec.xrecpos medium.β₁ 0.5 t2 freq rec.xrecpos medium.β₂ 2 phase wavenumbers 1 freq rec.xrecpos . 2pi . freqgrid 2 end t min points, findminima phase max points, findmaxima phase add trace fig, scatter x freqgrid 2 end , y phase, name string t plot fig map min points do p add vline fig, freqgrid 2 end p end map max points do p add vline fig, freqgrid 2 end p end plot fig end plot phase freq rec.T md\"\"\" TODO Have a plot that shows how a wavelet disperses as it propagates, which needs a sum of frequencies, with some initial phases assigned. \"\"\" "},{"url":"surfacewaves/Rayleigh-function/","title":"Rayleigh Function","tags":["surfacewaves"],"text":" A Pluto.jl notebook v0.20.5 frontmatter title \"Rayleigh Function\" tags \"surfacewaves\" layout \"layout.jlhtml\" description \"Particles may go round and round, but don't worry, let the Rayleigh wave pass by This notebook will help you understand the physics behind it.\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element format off return quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end format on end begin using Symbolics using SymbolicUtils using LinearAlgebra using Latexify using LaTeXStrings using PlutoUI using PlutoTeachingTools using PlutoPlotly using Measures using Roots using Parameters end ChooseDisplayMode PlutoUI.TableOfContents md\"\"\" Rayleigh Function This notebook aims to provide a comprehensive understanding of Rayleigh waves. Unlike previous discussions on reflection coefficients where the incident wave is homogeneous and at least one of the scattered waves is homogeneous, this notebook focuses on scenarios where all interacting plane waves are inhomogeneous. Specifically, we examine inhomogeneous P and SV waves interacting with the free surface of a medium. This approach allows us to delve deeper into the unique characteristics and behaviors of Rayleigh waves in seismology. Interactive Seismology Notebooks https pawbz.github.io Interactive Seismology.jl Instructor Pawan Bharadwaj , Indian Institute of Science, Bengaluru, India \"\"\" TwoColumnWideLeft md\"\"\" Choose the medium parameters of the half space using these sliders. Accordingly, we shall plot the Rayleigh function, where its root gives the phase velocity of the Rayleigh wave cᵣ . It can be noticed that this velocity is a few percent less than the shear wave speed. \"\"\", md\"\"\" α km sec bind αp PlutoUI.Slider range 4.0, stop 10.0, step 0.1 , default 6.0, show value true β km sec bind βp PlutoUI.Slider range 3.0, stop 6.0, step 0.1 , default 4.49, show value true ρ gm cm³ bind ρp PlutoUI.Slider range 2.0, stop 6.0, step 0.1 , default 2.9, show value true \"\"\" md\"\"\" In this document, we denote 2D spatial coordinates, angular frequency, time and necessary differential operators. \"\"\" syms x Real z Real ω Real t Real begin Dx Differential x Dz Differential z end syms ı Complex Real imaginary unit, going to substitute with im later md\"\"\" The medium is assumed to be homogeneous with uniform P and S wave velocities \\alpha and \\beta . We use p to denote the horizontal slowness. As both the P and SV waves are inhomogeneous, a necessary condition is ```math \\frac 1 \\alpha \\frac 1 \\beta p. ``` The Lame parameters are denoted using \\lambda and \\mu , and \\rho is mass density. \"\"\" syms α Real p Real β Real ρ Real λ Real μ Real tip md\"The inhomegeneous P and SV waves are coupled due to the fact that they share the same horizonal slowness p . If they are not coupled, one can show that the stress free conditions cannot be satisfied.\" md\"\"\" The vertical components of the slowness vectors corresponding to \\alpha and \\beta are imaginary. Here, we use \\eta to denote the imaginary part of the vertical components of the slowness vector. \"\"\" syms ηₚ Real ηₛ Real md\"The dispersion relation gives.\" ηₚ ~ sqrt p^2 1 α^2 ηₛ ~ sqrt p^2 1 β^2 syms Aₚ A Aₛ md\"\"\" Inhomogeneous Plane Waves We now derive the expression for an inhomogeneous plane wave with amplitude A and frequency ω , propagating in the x direction with slowness p . These waves exhibit exponential decay with increasing distance from the surface at z 0 . \"\"\" inhomo plane p, η, A A exp ω η z exp ı ω t p x md\"\"\" We now consider two harmonic plane waves that satisfy the scalar wave equations for P and SV potentials \\phi and \\psi . A p and A s denote the amplitudes of these potentials. \"\"\" ϕ inhomo plane p, ηₚ, Aₚ ψ inhomo plane p, ηₛ, Aₛ md\"\"\" Total Displacement The particle displacement due to the P wave. \"\"\" uₚ expand derivatives. Dx ϕ , Dz ϕ md\"Similarly for SV wave, we have.\" uₛ expand derivatives. Dz ψ , Dx ψ TwoColumnWideLeft md\"\"\" Rayleigh waves, a type of surface seismic wave, exhibit unique characteristics due to their elliptical particle motion. For a homogeneous medium, the phase velocity cᵣ of Rayleigh waves is independent of the frequency ω , indicating non dispersive behavior. To visualize the particle motion, we can select a frequency and adjust the time to generate a snapshot. Key observations include Particles move in an elliptical trajectory, which is retrograde at the free surface. The amplitude of particle motion decreases exponentially with depth, influenced by the frequency. At greater depths, the particle motion transitions to a prograde elliptical trajectory, dominated by the SV wave component. \"\"\", md\"\"\" angular frequency bind ωp PlutoUI.Slider range 0.05, stop 0.3, length 100 , show value true bind tp Clock 0.5 experimental plot individual components bind uplot MultiCheckBox uₚ \"P\", uₛ \"SV\" , default uₚ, uₛ \"\"\" md\"The total displacement field is given by summing the P and SV components. We denote the x and z components of the total displacement field using `ux` and `uz`.\" ux, uz uₚ . uₛ md\"\"\" Stress free Condition We now evaluate the stress components `σxz` and `σzz` on the free surface and apply the boundary conditions to estimate the ratio `Aₛ Aₚ` using both boundary conditions. Subsequently, we derive a condition that must be satisfied for this ratio to be unique. This condition provides the Rayleigh function, and the roots of this function give the phase velocities of the Rayleigh waves. \"\"\" σxz expand derivatives μ Dx uz Dz ux | simplify σxz z0 substitute σxz, z 0, ı ı 1 | simplify σxz z0 ~ 0 Aratio1 Symbolics.symbolic linear solve σxz z0 ~ 0, Aₛ Aₚ | simplify σzz expand derivatives λ Dx ux Dz uz 2 μ Dz uz | simplify σzz z0 simplify substitute σzz, z 0, ı ı 1 Aratio2 Symbolics.symbolic linear solve σzz z0 ~ 0, Aₛ Aₚ | simplify md\"\"\" Rayleigh Function For a non trivial solution for `Aₚ` and `Aₛ`, the following equation must be satisfied. \"\"\" R1 diff arguments Aratio1 . reverse arguments Aratio2 | first | simplify md\"\"\" We will reparameterize the Rayleigh function using \\alpha , \\beta , and \\rho , and substitute ı^2 1 . This reparameterized function must be satisfied for a given medium. The root of this function provides the horizontal slowness p at which both the inhomogeneous P and SV plane waves propagate. \"\"\" md\"\"\" Towards plotting, we will now substitute the UI values of \\alpha , \\beta and \\rho . \"\"\" md\"\"\" We will now find the root of the Rayleigh function using the bisection method. \"\"\" md\"\"\" Rayleigh Waves We shall now substitute the zero of the Rayleigh function into the expressions of inhomogeneous P and SV planewaves that are channeled along the free surface. \"\"\" simplify substitute ux, Aₚ 1, Aₛ Aratio1 simplify substitute uz, Aₚ 1, Aₛ Aratio1 md\"\"\" Appendix \"\"\" Reparametrize an expression `x` using α, β and ρ, instead of λ, μ, η. Also substitutes ı^2 1. function subs αβρ x simplify substitute x, ı ı 1, λ α α ρ 2 β β ρ, μ β β ρ, ηₚ ηₚ p p 1 α^2, ηₛ ηₛ p p 1 β^2, ηₚ sqrt p p 1 α^2 , ηₛ sqrt p p 1 β^2 , μ β β ρ end R subs αβρ R1 Substitutes UI values of α, β, and ρ. function subs αβρ plot x simplify substitute subs αβρ x , α αp, β βp, ρ ρp end RUI build function subs αβρ plot R , p, expression Val false begin cmin 1.0 minimum possible speed cmax βp eps Float64 maximum speed, otherwise the SV wave will no longer be evanascent root cᵣ find zero c RUI inv c , cmin, cmax , Bisection md\"The root is cᵣ cᵣ km s \" end function subs all plot x simplify substitute subs αβρ plot x , p inv cᵣ , ı im, ω ωp, Aₚ 1, end uxp build function substitute subs all plot first sum uplot , Aₚ 1, Aₛ subs all plot Aratio1 , x, z, t, expression Val false uzp build function substitute subs all plot last sum uplot , Aₚ 1, Aₛ subs all plot Aratio1 , x, z, t, expression Val false md\"\"\" Plots \"\"\" default plotly template plotly dark function plot displacement field xgrid range 0, stop 500, length 10 zgrid range 0, stop 250, length 10 evaluate ux and uz on the grids ux real uxp x, z, tp for x in xgrid, z in zgrid uz real uzp x, z, tp for x in xgrid, z in zgrid normalize ux and uz ux . abs uxp 0, 0, 0 uz . abs uxp 0, 0, 0 strength vec sqrt. ux .^ 2 . uz .^ 2 xq x1 for x1 in xgrid, z1 in zgrid yq z1 for x1 in xgrid, z1 in zgrid scale 25 vels attr x xq i scale ux i , y yq i scale uz i , showarrow true, axref \"x\", ayref \"y\", text \"∘\", arrowcolor \"blue\", arrowsize strength i , arrowwidth 2, arrowhead 3, ax xq i , ay yq i for i in 1 length xq layout Layout uirevision 1, yaxis attr title \"Depth\", range 400, 100 , xaxis attr title \"Distance\", range 100, 600 , title text \"Rayleigh Displacement Field\", autosize false, width 700, height 500, margin attr l 50, r 50, b 50, t 65 , showlegend false, annotations vels fig Plot layout add trace fig, scatter y 0, 0 , x extrema xgrid , mode \"lines markers text\", text \"\", \"Free Surface\" , textfont attr family \"sans serif\", size 15, color \"Red\" , textposition \"top center\", line attr color \"Red\", width 2, return plot fig end plot displacement field function plot Rayleigh function fig Plot Layout title \"Rayleigh Function\", xaxis title \"Phase Velocity km s \", width 700, height 350 declare a range of speeds for plotting crange range cmin, stop cmax, length 100 add trace fig, PlutoPlotly.scatter x crange, y RUI inv c for c in crange , line attr width 3, color \"white\" , name \"Rayleigh Function\" add hline fig, 0.0, line attr dash \"dot\" add trace fig, PlutoPlotly.scatter x cᵣ, cᵣ , y 1, 1 , name \"Rayleigh Phase Velocity cᵣ \", line attr color \"Orange\", width 4, add trace fig, PlutoPlotly.scatter x αp, αp , y 1, 1 , name \"P wave Velocity α \", line attr color \"Red\", width 4, add trace fig, PlutoPlotly.scatter x βp, βp , y 1, 1 , name \"S wave Velocity β \", line attr color \"Blue\", width 4, relayout fig PlutoPlotly.plot fig end plot Rayleigh function "}]