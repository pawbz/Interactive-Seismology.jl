### A Pluto.jl notebook ###
# v0.19.22

using Markdown
using InteractiveUtils

# This Pluto notebook uses @bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of @bind gives bound variables a default value (instead of an error).
macro bind(def, element)
    quote
        local iv = try Base.loaded_modules[Base.PkgId(Base.UUID("6e696c72-6542-2067-7265-42206c756150"), "AbstractPlutoDingetjes")].Bonds.initial_value catch; b -> missing; end
        local el = $(esc(element))
        global $(esc(def)) = Core.applicable(Base.get, el) ? Base.get(el) : iv(el)
        el
    end
end

# ╔═╡ dcaeb6a8-78d1-11ec-24fb-4509de0a7d7b
begin
    using Pluto
    using PlutoPlotly
    using PlutoTest
    using PlutoTeachingTools
    using LinearAlgebra
    using Distances
    using StatsBase
    using PlutoUI
    using TikzPictures
    using Colors, ColorSchemes
end

# ╔═╡ 7e72f1fc-345a-4a2d-b03b-8a7549ef6efc
ChooseDisplayMode()

# ╔═╡ 35c21158-fc55-45f6-930d-7b82c2c0685d
TableOfContents()

# ╔═╡ d9d53d21-09ee-47cd-b661-8787de32f2c1
md"""
# Ray Tomography
Seismic tomography is a method used to create images of the Earth's subsurface using seismic waves generated by earthquakes or explosions. These waves, known as P-, S-, and surface waves, can be used to create tomographic models with varying resolutions, depending on factors such as the wavelength of the seismic waves, the distance of the wave source, and the source-receiver geometry. The process of creating these models is treated as an inverse problem, and this notebook specifically focuses on analyzing 2-D inversions of first-arrival travel times.

By interacting with this notebook, users will be able to:

* Visualize tomograms for various source-receiver configurations
* Understand the concept of ill-posedness and the need for regularization
* Learn about the principle of backpropagation
* And gain more insight into the field of seismic tomography

##### [Interactive Seismology Notebooks](https://pawbz.github.io/Interactive-Seismology.jl/)

Instructor: *Pawan Bharadwaj*,
Indian Institute of Science, Bengaluru, India
"""

# ╔═╡ f9089736-3744-4382-8bc0-68fc04b3cddb
md"""
## Forward Problem
In order to create an accurate image of the Earth's subsurface using seismic tomography, we need to first generate observed data. To do this, we will construct the forward operator $G$, which takes into account the model grid and the source-receiver setup. The forward problem is represented by the equation $G\times\,s$, where $s$ is the model (slowness) vector.
In this process, we will generate true seismic velocity and slowness arrays based on user input. These arrays will then be used to generate synthetic observations. 
"""

# ╔═╡ 5bbb5349-534a-48e2-8da5-08527784bc87
md"""
### Row Picture
The row picture of $G \times s$ illustrates the relationship between the slowness vector and the traveltime errors. It shows that the raypaths (rows of $G$) that have the strongest correlation with the slowness vector will have a higher traveltime error when compared to the others. This is because when a raypath passes through all the perturbed pixels of the medium, it will experience a greater delay, leading to a higher traveltime residual. In other words, the higher the correlation of a raypath with slowness vector, the more it is affected by the perturbations in the medium and hence higher traveltime residual.
"""

# ╔═╡ 7883ecc5-b01f-49d3-98c0-67676701e90e
md"### Column Picture
The column picture of $G \times s$ gives insight into the tradeoff between different pixels in the model grid. When two pixels are illuminated by a similar set of raypaths, they appear as dependent columns in the matrix $G$. As a result, these dependent columns can be linearly combined to produce no effect on the observed travel times. This means that changes in the slowness in these dependent pixels will not have any effect on the calculated traveltimes, and thus the solution to the inverse problem is not unique. It is important to keep in mind the tradeoff between these pixels while solving the inverse problem, and regularization may be needed to obtain a unique solution.
"

# ╔═╡ 792e9b54-3438-4338-913c-190565d38029
md"""## Backpropagation
Gradient is formed by backpropagation of traveltime residuals.
"""


# ╔═╡ 9a5bac04-d1d9-49f4-b7c4-b18bfdd436ef
md"""
### Column Picture
The column picture of $G^{\text{T}} \times \Delta d$ illustrates how the traveltime residuals are distributed across the model grid. It represents a weighted sum of the raypaths, where the weights are given by the traveltime residuals. This means that higher values in the model will be spread along the raypaths whose associated traveltimes do not match the observed traveltimes.
"""

# ╔═╡ 6680a1f4-0cc5-4dc8-a0a2-f5b5014c712a
md"""### Row Picture
The row picture of $G^{\text{T}} \times \Delta d$ represents the correlation between the model pixels and the data residuals. It shows that the model pixels whose ray distribution corresponds with the data residuals are given a larger weight. In other words, pixels that are intersected by high-residual rays are highlighted, or this means that the pixels in the model that are most responsible for the residuals in the data will be given more weight in the image.
"""

# ╔═╡ 924555b0-5ddc-4ee5-ad32-4696f9fb47e4
md"""
## Inverse Problem
Here, we shall simply use the Moore-Penrose pseudoinverse to map the observed travel times to slowness estimates. Note that the forward operator will now be generated again, based on the user input on spatial sampling of the seismic slowness, which is usually smaller compared to what we have used for generating the observed data above. 
"""

# ╔═╡ 1bc87b69-a59c-4074-b57d-011bf5e3df73
md"Finally, we will take the inverse of slowness and reshape it to produce the final 2-D seismic velocity model."

# ╔═╡ b6300fcc-8073-4487-80a2-8739123c1469
md"Check if the observations are satisfied by the estimated model."

# ╔═╡ 8fb45733-6b2b-428a-9536-fe6b6e2f2aa3
md"""
As a sanity check, we will now test the operator `G` by computing travel times in a homogeneous medium analytically. This will make sure that raytracing is done correctly.
"""

# ╔═╡ 1547ff9a-0fa8-4295-94dd-73bd3678129f
# get inverse operator using SVD (damped least squares)
# also returns the singular values for viz.
# commented for now
function get_inverse_operator(G)
    U, S, V = svd(G)
    Gi = V * Diagonal(inv.(S .+ 1e-1)) * U'
    return Gi, S
end

# ╔═╡ df1f716a-f961-4f6b-821c-e1038f190449
md"## Uncertainity"

# ╔═╡ 27465f25-d6c7-4855-a20f-1142b8cd3e9f
md"[Scree plot](https://en.wikipedia.org/wiki/Scree_plot#:~:text=In%20multivariate%20statistics%2C%20a%20scree,principal%20component%20analysis%20(PCA).)"

# ╔═╡ 70e78f3d-a261-43b1-a590-966c7c96021c
md"Slider to choose the row of the Hessian matrix."

# ╔═╡ ae30bfd8-6b42-4aa7-90f2-e7303b359b94
md"""
We will now vis. rows of data and model resolution matrices.
"""

# ╔═╡ 010a12e2-1abc-4471-a81b-005c30578e63
md"## Appendix"

# ╔═╡ 442255bc-4d49-4602-b0d4-a935871a9fe8
# define a for modelling and inversion

# ╔═╡ cf99206b-8a78-40de-bd0d-20bb37ec0b09
md"""
`get_medium` generates a medium with a background velocity of 2000 m/s,
and a circular perturbation. It outputs the velocity matrix and the corresponding slowness vector.
"""

# ╔═╡ 2bf78ef8-8fc5-4e0b-a7c0-f72757bae6f6
function get_medium(xgrid, zgrid, pert=nothing)
    nx = length(xgrid)
    nz = length(zgrid)
    ctrue = 2000.0 * ones(nz - 1, nx - 1)
    if (!(pert === nothing)) # check if perturbation is required
        for iz in 1:nz-1, ix in 1:nx-1
            if (sqrt(sum(abs2.([xgrid[ix] - pert.x, zgrid[iz] - pert.z]))) < pert.r)
                ctrue[iz, ix] += 100
            end
        end
    end
    strue = vec(inv.(ctrue))
    return ctrue, strue
end

# ╔═╡ 3d1cd3b5-66f5-44a8-805a-496e801be858
md"""
### Methods for straight-ray tracing
"""

# ╔═╡ 1040f2b8-3999-46fb-9e3d-c163264a4f8a
@warn "The straight-ray implementation in this notebook requires sources and receivers on the outer edge of the 2-D grid, i.e., arbitrary positions are not allowed."

# ╔═╡ f71dbf67-c6c2-444b-acf4-0569ee85bc6b
# careful before changing these; only place sources and receivers on the outer edge of the grid
function get_source_receivers_outer_edge(xgrid, zgrid, ns, nr)
    srcz = (ns == 1) ? [sample(zgrid)] : range(zgrid[2], stop=zgrid[end-1], length=ns)
    srcx = fill(xgrid[1], ns)
    recz = (nr == 1) ? [sample(zgrid)] : range(zgrid[2], stop=zgrid[end-1], length=nr)
    recx = fill(xgrid[end], nr)
    return srcz, srcx, recx, recz
end

# ╔═╡ 565af43c-8b85-4ab4-b72d-ac9560efd4fc
# find intersect b/w two segments
# returns nothing if 
# * segments are parallel 
# * segments do not intersect
# else returns 
# * the point of intersection (including C and D i.e., h==0 or h==1)
function find_intersect(A1, A2, B1, B2, C1, C2, D1, D2)
    # E = B - A
    # F = D - C = [D1-C1, D2-C2]
    # P = [A2-B2, B1-A1]
    dFP = (D1 - C1) * (A2 - B2) + (B1 - A1) * (D2 - C2)
    if (iszero(dFP)) # when parallel
        return nothing
    end
    h = ((A1 - C1) * (A2 - B2) + (A2 - C2) * (B1 - A1)) / dFP
    if (((h * (h - 1)) <= 0) | (h ≈ 0) | (h ≈ 1)) # h should be in (0, 1) or h==0 or h==1
        return [C1 + h * (D1 - C1), C2 + h * (D2 - C2)]
    else
        return nothing
    end
end

# ╔═╡ 3e2460ec-102a-4d3c-a4c5-5d6c6e2193ec
function find_length_in_cell(xmin, xmax, zmin, zmax, A1, A2, B1, B2)
    P1 = find_intersect(A1, A2, B1, B2, xmin, zmin, xmin, zmax)
    P2 = find_intersect(A1, A2, B1, B2, xmin, zmin, xmax, zmin)
    P3 = find_intersect(A1, A2, B1, B2, xmin, zmax, xmax, zmax)
    P4 = find_intersect(A1, A2, B1, B2, xmax, zmin, xmax, zmax)

    P = filter(x -> !(x === nothing), [P1, P2, P3, P4])
    P = unique(P)
    if (length(P) >= 2)
        # remove sides that will be otherwise counted twice by adjacent cells
        if (([xmin, zmax] ∈ P) & ([xmax, zmax] ∈ P))
            return 0
        elseif (([xmax, zmin] ∈ P) & ([xmax, zmax] ∈ P))
            return 0
        else
            return maximum(broadcast(x -> sqrt(sum(abs2.(x))), diff(P)))
        end
    else
        return 0
    end
end


# ╔═╡ 82d3a20f-ea2b-47e6-96df-45fa568da9f8
function get_forw_operator(xgrid, zgrid, srcx, srcz, recx, recz)
    nx = length(xgrid)
    nz = length(zgrid)
    ns = length(srcx)
    nr = length(recx)
    G = zeros(ns * nr, (nx - 1) * (nz - 1))
    for is in 1:ns, ir in 1:nr, iz in 1:nz-1, ix in 1:nx-1
        G[ir+(is-1)*nr, iz+(ix-1)*(nz-1)] = find_length_in_cell(xgrid[ix], xgrid[ix+1], zgrid[iz], zgrid[iz+1], srcx[is], srcz[is], recx[ir], recz[ir])
    end
    return G
end

# ╔═╡ 4dd5df1f-f0bc-49ec-a533-4498ed17d223
md"""
### UI
"""

# ╔═╡ 208932c4-a57b-487d-9d3b-f165b4a4a4ed
function perturbation_input(xgrid, zgrid)
    nx = length(xgrid)
    nz = length(zgrid)
    return PlutoUI.combine() do Child
        p = [
            md"""
            x= $(Child("x", Slider(xgrid, default=xgrid[div(nx,2)], show_value=true)))
                     and z= $(Child("z", Slider(zgrid, default=zgrid[div(nz,2)], show_value=true)))
                     """,
        ]
        r = [
            md"""
            $(Child("r", Slider(range(10, stop=500, length=10), default=330, show_value=true)))
            """,]

        md"""### Medium Parameters
Circular perturbation at $(p) with radius ∈ [10, 500] m
	$(r)
 """
    end
end

# ╔═╡ 7e6ae5d6-ff89-45f5-914a-c58d3e185041
function resolution_input()
    return PlutoUI.combine() do Child
        d = [
            md"""
            Resolution (m) of true $(Child("ds", Slider(range(10,stop=200), default=25, show_value=true)))
            and inverted $(Child("ds_inv", Slider(range(10,stop=200), default=150, show_value=true))) media
            """,
        ]

        md"$(d)"
    end
end

# ╔═╡ 32a104fe-bf42-4980-887e-213b904e4d9b
@bind res confirm(resolution_input())

# ╔═╡ da873791-517d-4ac3-80f8-ceae5808be24
begin
    xgrid = range(-1000, stop=1000, length=floor(Int, 2000 / res.ds))
    zgrid = range(-1000, stop=1000, length=floor(Int, 2000 / res.ds))
end;

# ╔═╡ 78da0510-bf64-460e-82e7-59ba51c7c7f5
@bind pert confirm(perturbation_input(xgrid, zgrid))

# ╔═╡ 092331da-31a4-403d-b0cb-6e7705c6d81b
ctrue, strue = get_medium(xgrid, zgrid, pert);

# ╔═╡ 322d1562-2197-4131-bd17-93aed063e55c
begin
    xgrid_inv = range(-1000, stop=1000, length=floor(Int, 2000 / res.ds_inv))
    zgrid_inv = range(-1000, stop=1000, length=floor(Int, 2000 / res.ds_inv))
end;

# ╔═╡ fe682b63-2a06-4c32-8dc0-2f99ba48a873
@bind irowm Slider(1:(length(xgrid_inv)-1)*(length(zgrid_inv)-1), show_value=true, default=div(length(xgrid_inv) * length(zgrid_inv), 4))

# ╔═╡ 6702fde2-8847-407b-9d69-8e099374d6ce
function acq_input()
    return PlutoUI.combine() do Child
        d = [
            md"""
            Choose number of sources $(Child("ns", Slider(2:2:50, show_value=true, default=25)))
            and receivers $(Child("nr", Slider(2:2:50, show_value=true, default=25)))
            """,
        ]

        md"""
  ### Acquisition Setup
  $(d)
  """
    end
end

# ╔═╡ b741a0ec-726e-4ca5-98bf-10a03cdd2d57
@bind acq confirm(acq_input())

# ╔═╡ aa9782b5-88be-43a2-b1e1-d68f289a8fec
srcz, srcx, recx, recz = get_source_receivers_outer_edge(xgrid, zgrid, acq.ns, acq.nr);

# ╔═╡ 7df1cd87-40fa-45c1-9d85-1d491c414a18
Gtrue = get_forw_operator(xgrid, zgrid, srcx, srcz, recx, recz);

# ╔═╡ 3d201819-788b-4d90-b3a6-5483fc16ca81
dobs = Gtrue * strue;

# ╔═╡ dce75e41-274b-4e6a-8949-5caaeef7238a
G = get_forw_operator(xgrid_inv, zgrid_inv, srcx, srcz, recx, recz);

# ╔═╡ ad441089-505f-4da2-a345-548e8c4dd7d2
plot(heatmap(z=G), Layout(xaxis_title="model vector index", yaxis_autorange="reversed", yaxis_title="data vector index", width=450, title="Forward Operator"))

# ╔═╡ 1f66502a-bfbe-407f-b869-142f446dfdf6
Gi = pinv(G); # compute Moore-Penrose pseudoinverse

# ╔═╡ 329b24c6-fd22-4565-86f6-0881cb11942f
sest = Gi * dobs; # inverse map

# ╔═╡ 68b24556-4731-4b8f-b8a6-7aa7ffa38a92
cest = reshape((inv.(sest)), length(zgrid_inv) - 1, length(xgrid_inv) - 1);

# ╔═╡ a26fd943-dd6c-4e42-b6b0-5c9a17f31b19
plot([scatter(y=dobs, name="observed"), scatter(y=G * sest, name="predicted")], Layout(title="Data Residual (Observed Vs. Predicted Traveltimes)", xaxis_title="# raypath", yaxis_title="traveltime"))

# ╔═╡ acc8d4d0-a332-478f-8630-b22a10e7063b
function plot_G_scree()
    s = svd(G)
    plot(s.S, Layout(title="Singular values of G"))
end

# ╔═╡ aa36d8d7-a7d4-4aa4-b0ee-b07d36cc453b
plot_G_scree()

# ╔═╡ 3c7cddb2-72c6-45d1-a902-f66cb67d2835
plot(heatmap(z=transpose(G) * G), Layout(yaxis_autorange="reversed", title="the Hessian matrix", xaxis_title="model index", yaxis_title="model index", width=450))

# ╔═╡ f408a310-fce3-4876-819e-3457037bd48f
plot(heatmap(x=xgrid_inv, y=zgrid_inv, z=reshape((transpose(G)*G)[irowm, :], length(zgrid_inv) - 1, length(xgrid_inv) - 1)), Layout(yaxis_autorange="reversed", title="row of the Hessian matrix", width=450))

# ╔═╡ 5bdd9d83-3911-4ab5-aefb-5ead429ac5a5
plot(heatmap(x=xgrid_inv, y=zgrid_inv, z=reshape((Gi*G)[irowm, :], length(zgrid_inv) - 1, length(xgrid_inv) - 1)),
    Layout(yaxis_autorange="reversed", title="Row of Model Resolution Matrix", width=450))

# ╔═╡ 58867c8d-af21-48e9-ab0c-4472711e8eb0
begin
    tt_analytic = vec([(sqrt(sum(abs2.([srcx[is] - recx[ir], srcz[is] - recz[ir]])))) * inv(2000) for ir in 1:acq.nr, is in 1:acq.ns])
    tt_G = G * inv.(fill(2000, (length(zgrid_inv) - 1) * (length(xgrid_inv) - 1)))
    @test tt_analytic ≈ tt_G
end

# ╔═╡ 0bf44317-45cf-4899-8b1b-dfa1fe018db4
data_residual = tt_G - dobs;

# ╔═╡ 461859c0-5f94-469c-a054-4553045bac17
grad_slowness = reshape(G' * data_residual, length(zgrid_inv) - 1, length(xgrid_inv) - 1);

# ╔═╡ 848e19a7-73bc-40c4-98bb-310b9f9c8079
c = Dict(["Backpropagate the data residual" => grad_slowness, "Estimate seismic velocity" => cest])

# ╔═╡ 7608a5c1-20b1-4d49-b12b-a8f2daef192b
md"""
What do you want to do? $(@bind ckey Select(collect(keys(c))))
"""

# ╔═╡ 1807eb3a-ce0b-46fe-8c70-fa4af3d9ebad
@bind irowd Slider(1:acq.nr*acq.ns, show_value=true)

# ╔═╡ a3bf8549-fff8-4423-8a87-a81cb21f9eb1
plot((G*Gi)[irowd, :], Layout(title="Row of data resolution matrix", xaxis_title="raypath index"))

# ╔═╡ b338591d-cc11-4e9e-827e-7fcee5b2d38b
md"### Plots"

# ╔═╡ b1350eb1-059e-4f83-a539-2e2befc3dabb
function plot_models()

    fig = Plot(Layout(yaxis_autorange="reversed", height=300, width=650, title=attr(font_size=12,), font=attr(
            size=10), yaxis=attr(scaleanchor="x"), Subplots(shared_xaxes=true, shared_yaxes=true, horizontal_spacing=0.3, rows=1, cols=2, subplot_titles=["True Seismic Velocity" ckey])))
    add_trace!(fig, heatmap(
            x=xgrid,
            y=zgrid,
            z=ctrue, colorscale="jet", colorbar_x=0.35), row=1, col=1)
    add_trace!(fig, heatmap(
            x=xgrid_inv,
            y=zgrid_inv,
            z=c[ckey], colorscale="jet", colorbar_x=1.0), row=1, col=2)

    return PlutoPlotly.plot(fig)

end

# ╔═╡ 842ec98f-505a-4873-9c64-725e2f92cbb9
plot_models()

# ╔═╡ 44eddeed-1763-4c04-b213-b7469983286d
data_residual_colors = get.(Ref(colorschemes[:seismic]), (data_residual .- minimum(data_residual)) ./ maximum(data_residual));

# ╔═╡ 1161cc82-6b2d-42e0-99fe-2dfb1a2d00b6
ray_setup = broadcast(reshape(1:acq.nr, acq.nr, 1), reshape(1:acq.ns, 1, acq.ns)) do ir, is
    scatter(x=[srcx[is], recx[ir]], y=[srcz[is], recz[ir]], marker=attr(symbol=["asterisk", "triangle-down"], size=[10, 10], line=attr(color="black"), color=data_residual_colors[ir+(is-1)*acq.nr]), opacity=0.15, mode="lines+markers",)
end;

# ╔═╡ d7dd7859-9489-4bfc-bc77-edec76fe96f2
function plot_ray_setup()
    return plot(vec(ray_setup), Layout(yaxis_autorange="reversed", font=attr(
            size=10), showlegend=false, width=450, title="Ray Geometry<br>(red ray paths have higher data residuals)", yaxis_tickvals=zgrid_inv, xaxis_tickvals=xgrid_inv, xaxis=attr(title="x", ticks="outside", tickwidth=1, tickcolor="black", ticklen=10, gridcolor="gray"), yaxis=attr(title="z", scaleanchor="x", ticks="outside", tickwidth=1, tickcolor="black", ticklen=10, gridcolor="gray"), xaxis_zeroline=false, yaxis_zeroline=false,))
end


# ╔═╡ 4509e5b8-8d54-47e1-9ba7-b4929fd2d2fc
plot_ray_setup()

# ╔═╡ ce416101-f2e1-4b67-a166-b099325c3be2
md"### Tikz"

# ╔═╡ 6428269b-4821-48a3-b46b-38a06bf9aa1a
tikz_default_options = raw"""
  background rectangle/.style={fill=white}, show background rectangle,
  """

# ╔═╡ d974f740-2c3e-4225-bed8-f444bccde910
tikz_preamble = raw"""
  \usepackage{tikz}
  \usepackage{tikz}
  \usetikzlibrary{fit, matrix, shapes.geometric}
  \tikzset{% use tikzset, not tikzstyle
      cell/.style={
          rectangle, rounded corners=5pt, draw,
      }
  }
  \tikzset{% use tikzset, not tikzstyle
      cellv/.style={
          rectangle, rounded corners=5pt, draw, rotate=90,
      }
  }
  \usepackage{xifthen}
  \usetikzlibrary{hobby}
  \usepackage{pgfplots}
  \usepackage{fontawesome}
  \usepackage{bm,amsfonts,amsmath}
  \usetikzlibrary{backgrounds,pgfplots.groupplots,snakes}
  \usepgfplotslibrary{patchplots}
  \pgfplotsset{try min ticks=2}
  \usepackage{pgfplotstable} 
  \usetikzlibrary{plotmarks,positioning,spy}
  \usetikzlibrary{shapes.geometric, arrows, fadings}
  \usepgfplotslibrary{groupplots, polar}
  \usepackage[space]{grffile}

  \usetikzlibrary{%
              decorations.pathreplacing,%
                  decorations.pathmorphing%
                  }
                  \usetikzlibrary{positioning,fit,backgrounds}



  \usetikzlibrary{shapes,arrows}
  \usetikzlibrary{decorations.markings}
  \usetikzlibrary{patterns}
  \usetikzlibrary{plotmarks}
  \usetikzlibrary{fit}
  \usetikzlibrary{intersections}
  \usepgfplotslibrary{fillbetween}

    \pgfplotsset{
                axis line style={black!10},
                    every axis label/.append style ={black!10},
                    every axis title/.append style ={black!10},
                        every tick label/.append style={black!10}  
                          }

  % need for pgfplots
  \newcommand{\axisz}{0cm}
  \newcommand{\axisx}{0cm}

  \usetikzlibrary{positioning}
  \usetikzlibrary{shapes.geometric}
  \usetikzlibrary{backgrounds}
  """

# ╔═╡ d06052d3-07c3-43b6-909d-b31b06097fd3
# t1, t2, t3, tv are texts
# s1 and s2 are labels with sizes
plot_tikzrow(t1, t2, tn, tv; s1="", s2="") = TikzPicture(L"""
   \matrix[
              matrix of nodes, nodes in empty cells,
              minimum width=4cm,
              column sep=4pt,
              row sep=10pt,
              text height=2ex, text depth=.25ex,
              minimum height=4ex,
  left delimiter={[},
          right delimiter={]},
              ] (m) {
              |[cell]| %$(t1) \\
  |[cell]| %$(t2) \\
  |[cell]| $\cdots$ \\
   			|[cell]| %$(tn) \\
          } ; 
  \matrix[
   right=of m,
              matrix of nodes, nodes in empty cells,
              %minimum width=4cm,
              column sep=4pt,
              row sep=10pt,
              text height=2ex, text depth=.25ex,
              %minimum height=4cm,
  left delimiter={[},
          right delimiter={]},
  ] (m2) {
           |[rotate=90]| %$(tv) \\
          } ;

  \node [below of=m2, node distance = 5em,] () {%$(s2)}; 
  \node [below of=m, node distance = 6em,] () {%$(s1)}; 

  """, options=tikz_default_options, preamble=tikz_preamble, width="12cm")

# ╔═╡ 8037f78d-8938-42fc-98a2-210b442c00f0
plot_tikzrow("raypath 1", "raypath 2", "raypath K", "slowness vector", s1="K×N", s2="N×1")

# ╔═╡ cad88757-7a23-4c99-84fe-219d9337a1f7
plot_tikzrow("model pixel 1", "model pixel 2", "model pixel N", "data residual", s1="N×K", s2="K×1")

# ╔═╡ 0d000f59-ecb2-4fc9-9f21-c60eac17b3bf
# t1, t2, t3, tv are texts
# s1 and s2 are labels with sizes
plot_tikzcol(t1, t2, tn, tv; s1="", s2="") = TikzPicture(L"""
   \matrix[
              matrix of nodes, nodes in empty cells,
              minimum width=4cm, minimum height=1cm,
              column sep=4pt,
              row sep=10pt,
  %            text height=2ex, 
  rotate=90,
  text depth=.25ex,
  left delimiter={[},
          right delimiter={]},
              ] (m) {
              |[cellv]| %$(t1) & |[cellv]| %$(t2) & |[cellv]| $\cdots$ & |[cellv]| %$(tn) \\ 
          } ;
  \matrix[
   right=of m,
              matrix of nodes, nodes in empty cells,
              %minimum width=4cm,
              column sep=4pt,
              row sep=10pt,
              text height=2ex, text depth=.25ex,
              %minimum height=4cm,
  left delimiter={[},
          right delimiter={]},
  ] (m2) {
           |[rotate=90]| %$(tv) \\
          } ;
  \node [below of= m2,node distance = 5em,] () {%$(s2)}; 
  \node [below of= m, node distance = 7em,] () {%$(s1)};

  """, options=tikz_default_options, preamble=tikz_preamble, width="12cm")

# ╔═╡ 5dd62dd3-fc67-4043-9579-aea1b1a922a9
plot_tikzcol("model pixel 1", "model pixel 2", "model pixel N", "slowness vector", s1="K×N", s2="N×1")

# ╔═╡ 68c959c7-b8e9-4992-b4ce-a793d1a34d20
plot_tikzcol("raypath 1", "raypath 2", "raypath K", "data residual", s1="N×K", s2="K×1")

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
ColorSchemes = "35d6a980-a343-548e-a6ea-1d62b119f2f4"
Colors = "5ae59095-9a9b-59fe-a467-6f913c188581"
Distances = "b4f34e82-e78d-54a5-968a-f98e89d6e8f7"
LinearAlgebra = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"
Pluto = "c3e4b0f8-55cb-11ea-2926-15256bba5781"
PlutoPlotly = "8e989ff0-3d88-8e9f-f020-2b208a939ff0"
PlutoTeachingTools = "661c6b06-c737-4d37-b85c-46df65de6f69"
PlutoTest = "cb4044da-4d16-4ffa-a6a3-8cad7f73ebdc"
PlutoUI = "7f904dfe-b85e-4ff6-b463-dae2292396a8"
StatsBase = "2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91"
TikzPictures = "37f6aa50-8035-52d0-81c2-5a1d08754b2d"

[compat]
ColorSchemes = "~3.20.0"
Colors = "~0.12.10"
Distances = "~0.10.8"
Pluto = "~0.19.22"
PlutoPlotly = "~0.3.6"
PlutoTeachingTools = "~0.2.8"
PlutoTest = "~0.2.2"
PlutoUI = "~0.7.50"
StatsBase = "~0.33.21"
TikzPictures = "~3.4.2"
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.8.5"
manifest_format = "2.0"
project_hash = "8eb93cdd62307fdc7fd915e0c737d9bae1dd2811"

[[deps.AbstractPlutoDingetjes]]
deps = ["Pkg"]
git-tree-sha1 = "8eaf9f1b4921132a4cff3f36a1d9ba923b14a481"
uuid = "6e696c72-6542-2067-7265-42206c756150"
version = "1.1.4"

[[deps.ArgTools]]
uuid = "0dad84c5-d112-42e6-8d28-ef12dabb789f"
version = "1.1.1"

[[deps.Artifacts]]
uuid = "56f22d72-fd6d-98f1-02f0-08ddc0907c33"

[[deps.Base64]]
uuid = "2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"

[[deps.BitFlags]]
git-tree-sha1 = "43b1a4a8f797c1cddadf60499a8a077d4af2cd2d"
uuid = "d1d4a3ce-64b1-5f1a-9ba4-7e7e69966f35"
version = "0.1.7"

[[deps.Bzip2_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "19a35467a82e236ff51bc17a3a44b69ef35185a2"
uuid = "6e34b625-4abd-537c-b88f-471c36dfa7a0"
version = "1.0.8+0"

[[deps.Cairo_jll]]
deps = ["Artifacts", "Bzip2_jll", "CompilerSupportLibraries_jll", "Fontconfig_jll", "FreeType2_jll", "Glib_jll", "JLLWrappers", "LZO_jll", "Libdl", "Pixman_jll", "Pkg", "Xorg_libXext_jll", "Xorg_libXrender_jll", "Zlib_jll", "libpng_jll"]
git-tree-sha1 = "4b859a208b2397a7a623a03449e4636bdb17bcf2"
uuid = "83423d85-b0ee-5818-9007-b63ccbeb887a"
version = "1.16.1+1"

[[deps.ChainRulesCore]]
deps = ["Compat", "LinearAlgebra", "SparseArrays"]
git-tree-sha1 = "c6d890a52d2c4d55d326439580c3b8d0875a77d9"
uuid = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
version = "1.15.7"

[[deps.ChangesOfVariables]]
deps = ["ChainRulesCore", "LinearAlgebra", "Test"]
git-tree-sha1 = "485193efd2176b88e6622a39a246f8c5b600e74e"
uuid = "9e997f8a-9a97-42d5-a9f1-ce6bfc15e2c0"
version = "0.1.6"

[[deps.CodeTracking]]
deps = ["InteractiveUtils", "UUIDs"]
git-tree-sha1 = "0683f086e2ef8e2fdacd3f246b35c59e7088b283"
uuid = "da1fd8a2-8d9e-5ec2-8556-3022fb5608a2"
version = "1.3.0"

[[deps.CodecZlib]]
deps = ["TranscodingStreams", "Zlib_jll"]
git-tree-sha1 = "9c209fb7536406834aa938fb149964b985de6c83"
uuid = "944b1d66-785c-5afd-91f1-9de20f533193"
version = "0.7.1"

[[deps.ColorSchemes]]
deps = ["ColorTypes", "ColorVectorSpace", "Colors", "FixedPointNumbers", "Random", "SnoopPrecompile"]
git-tree-sha1 = "aa3edc8f8dea6cbfa176ee12f7c2fc82f0608ed3"
uuid = "35d6a980-a343-548e-a6ea-1d62b119f2f4"
version = "3.20.0"

[[deps.ColorTypes]]
deps = ["FixedPointNumbers", "Random"]
git-tree-sha1 = "eb7f0f8307f71fac7c606984ea5fb2817275d6e4"
uuid = "3da002f7-5984-5a60-b8a6-cbb66c0b333f"
version = "0.11.4"

[[deps.ColorVectorSpace]]
deps = ["ColorTypes", "FixedPointNumbers", "LinearAlgebra", "SpecialFunctions", "Statistics", "TensorCore"]
git-tree-sha1 = "600cc5508d66b78aae350f7accdb58763ac18589"
uuid = "c3611d14-8923-5661-9e6a-0046d554d3a4"
version = "0.9.10"

[[deps.Colors]]
deps = ["ColorTypes", "FixedPointNumbers", "Reexport"]
git-tree-sha1 = "fc08e5930ee9a4e03f84bfb5211cb54e7769758a"
uuid = "5ae59095-9a9b-59fe-a467-6f913c188581"
version = "0.12.10"

[[deps.Compat]]
deps = ["Dates", "LinearAlgebra", "UUIDs"]
git-tree-sha1 = "7a60c856b9fa189eb34f5f8a6f6b5529b7942957"
uuid = "34da2185-b29b-5c13-b0c7-acf172513d20"
version = "4.6.1"

[[deps.CompilerSupportLibraries_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "e66e0078-7015-5450-92f7-15fbd957f2ae"
version = "1.0.1+0"

[[deps.Configurations]]
deps = ["ExproniconLite", "OrderedCollections", "TOML"]
git-tree-sha1 = "62a7c76dbad02fdfdaa53608104edf760938c4ca"
uuid = "5218b696-f38b-4ac9-8b61-a12ec717816d"
version = "0.17.4"

[[deps.DataAPI]]
git-tree-sha1 = "e8119c1a33d267e16108be441a287a6981ba1630"
uuid = "9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a"
version = "1.14.0"

[[deps.DataStructures]]
deps = ["Compat", "InteractiveUtils", "OrderedCollections"]
git-tree-sha1 = "d1fff3a548102f48987a52a2e0d114fa97d730f0"
uuid = "864edb3b-99cc-5e75-8d2d-829cb0a9cfe8"
version = "0.18.13"

[[deps.DataValueInterfaces]]
git-tree-sha1 = "bfc1187b79289637fa0ef6d4436ebdfe6905cbd6"
uuid = "e2d170a0-9d28-54be-80f0-106bbe20a464"
version = "1.0.0"

[[deps.Dates]]
deps = ["Printf"]
uuid = "ade2ca70-3891-5945-98fb-dc099432e06a"

[[deps.DelimitedFiles]]
deps = ["Mmap"]
uuid = "8bb1440f-4735-579b-a4ab-409b98df4dab"

[[deps.Distances]]
deps = ["LinearAlgebra", "SparseArrays", "Statistics", "StatsAPI"]
git-tree-sha1 = "49eba9ad9f7ead780bfb7ee319f962c811c6d3b2"
uuid = "b4f34e82-e78d-54a5-968a-f98e89d6e8f7"
version = "0.10.8"

[[deps.Distributed]]
deps = ["Random", "Serialization", "Sockets"]
uuid = "8ba89e20-285c-5b6f-9357-94700520ee1b"

[[deps.DocStringExtensions]]
deps = ["LibGit2"]
git-tree-sha1 = "2fb1e02f2b635d0845df5d7c167fec4dd739b00d"
uuid = "ffbed154-4ef7-542d-bbb7-c09d3a79fcae"
version = "0.9.3"

[[deps.Downloads]]
deps = ["ArgTools", "FileWatching", "LibCURL", "NetworkOptions"]
uuid = "f43a241f-c20a-4ad4-852c-f6b1247861c6"
version = "1.6.0"

[[deps.Expat_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "bad72f730e9e91c08d9427d5e8db95478a3c323d"
uuid = "2e619515-83b5-522b-bb60-26c02a35a201"
version = "2.4.8+0"

[[deps.ExproniconLite]]
deps = ["Pkg", "TOML"]
git-tree-sha1 = "c2eb763acf6e13e75595e0737a07a0bec0ce2147"
uuid = "55351af7-c7e9-48d6-89ff-24e801d99491"
version = "0.7.11"

[[deps.FileWatching]]
uuid = "7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee"

[[deps.FixedPointNumbers]]
deps = ["Statistics"]
git-tree-sha1 = "335bfdceacc84c5cdf16aadc768aa5ddfc5383cc"
uuid = "53c48c17-4a7d-5ca2-90c5-79b7896eea93"
version = "0.8.4"

[[deps.Fontconfig_jll]]
deps = ["Artifacts", "Bzip2_jll", "Expat_jll", "FreeType2_jll", "JLLWrappers", "Libdl", "Libuuid_jll", "Pkg", "Zlib_jll"]
git-tree-sha1 = "21efd19106a55620a188615da6d3d06cd7f6ee03"
uuid = "a3f928ae-7b40-5064-980b-68af3947d34b"
version = "2.13.93+0"

[[deps.Formatting]]
deps = ["Printf"]
git-tree-sha1 = "8339d61043228fdd3eb658d86c926cb282ae72a8"
uuid = "59287772-0a20-5a39-b81b-1366585eb4c0"
version = "0.4.2"

[[deps.FreeType2_jll]]
deps = ["Artifacts", "Bzip2_jll", "JLLWrappers", "Libdl", "Pkg", "Zlib_jll"]
git-tree-sha1 = "87eb71354d8ec1a96d4a7636bd57a7347dde3ef9"
uuid = "d7e528f0-a631-5988-bf34-fe36492bcfd7"
version = "2.10.4+0"

[[deps.FuzzyCompletions]]
deps = ["REPL"]
git-tree-sha1 = "e16dd964b4dfaebcded16b2af32f05e235b354be"
uuid = "fb4132e2-a121-4a70-b8a1-d5b831dcdcc2"
version = "0.5.1"

[[deps.Gettext_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "JLLWrappers", "Libdl", "Libiconv_jll", "Pkg", "XML2_jll"]
git-tree-sha1 = "9b02998aba7bf074d14de89f9d37ca24a1a0b046"
uuid = "78b55507-aeef-58d4-861c-77aaff3498b1"
version = "0.21.0+0"

[[deps.Glib_jll]]
deps = ["Artifacts", "Gettext_jll", "JLLWrappers", "Libdl", "Libffi_jll", "Libiconv_jll", "Libmount_jll", "PCRE2_jll", "Pkg", "Zlib_jll"]
git-tree-sha1 = "d3b3624125c1474292d0d8ed0f65554ac37ddb23"
uuid = "7746bdde-850d-59dc-9ae8-88ece973131d"
version = "2.74.0+2"

[[deps.HTTP]]
deps = ["Base64", "CodecZlib", "Dates", "IniFile", "Logging", "LoggingExtras", "MbedTLS", "NetworkOptions", "OpenSSL", "Random", "SimpleBufferStream", "Sockets", "URIs", "UUIDs"]
git-tree-sha1 = "37e4657cd56b11abe3d10cd4a1ec5fbdb4180263"
uuid = "cd3eb016-35fb-5094-929b-558a96fad6f3"
version = "1.7.4"

[[deps.Hyperscript]]
deps = ["Test"]
git-tree-sha1 = "8d511d5b81240fc8e6802386302675bdf47737b9"
uuid = "47d2ed2b-36de-50cf-bf87-49c2cf4b8b91"
version = "0.0.4"

[[deps.HypertextLiteral]]
deps = ["Tricks"]
git-tree-sha1 = "c47c5fa4c5308f27ccaac35504858d8914e102f9"
uuid = "ac1192a8-f4b3-4bfe-ba22-af5b92cd3ab2"
version = "0.9.4"

[[deps.IOCapture]]
deps = ["Logging", "Random"]
git-tree-sha1 = "f7be53659ab06ddc986428d3a9dcc95f6fa6705a"
uuid = "b5f81e59-6552-4d32-b1f0-c071b021bf89"
version = "0.2.2"

[[deps.IniFile]]
git-tree-sha1 = "f550e6e32074c939295eb5ea6de31849ac2c9625"
uuid = "83e8ac13-25f8-5344-8a64-a9f2b223428f"
version = "0.5.1"

[[deps.InteractiveUtils]]
deps = ["Markdown"]
uuid = "b77e0a4c-d291-57a0-90e8-8db25a27a240"

[[deps.InverseFunctions]]
deps = ["Test"]
git-tree-sha1 = "49510dfcb407e572524ba94aeae2fced1f3feb0f"
uuid = "3587e190-3f89-42d0-90ee-14403ec27112"
version = "0.1.8"

[[deps.IrrationalConstants]]
git-tree-sha1 = "630b497eafcc20001bba38a4651b327dcfc491d2"
uuid = "92d709cd-6900-40b7-9082-c6be49f344b6"
version = "0.2.2"

[[deps.IteratorInterfaceExtensions]]
git-tree-sha1 = "a3f24677c21f5bbe9d2a714f95dcd58337fb2856"
uuid = "82899510-4779-5014-852e-03e436cf321d"
version = "1.0.0"

[[deps.JLLWrappers]]
deps = ["Preferences"]
git-tree-sha1 = "abc9885a7ca2052a736a600f7fa66209f96506e1"
uuid = "692b3bcd-3c85-4b1f-b108-f13ce0eb3210"
version = "1.4.1"

[[deps.JSON]]
deps = ["Dates", "Mmap", "Parsers", "Unicode"]
git-tree-sha1 = "3c837543ddb02250ef42f4738347454f95079d4e"
uuid = "682c06a0-de6a-54ab-a142-c8b1cf79cde6"
version = "0.21.3"

[[deps.JpegTurbo_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "6f2675ef130a300a112286de91973805fcc5ffbc"
uuid = "aacddb02-875f-59d6-b918-886e6ef4fbf8"
version = "2.1.91+0"

[[deps.JuliaInterpreter]]
deps = ["CodeTracking", "InteractiveUtils", "Random", "UUIDs"]
git-tree-sha1 = "6a125e6a4cb391e0b9adbd1afa9e771c2179f8ef"
uuid = "aa1ae85d-cabe-5617-a682-6adf51b2e16a"
version = "0.9.23"

[[deps.LERC_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "bf36f528eec6634efc60d7ec062008f171071434"
uuid = "88015f11-f218-50d7-93a8-a6af411a945d"
version = "3.0.0+1"

[[deps.LZO_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "e5b909bcf985c5e2605737d2ce278ed791b89be6"
uuid = "dd4b983a-f0e5-5f8d-a1b7-129d4a5fb1ac"
version = "2.10.1+0"

[[deps.LaTeXStrings]]
git-tree-sha1 = "f2355693d6778a178ade15952b7ac47a4ff97996"
uuid = "b964fa9f-0449-5b57-a5c2-d3ea65f4040f"
version = "1.3.0"

[[deps.Latexify]]
deps = ["Formatting", "InteractiveUtils", "LaTeXStrings", "MacroTools", "Markdown", "OrderedCollections", "Printf", "Requires"]
git-tree-sha1 = "2422f47b34d4b127720a18f86fa7b1aa2e141f29"
uuid = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
version = "0.15.18"

[[deps.LazilyInitializedFields]]
git-tree-sha1 = "410fe4739a4b092f2ffe36fcb0dcc3ab12648ce1"
uuid = "0e77f7df-68c5-4e49-93ce-4cd80f5598bf"
version = "1.2.1"

[[deps.LibCURL]]
deps = ["LibCURL_jll", "MozillaCACerts_jll"]
uuid = "b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"
version = "0.6.3"

[[deps.LibCURL_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll", "Zlib_jll", "nghttp2_jll"]
uuid = "deac9b47-8bc7-5906-a0fe-35ac56dc84c0"
version = "7.84.0+0"

[[deps.LibGit2]]
deps = ["Base64", "NetworkOptions", "Printf", "SHA"]
uuid = "76f85450-5226-5b5a-8eaa-529ad045b433"

[[deps.LibSSH2_jll]]
deps = ["Artifacts", "Libdl", "MbedTLS_jll"]
uuid = "29816b5a-b9ab-546f-933c-edad1886dfa8"
version = "1.10.2+0"

[[deps.Libdl]]
uuid = "8f399da3-3557-5675-b5ff-fb832c97cbdb"

[[deps.Libffi_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "0b4a5d71f3e5200a7dff793393e09dfc2d874290"
uuid = "e9f186c6-92d2-5b65-8a66-fee21dc1b490"
version = "3.2.2+1"

[[deps.Libgcrypt_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Libgpg_error_jll", "Pkg"]
git-tree-sha1 = "64613c82a59c120435c067c2b809fc61cf5166ae"
uuid = "d4300ac3-e22c-5743-9152-c294e39db1e4"
version = "1.8.7+0"

[[deps.Libgpg_error_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "c333716e46366857753e273ce6a69ee0945a6db9"
uuid = "7add5ba3-2f88-524e-9cd5-f83b8a55f7b8"
version = "1.42.0+0"

[[deps.Libiconv_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "c7cb1f5d892775ba13767a87c7ada0b980ea0a71"
uuid = "94ce4f54-9a6c-5748-9c1c-f9c7231a4531"
version = "1.16.1+2"

[[deps.Libmount_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "9c30530bf0effd46e15e0fdcf2b8636e78cbbd73"
uuid = "4b2f31a3-9ecc-558c-b454-b3730dcb73e9"
version = "2.35.0+0"

[[deps.Libtiff_jll]]
deps = ["Artifacts", "JLLWrappers", "JpegTurbo_jll", "LERC_jll", "Libdl", "Pkg", "Zlib_jll", "Zstd_jll"]
git-tree-sha1 = "3eb79b0ca5764d4799c06699573fd8f533259713"
uuid = "89763e89-9b03-5906-acba-b20f662cd828"
version = "4.4.0+0"

[[deps.Libuuid_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "7f3efec06033682db852f8b3bc3c1d2b0a0ab066"
uuid = "38a345b3-de98-5d2b-a5d3-14cd9215e700"
version = "2.36.0+0"

[[deps.LinearAlgebra]]
deps = ["Libdl", "libblastrampoline_jll"]
uuid = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"

[[deps.LittleCMS_jll]]
deps = ["Artifacts", "JLLWrappers", "JpegTurbo_jll", "Libdl", "Libtiff_jll", "Pkg"]
git-tree-sha1 = "110897e7db2d6836be22c18bffd9422218ee6284"
uuid = "d3a379c0-f9a3-5b72-a4c0-6bf4d2e8af0f"
version = "2.12.0+0"

[[deps.LogExpFunctions]]
deps = ["ChainRulesCore", "ChangesOfVariables", "DocStringExtensions", "InverseFunctions", "IrrationalConstants", "LinearAlgebra"]
git-tree-sha1 = "0a1b7c2863e44523180fdb3146534e265a91870b"
uuid = "2ab3a3ac-af41-5b50-aa03-7779005ae688"
version = "0.3.23"

[[deps.Logging]]
uuid = "56ddb016-857b-54e1-b83d-db4d58db5568"

[[deps.LoggingExtras]]
deps = ["Dates", "Logging"]
git-tree-sha1 = "cedb76b37bc5a6c702ade66be44f831fa23c681e"
uuid = "e6f89c97-d47a-5376-807f-9c37f3926c36"
version = "1.0.0"

[[deps.LoweredCodeUtils]]
deps = ["JuliaInterpreter"]
git-tree-sha1 = "60168780555f3e663c536500aa790b6368adc02a"
uuid = "6f1432cf-f94c-5a45-995e-cdbf5db27b0b"
version = "2.3.0"

[[deps.MIMEs]]
git-tree-sha1 = "65f28ad4b594aebe22157d6fac869786a255b7eb"
uuid = "6c6e2e6c-3030-632d-7369-2d6c69616d65"
version = "0.1.4"

[[deps.MacroTools]]
deps = ["Markdown", "Random"]
git-tree-sha1 = "42324d08725e200c23d4dfb549e0d5d89dede2d2"
uuid = "1914dd2f-81c6-5fcd-8719-6d5c9610ff09"
version = "0.5.10"

[[deps.Markdown]]
deps = ["Base64"]
uuid = "d6f4376e-aef5-505a-96c1-9c027394607a"

[[deps.MbedTLS]]
deps = ["Dates", "MbedTLS_jll", "MozillaCACerts_jll", "Random", "Sockets"]
git-tree-sha1 = "03a9b9718f5682ecb107ac9f7308991db4ce395b"
uuid = "739be429-bea8-5141-9913-cc70e7f3736d"
version = "1.1.7"

[[deps.MbedTLS_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "c8ffd9c3-330d-5841-b78e-0817d7145fa1"
version = "2.28.0+0"

[[deps.Missings]]
deps = ["DataAPI"]
git-tree-sha1 = "f66bdc5de519e8f8ae43bdc598782d35a25b1272"
uuid = "e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28"
version = "1.1.0"

[[deps.Mmap]]
uuid = "a63ad114-7e13-5084-954f-fe012c677804"

[[deps.MozillaCACerts_jll]]
uuid = "14a3606d-f60d-562e-9121-12d972cd8159"
version = "2022.2.1"

[[deps.MsgPack]]
deps = ["Serialization"]
git-tree-sha1 = "fc8c15ca848b902015bd4a745d350f02cf791c2a"
uuid = "99f44e22-a591-53d1-9472-aa23ef4bd671"
version = "1.2.0"

[[deps.NetworkOptions]]
uuid = "ca575930-c2e3-43a9-ace4-1e988b2c1908"
version = "1.2.0"

[[deps.OpenBLAS_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "Libdl"]
uuid = "4536629a-c528-5b80-bd46-f80d51c5b363"
version = "0.3.20+0"

[[deps.OpenJpeg_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Libtiff_jll", "LittleCMS_jll", "Pkg", "libpng_jll"]
git-tree-sha1 = "76374b6e7f632c130e78100b166e5a48464256f8"
uuid = "643b3616-a352-519d-856d-80112ee9badc"
version = "2.4.0+0"

[[deps.OpenLibm_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "05823500-19ac-5b8b-9628-191a04bc5112"
version = "0.8.1+0"

[[deps.OpenSSL]]
deps = ["BitFlags", "Dates", "MozillaCACerts_jll", "OpenSSL_jll", "Sockets"]
git-tree-sha1 = "6503b77492fd7fcb9379bf73cd31035670e3c509"
uuid = "4d8831e6-92b7-49fb-bdf8-b643e874388c"
version = "1.3.3"

[[deps.OpenSSL_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "9ff31d101d987eb9d66bd8b176ac7c277beccd09"
uuid = "458c3c95-2e84-50aa-8efc-19380b2a3a95"
version = "1.1.20+0"

[[deps.OpenSpecFun_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "13652491f6856acfd2db29360e1bbcd4565d04f1"
uuid = "efe28fd5-8261-553b-a9e1-b2916fc3738e"
version = "0.5.5+0"

[[deps.OrderedCollections]]
git-tree-sha1 = "d321bf2de576bf25ec4d3e4360faca399afca282"
uuid = "bac558e1-5e72-5ebc-8fee-abe8a469f55d"
version = "1.6.0"

[[deps.PCRE2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "efcefdf7-47ab-520b-bdef-62a2eaa19f15"
version = "10.40.0+0"

[[deps.Parameters]]
deps = ["OrderedCollections", "UnPack"]
git-tree-sha1 = "34c0e9ad262e5f7fc75b10a9952ca7692cfc5fbe"
uuid = "d96e819e-fc66-5662-9728-84c9c7592b0a"
version = "0.12.3"

[[deps.Parsers]]
deps = ["Dates", "SnoopPrecompile"]
git-tree-sha1 = "478ac6c952fddd4399e71d4779797c538d0ff2bf"
uuid = "69de0a69-1ddd-5017-9359-2bf0b02dc9f0"
version = "2.5.8"

[[deps.Pixman_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "b4f5d02549a10e20780a24fce72bea96b6329e29"
uuid = "30392449-352a-5448-841d-b1acce4e97dc"
version = "0.40.1+0"

[[deps.Pkg]]
deps = ["Artifacts", "Dates", "Downloads", "LibGit2", "Libdl", "Logging", "Markdown", "Printf", "REPL", "Random", "SHA", "Serialization", "TOML", "Tar", "UUIDs", "p7zip_jll"]
uuid = "44cfe95a-1eb2-52ea-b672-e2afdf69b78f"
version = "1.8.0"

[[deps.PlotlyBase]]
deps = ["ColorSchemes", "Dates", "DelimitedFiles", "DocStringExtensions", "JSON", "LaTeXStrings", "Logging", "Parameters", "Pkg", "REPL", "Requires", "Statistics", "UUIDs"]
git-tree-sha1 = "56baf69781fc5e61607c3e46227ab17f7040ffa2"
uuid = "a03496cd-edff-5a9b-9e67-9cda94a718b5"
version = "0.8.19"

[[deps.Pluto]]
deps = ["Base64", "Configurations", "Dates", "Distributed", "FileWatching", "FuzzyCompletions", "HTTP", "HypertextLiteral", "InteractiveUtils", "Logging", "MIMEs", "Markdown", "MsgPack", "Pkg", "PrecompileSignatures", "REPL", "RegistryInstances", "RelocatableFolders", "SnoopPrecompile", "Sockets", "TOML", "Tables", "URIs", "UUIDs"]
git-tree-sha1 = "0ee5bd226e5b95e2232229f7c4a97309ccd8158b"
uuid = "c3e4b0f8-55cb-11ea-2926-15256bba5781"
version = "0.19.22"

[[deps.PlutoHooks]]
deps = ["InteractiveUtils", "Markdown", "UUIDs"]
git-tree-sha1 = "072cdf20c9b0507fdd977d7d246d90030609674b"
uuid = "0ff47ea0-7a50-410d-8455-4348d5de0774"
version = "0.0.5"

[[deps.PlutoLinks]]
deps = ["FileWatching", "InteractiveUtils", "Markdown", "PlutoHooks", "Revise", "UUIDs"]
git-tree-sha1 = "8f5fa7056e6dcfb23ac5211de38e6c03f6367794"
uuid = "0ff47ea0-7a50-410d-8455-4348d5de0420"
version = "0.1.6"

[[deps.PlutoPlotly]]
deps = ["AbstractPlutoDingetjes", "Colors", "Dates", "HypertextLiteral", "InteractiveUtils", "LaTeXStrings", "Markdown", "PlotlyBase", "PlutoUI", "Reexport"]
git-tree-sha1 = "dec81dcd52748ffc59ce3582e709414ff78d947f"
uuid = "8e989ff0-3d88-8e9f-f020-2b208a939ff0"
version = "0.3.6"

[[deps.PlutoTeachingTools]]
deps = ["Downloads", "HypertextLiteral", "LaTeXStrings", "Latexify", "Markdown", "PlutoLinks", "PlutoUI", "Random"]
git-tree-sha1 = "b970826468465da71f839cdacc403e99842c18ea"
uuid = "661c6b06-c737-4d37-b85c-46df65de6f69"
version = "0.2.8"

[[deps.PlutoTest]]
deps = ["HypertextLiteral", "InteractiveUtils", "Markdown", "Test"]
git-tree-sha1 = "17aa9b81106e661cffa1c4c36c17ee1c50a86eda"
uuid = "cb4044da-4d16-4ffa-a6a3-8cad7f73ebdc"
version = "0.2.2"

[[deps.PlutoUI]]
deps = ["AbstractPlutoDingetjes", "Base64", "ColorTypes", "Dates", "FixedPointNumbers", "Hyperscript", "HypertextLiteral", "IOCapture", "InteractiveUtils", "JSON", "Logging", "MIMEs", "Markdown", "Random", "Reexport", "URIs", "UUIDs"]
git-tree-sha1 = "5bb5129fdd62a2bbbe17c2756932259acf467386"
uuid = "7f904dfe-b85e-4ff6-b463-dae2292396a8"
version = "0.7.50"

[[deps.Poppler_jll]]
deps = ["Artifacts", "Cairo_jll", "Fontconfig_jll", "Glib_jll", "JLLWrappers", "JpegTurbo_jll", "Libdl", "Libtiff_jll", "OpenJpeg_jll", "Pkg", "libpng_jll"]
git-tree-sha1 = "e11443687ac151ac6ef6699eb75f964bed8e1faa"
uuid = "9c32591e-4766-534b-9725-b71a8799265b"
version = "0.87.0+2"

[[deps.PrecompileSignatures]]
git-tree-sha1 = "18ef344185f25ee9d51d80e179f8dad33dc48eb1"
uuid = "91cefc8d-f054-46dc-8f8c-26e11d7c5411"
version = "3.0.3"

[[deps.Preferences]]
deps = ["TOML"]
git-tree-sha1 = "47e5f437cc0e7ef2ce8406ce1e7e24d44915f88d"
uuid = "21216c6a-2e73-6563-6e65-726566657250"
version = "1.3.0"

[[deps.Printf]]
deps = ["Unicode"]
uuid = "de0858da-6303-5e67-8744-51eddeeeb8d7"

[[deps.REPL]]
deps = ["InteractiveUtils", "Markdown", "Sockets", "Unicode"]
uuid = "3fa0cd96-eef1-5676-8a61-b3b8758bbffb"

[[deps.Random]]
deps = ["SHA", "Serialization"]
uuid = "9a3f8284-a2c9-5f02-9a11-845980a1fd5c"

[[deps.Reexport]]
git-tree-sha1 = "45e428421666073eab6f2da5c9d310d99bb12f9b"
uuid = "189a3867-3050-52da-a836-e630ba90ab69"
version = "1.2.2"

[[deps.RegistryInstances]]
deps = ["LazilyInitializedFields", "Pkg", "TOML", "Tar"]
git-tree-sha1 = "ffd19052caf598b8653b99404058fce14828be51"
uuid = "2792f1a3-b283-48e8-9a74-f99dce5104f3"
version = "0.1.0"

[[deps.RelocatableFolders]]
deps = ["SHA", "Scratch"]
git-tree-sha1 = "90bc7a7c96410424509e4263e277e43250c05691"
uuid = "05181044-ff0b-4ac5-8273-598c1e38db00"
version = "1.0.0"

[[deps.Requires]]
deps = ["UUIDs"]
git-tree-sha1 = "838a3a4188e2ded87a4f9f184b4b0d78a1e91cb7"
uuid = "ae029012-a4dd-5104-9daa-d747884805df"
version = "1.3.0"

[[deps.Revise]]
deps = ["CodeTracking", "Distributed", "FileWatching", "JuliaInterpreter", "LibGit2", "LoweredCodeUtils", "OrderedCollections", "Pkg", "REPL", "Requires", "UUIDs", "Unicode"]
git-tree-sha1 = "feafdc70b2e6684314e188d95fe66d116de834a7"
uuid = "295af30f-e4ad-537b-8983-00126c2a3abe"
version = "3.5.2"

[[deps.SHA]]
uuid = "ea8e919c-243c-51af-8825-aaa63cd721ce"
version = "0.7.0"

[[deps.Scratch]]
deps = ["Dates"]
git-tree-sha1 = "30449ee12237627992a99d5e30ae63e4d78cd24a"
uuid = "6c6a2e73-6563-6170-7368-637461726353"
version = "1.2.0"

[[deps.Serialization]]
uuid = "9e88b42a-f829-5b0c-bbe9-9e923198166b"

[[deps.SimpleBufferStream]]
git-tree-sha1 = "874e8867b33a00e784c8a7e4b60afe9e037b74e1"
uuid = "777ac1f9-54b0-4bf8-805c-2214025038e7"
version = "1.1.0"

[[deps.SnoopPrecompile]]
deps = ["Preferences"]
git-tree-sha1 = "e760a70afdcd461cf01a575947738d359234665c"
uuid = "66db9d55-30c0-4569-8b51-7e840670fc0c"
version = "1.0.3"

[[deps.Sockets]]
uuid = "6462fe0b-24de-5631-8697-dd941f90decc"

[[deps.SortingAlgorithms]]
deps = ["DataStructures"]
git-tree-sha1 = "a4ada03f999bd01b3a25dcaa30b2d929fe537e00"
uuid = "a2af1166-a08f-5f64-846c-94a0d3cef48c"
version = "1.1.0"

[[deps.SparseArrays]]
deps = ["LinearAlgebra", "Random"]
uuid = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"

[[deps.SpecialFunctions]]
deps = ["ChainRulesCore", "IrrationalConstants", "LogExpFunctions", "OpenLibm_jll", "OpenSpecFun_jll"]
git-tree-sha1 = "ef28127915f4229c971eb43f3fc075dd3fe91880"
uuid = "276daf66-3868-5448-9aa4-cd146d93841b"
version = "2.2.0"

[[deps.Statistics]]
deps = ["LinearAlgebra", "SparseArrays"]
uuid = "10745b16-79ce-11e8-11f9-7d13ad32a3b2"

[[deps.StatsAPI]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "45a7769a04a3cf80da1c1c7c60caf932e6f4c9f7"
uuid = "82ae8749-77ed-4fe6-ae5f-f523153014b0"
version = "1.6.0"

[[deps.StatsBase]]
deps = ["DataAPI", "DataStructures", "LinearAlgebra", "LogExpFunctions", "Missings", "Printf", "Random", "SortingAlgorithms", "SparseArrays", "Statistics", "StatsAPI"]
git-tree-sha1 = "d1bf48bfcc554a3761a133fe3a9bb01488e06916"
uuid = "2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91"
version = "0.33.21"

[[deps.TOML]]
deps = ["Dates"]
uuid = "fa267f1f-6049-4f14-aa54-33bafae1ed76"
version = "1.0.0"

[[deps.TableTraits]]
deps = ["IteratorInterfaceExtensions"]
git-tree-sha1 = "c06b2f539df1c6efa794486abfb6ed2022561a39"
uuid = "3783bdb8-4a98-5b6b-af9a-565f29a5fe9c"
version = "1.0.1"

[[deps.Tables]]
deps = ["DataAPI", "DataValueInterfaces", "IteratorInterfaceExtensions", "LinearAlgebra", "OrderedCollections", "TableTraits", "Test"]
git-tree-sha1 = "1544b926975372da01227b382066ab70e574a3ec"
uuid = "bd369af6-aec1-5ad0-b16a-f7cc5008161c"
version = "1.10.1"

[[deps.Tar]]
deps = ["ArgTools", "SHA"]
uuid = "a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"
version = "1.10.1"

[[deps.Tectonic]]
deps = ["Pkg"]
git-tree-sha1 = "0b3881685ddb3ab066159b2ce294dc54fcf3b9ee"
uuid = "9ac5f52a-99c6-489f-af81-462ef484790f"
version = "0.8.0"

[[deps.TensorCore]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "1feb45f88d133a655e001435632f019a9a1bcdb6"
uuid = "62fd8b95-f654-4bbd-a8a5-9c27f68ccd50"
version = "0.1.1"

[[deps.Test]]
deps = ["InteractiveUtils", "Logging", "Random", "Serialization"]
uuid = "8dfed614-e22c-5e08-85e1-65c5234f0b40"

[[deps.TikzPictures]]
deps = ["LaTeXStrings", "Poppler_jll", "Requires", "Tectonic"]
git-tree-sha1 = "4e75374d207fefb21105074100034236fceed7cb"
uuid = "37f6aa50-8035-52d0-81c2-5a1d08754b2d"
version = "3.4.2"

[[deps.TranscodingStreams]]
deps = ["Random", "Test"]
git-tree-sha1 = "94f38103c984f89cf77c402f2a68dbd870f8165f"
uuid = "3bb67fe8-82b1-5028-8e26-92a6c54297fa"
version = "0.9.11"

[[deps.Tricks]]
git-tree-sha1 = "aadb748be58b492045b4f56166b5188aa63ce549"
uuid = "410a4b4d-49e4-4fbc-ab6d-cb71b17b3775"
version = "0.1.7"

[[deps.URIs]]
git-tree-sha1 = "074f993b0ca030848b897beff716d93aca60f06a"
uuid = "5c2747f8-b7ea-4ff2-ba2e-563bfd36b1d4"
version = "1.4.2"

[[deps.UUIDs]]
deps = ["Random", "SHA"]
uuid = "cf7118a7-6976-5b1a-9a39-7adc72f591a4"

[[deps.UnPack]]
git-tree-sha1 = "387c1f73762231e86e0c9c5443ce3b4a0a9a0c2b"
uuid = "3a884ed6-31ef-47d7-9d2a-63182c4928ed"
version = "1.0.2"

[[deps.Unicode]]
uuid = "4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"

[[deps.XML2_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Libiconv_jll", "Pkg", "Zlib_jll"]
git-tree-sha1 = "93c41695bc1c08c46c5899f4fe06d6ead504bb73"
uuid = "02c8fc9c-b97f-50b9-bbe4-9be30ff0a78a"
version = "2.10.3+0"

[[deps.XSLT_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Libgcrypt_jll", "Libgpg_error_jll", "Libiconv_jll", "Pkg", "XML2_jll", "Zlib_jll"]
git-tree-sha1 = "91844873c4085240b95e795f692c4cec4d805f8a"
uuid = "aed1982a-8fda-507f-9586-7b0439959a61"
version = "1.1.34+0"

[[deps.Xorg_libX11_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg", "Xorg_libxcb_jll", "Xorg_xtrans_jll"]
git-tree-sha1 = "5be649d550f3f4b95308bf0183b82e2582876527"
uuid = "4f6342f7-b3d2-589e-9d20-edeb45f2b2bc"
version = "1.6.9+4"

[[deps.Xorg_libXau_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "4e490d5c960c314f33885790ed410ff3a94ce67e"
uuid = "0c0b7dd1-d40b-584c-a123-a41640f87eec"
version = "1.0.9+4"

[[deps.Xorg_libXdmcp_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "4fe47bd2247248125c428978740e18a681372dd4"
uuid = "a3789734-cfe1-5b06-b2d0-1dd0d9d62d05"
version = "1.1.3+4"

[[deps.Xorg_libXext_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg", "Xorg_libX11_jll"]
git-tree-sha1 = "b7c0aa8c376b31e4852b360222848637f481f8c3"
uuid = "1082639a-0dae-5f34-9b06-72781eeb8cb3"
version = "1.3.4+4"

[[deps.Xorg_libXrender_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg", "Xorg_libX11_jll"]
git-tree-sha1 = "19560f30fd49f4d4efbe7002a1037f8c43d43b96"
uuid = "ea2f1a96-1ddc-540d-b46f-429655e07cfa"
version = "0.9.10+4"

[[deps.Xorg_libpthread_stubs_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "6783737e45d3c59a4a4c4091f5f88cdcf0908cbb"
uuid = "14d82f49-176c-5ed1-bb49-ad3f5cbd8c74"
version = "0.1.0+3"

[[deps.Xorg_libxcb_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg", "XSLT_jll", "Xorg_libXau_jll", "Xorg_libXdmcp_jll", "Xorg_libpthread_stubs_jll"]
git-tree-sha1 = "daf17f441228e7a3833846cd048892861cff16d6"
uuid = "c7cfdc94-dc32-55de-ac96-5a1b8d977c5b"
version = "1.13.0+3"

[[deps.Xorg_xtrans_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "79c31e7844f6ecf779705fbc12146eb190b7d845"
uuid = "c5fb5394-a638-5e4d-96e5-b29de1b5cf10"
version = "1.4.0+3"

[[deps.Zlib_jll]]
deps = ["Libdl"]
uuid = "83775a58-1f1d-513f-b197-d71354ab007a"
version = "1.2.12+3"

[[deps.Zstd_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl"]
git-tree-sha1 = "c6edfe154ad7b313c01aceca188c05c835c67360"
uuid = "3161d3a3-bdf6-5164-811a-617609db77b4"
version = "1.5.4+0"

[[deps.libblastrampoline_jll]]
deps = ["Artifacts", "Libdl", "OpenBLAS_jll"]
uuid = "8e850b90-86db-534c-a0d3-1478176c7d93"
version = "5.1.1+0"

[[deps.libpng_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg", "Zlib_jll"]
git-tree-sha1 = "94d180a6d2b5e55e447e2d27a29ed04fe79eb30c"
uuid = "b53b4c65-9356-5827-b1ea-8c7a1a84506f"
version = "1.6.38+0"

[[deps.nghttp2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850ede-7688-5339-a07c-302acd2aaf8d"
version = "1.48.0+0"

[[deps.p7zip_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "3f19e933-33d8-53b3-aaab-bd5110c3b7a0"
version = "17.4.0+0"
"""

# ╔═╡ Cell order:
# ╠═7e72f1fc-345a-4a2d-b03b-8a7549ef6efc
# ╠═35c21158-fc55-45f6-930d-7b82c2c0685d
# ╟─d9d53d21-09ee-47cd-b661-8787de32f2c1
# ╟─7608a5c1-20b1-4d49-b12b-a8f2daef192b
# ╟─842ec98f-505a-4873-9c64-725e2f92cbb9
# ╟─78da0510-bf64-460e-82e7-59ba51c7c7f5
# ╟─b741a0ec-726e-4ca5-98bf-10a03cdd2d57
# ╟─4509e5b8-8d54-47e1-9ba7-b4929fd2d2fc
# ╟─32a104fe-bf42-4980-887e-213b904e4d9b
# ╟─f9089736-3744-4382-8bc0-68fc04b3cddb
# ╠═aa9782b5-88be-43a2-b1e1-d68f289a8fec
# ╠═7df1cd87-40fa-45c1-9d85-1d491c414a18
# ╠═092331da-31a4-403d-b0cb-6e7705c6d81b
# ╠═3d201819-788b-4d90-b3a6-5483fc16ca81
# ╟─5bbb5349-534a-48e2-8da5-08527784bc87
# ╟─8037f78d-8938-42fc-98a2-210b442c00f0
# ╟─7883ecc5-b01f-49d3-98c0-67676701e90e
# ╟─5dd62dd3-fc67-4043-9579-aea1b1a922a9
# ╟─ad441089-505f-4da2-a345-548e8c4dd7d2
# ╟─792e9b54-3438-4338-913c-190565d38029
# ╠═0bf44317-45cf-4899-8b1b-dfa1fe018db4
# ╠═461859c0-5f94-469c-a054-4553045bac17
# ╟─9a5bac04-d1d9-49f4-b7c4-b18bfdd436ef
# ╟─68c959c7-b8e9-4992-b4ce-a793d1a34d20
# ╟─6680a1f4-0cc5-4dc8-a0a2-f5b5014c712a
# ╟─cad88757-7a23-4c99-84fe-219d9337a1f7
# ╟─924555b0-5ddc-4ee5-ad32-4696f9fb47e4
# ╠═dce75e41-274b-4e6a-8949-5caaeef7238a
# ╠═1f66502a-bfbe-407f-b869-142f446dfdf6
# ╠═329b24c6-fd22-4565-86f6-0881cb11942f
# ╟─1bc87b69-a59c-4074-b57d-011bf5e3df73
# ╠═68b24556-4731-4b8f-b8a6-7aa7ffa38a92
# ╟─b6300fcc-8073-4487-80a2-8739123c1469
# ╠═a26fd943-dd6c-4e42-b6b0-5c9a17f31b19
# ╟─8fb45733-6b2b-428a-9536-fe6b6e2f2aa3
# ╠═58867c8d-af21-48e9-ab0c-4472711e8eb0
# ╠═1547ff9a-0fa8-4295-94dd-73bd3678129f
# ╠═848e19a7-73bc-40c4-98bb-310b9f9c8079
# ╟─df1f716a-f961-4f6b-821c-e1038f190449
# ╟─27465f25-d6c7-4855-a20f-1142b8cd3e9f
# ╠═aa36d8d7-a7d4-4aa4-b0ee-b07d36cc453b
# ╠═acc8d4d0-a332-478f-8630-b22a10e7063b
# ╠═3c7cddb2-72c6-45d1-a902-f66cb67d2835
# ╠═70e78f3d-a261-43b1-a590-966c7c96021c
# ╟─fe682b63-2a06-4c32-8dc0-2f99ba48a873
# ╠═f408a310-fce3-4876-819e-3457037bd48f
# ╟─ae30bfd8-6b42-4aa7-90f2-e7303b359b94
# ╠═5bdd9d83-3911-4ab5-aefb-5ead429ac5a5
# ╠═1807eb3a-ce0b-46fe-8c70-fa4af3d9ebad
# ╠═a3bf8549-fff8-4423-8a87-a81cb21f9eb1
# ╟─010a12e2-1abc-4471-a81b-005c30578e63
# ╠═dcaeb6a8-78d1-11ec-24fb-4509de0a7d7b
# ╠═442255bc-4d49-4602-b0d4-a935871a9fe8
# ╠═da873791-517d-4ac3-80f8-ceae5808be24
# ╠═322d1562-2197-4131-bd17-93aed063e55c
# ╟─cf99206b-8a78-40de-bd0d-20bb37ec0b09
# ╠═2bf78ef8-8fc5-4e0b-a7c0-f72757bae6f6
# ╟─3d1cd3b5-66f5-44a8-805a-496e801be858
# ╟─1040f2b8-3999-46fb-9e3d-c163264a4f8a
# ╠═f71dbf67-c6c2-444b-acf4-0569ee85bc6b
# ╠═565af43c-8b85-4ab4-b72d-ac9560efd4fc
# ╠═3e2460ec-102a-4d3c-a4c5-5d6c6e2193ec
# ╠═82d3a20f-ea2b-47e6-96df-45fa568da9f8
# ╟─4dd5df1f-f0bc-49ec-a533-4498ed17d223
# ╠═208932c4-a57b-487d-9d3b-f165b4a4a4ed
# ╠═7e6ae5d6-ff89-45f5-914a-c58d3e185041
# ╠═6702fde2-8847-407b-9d69-8e099374d6ce
# ╟─b338591d-cc11-4e9e-827e-7fcee5b2d38b
# ╠═b1350eb1-059e-4f83-a539-2e2befc3dabb
# ╠═44eddeed-1763-4c04-b213-b7469983286d
# ╠═1161cc82-6b2d-42e0-99fe-2dfb1a2d00b6
# ╠═d7dd7859-9489-4bfc-bc77-edec76fe96f2
# ╟─ce416101-f2e1-4b67-a166-b099325c3be2
# ╟─6428269b-4821-48a3-b46b-38a06bf9aa1a
# ╟─d974f740-2c3e-4225-bed8-f444bccde910
# ╟─d06052d3-07c3-43b6-909d-b31b06097fd3
# ╟─0d000f59-ecb2-4fc9-9f21-c60eac17b3bf
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
